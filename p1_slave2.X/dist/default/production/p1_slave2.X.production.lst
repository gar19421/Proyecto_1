

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Aug 24 23:56:44 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  000E                     	;# 
   228  000F                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0014                     	;# 
   234  0015                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001D                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  0081                     	;# 
   248  0085                     	;# 
   249  0086                     	;# 
   250  0087                     	;# 
   251  0088                     	;# 
   252  0089                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  008F                     	;# 
   257  0090                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0094                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0097                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009A                     	;# 
   270  009B                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  009F                     	;# 
   275  0105                     	;# 
   276  0107                     	;# 
   277  0108                     	;# 
   278  0109                     	;# 
   279  010C                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  010F                     	;# 
   284  0185                     	;# 
   285  0187                     	;# 
   286  0188                     	;# 
   287  0189                     	;# 
   288  018C                     	;# 
   289  018D                     	;# 
   290  0005                     _PORTAbits	set	5
   291  000B                     _INTCONbits	set	11
   292  0009                     _PORTE	set	9
   293  0008                     _PORTD	set	8
   294  0007                     _PORTC	set	7
   295  0006                     _PORTB	set	6
   296  0005                     _PORTA	set	5
   297  0014                     _SSPCONbits	set	20
   298  001E                     _ADRESH	set	30
   299  000C                     _PIR1bits	set	12
   300  001F                     _ADCON0bits	set	31
   301  0013                     _SSPBUF	set	19
   302  0014                     _SSPCON	set	20
   303  0063                     _SSPIF	set	99
   304  005E                     _PEIE	set	94
   305  005F                     _GIE	set	95
   306  0085                     _TRISAbits	set	133
   307  008F                     _OSCCONbits	set	143
   308  0086                     _TRISB	set	134
   309  0089                     _TRISE	set	137
   310  0088                     _TRISD	set	136
   311  0085                     _TRISA	set	133
   312  0094                     _SSPSTATbits	set	148
   313  008C                     _PIE1bits	set	140
   314  009F                     _ADCON1bits	set	159
   315  0091                     _SSPCON2bits	set	145
   316  0087                     _TRISCbits	set	135
   317  0094                     _SSPSTAT	set	148
   318  0093                     _SSPADD	set	147
   319  0091                     _SSPCON2	set	145
   320  04A0                     _BF	set	1184
   321  0463                     _SSPIE	set	1123
   322  043C                     _TRISC4	set	1084
   323  043B                     _TRISC3	set	1083
   324  0189                     _ANSELH	set	393
   325  0188                     _ANSEL	set	392
   326                           
   327                           	psect	cinit
   328  000F                     start_initialization:	
   329                           ; #config settings
   330                           
   331  000F                     __initialization:
   332                           
   333                           ; Clear objects allocated to COMMON
   334  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   335  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   336  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   337  0012  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   338                           
   339                           ; Clear objects allocated to BANK0
   340  0013  1283               	bcf	3,5	;RP0=0, select bank0
   341  0014  1303               	bcf	3,6	;RP1=0, select bank0
   342  0015  01AD               	clrf	__pbssBANK0& (0+127)
   343  0016  01AE               	clrf	(__pbssBANK0+1)& (0+127)
   344  0017  01AF               	clrf	(__pbssBANK0+2)& (0+127)
   345  0018  01B0               	clrf	(__pbssBANK0+3)& (0+127)
   346  0019  01B1               	clrf	(__pbssBANK0+4)& (0+127)
   347  001A  01B2               	clrf	(__pbssBANK0+5)& (0+127)
   348  001B  01B3               	clrf	(__pbssBANK0+6)& (0+127)
   349  001C  01B4               	clrf	(__pbssBANK0+7)& (0+127)
   350  001D  01B5               	clrf	(__pbssBANK0+8)& (0+127)
   351  001E                     end_of_initialization:	
   352                           ;End of C runtime variable initialization code
   353                           
   354  001E                     __end_of__initialization:
   355  001E  0183               	clrf	3
   356  001F  120A  118A  2822   	ljmp	_main	;jump to C main() function
   357                           
   358                           	psect	bssCOMMON
   359  0077                     __pbssCOMMON:
   360  0077                     _RH_byte1:
   361  0077                     	ds	1
   362  0078                     _T_byte1:
   363  0078                     	ds	1
   364  0079                     _uniT:
   365  0079                     	ds	1
   366  007A                     _Check:
   367  007A                     	ds	1
   368                           
   369                           	psect	bssBANK0
   370  002D                     __pbssBANK0:
   371  002D                     _Sum:
   372  002D                     	ds	2
   373  002F                     _RH_byte2:
   374  002F                     	ds	1
   375  0030                     _T_byte2:
   376  0030                     	ds	1
   377  0031                     _decHR:
   378  0031                     	ds	1
   379  0032                     _uniHR:
   380  0032                     	ds	1
   381  0033                     _decT:
   382  0033                     	ds	1
   383  0034                     _var:
   384  0034                     	ds	1
   385  0035                     _valor_ADC:
   386  0035                     	ds	1
   387                           
   388                           	psect	cstackCOMMON
   389  0070                     __pcstackCOMMON:
   390  0070                     ?_setup:
   391  0070                     ?_StartSignal:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0070                     ?_CheckResponse:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0070                     ?_ReadData:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0070                     ?_I2C_Slave_Init:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ?_isr:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ??_isr:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0070                     ?_main:	
   410                           ; 1 bytes @ 0x0
   411                           
   412                           
   413                           ; 1 bytes @ 0x0
   414  0070                     	ds	3
   415  0073                     ??_StartSignal:
   416  0073                     ??_CheckResponse:	
   417                           ; 1 bytes @ 0x3
   418                           
   419  0073                     ??_ReadData:	
   420                           ; 1 bytes @ 0x3
   421                           
   422  0073                     ??_I2C_Slave_Init:	
   423                           ; 1 bytes @ 0x3
   424                           
   425  0073                     ?___awdiv:	
   426                           ; 1 bytes @ 0x3
   427                           
   428  0073                     ?___awmod:	
   429                           ; 2 bytes @ 0x3
   430                           
   431  0073                     I2C_Slave_Init@address:	
   432                           ; 2 bytes @ 0x3
   433                           
   434  0073                     ___awdiv@divisor:	
   435                           ; 1 bytes @ 0x3
   436                           
   437  0073                     ___awmod@divisor:	
   438                           ; 2 bytes @ 0x3
   439                           
   440                           
   441                           ; 2 bytes @ 0x3
   442  0073                     	ds	1
   443  0074                     ??_setup:
   444                           
   445                           ; 1 bytes @ 0x4
   446  0074                     	ds	1
   447  0075                     ReadData@i:
   448  0075                     ___awdiv@dividend:	
   449                           ; 1 bytes @ 0x5
   450                           
   451  0075                     ___awmod@dividend:	
   452                           ; 2 bytes @ 0x5
   453                           
   454                           
   455                           ; 2 bytes @ 0x5
   456  0075                     	ds	1
   457  0076                     ReadData@j:
   458                           
   459                           ; 1 bytes @ 0x6
   460  0076                     	ds	1
   461                           
   462                           	psect	cstackBANK0
   463  0020                     __pcstackBANK0:
   464  0020                     ??___awdiv:
   465  0020                     ??___awmod:	
   466                           ; 1 bytes @ 0x0
   467                           
   468                           
   469                           ; 1 bytes @ 0x0
   470  0020                     	ds	1
   471  0021                     ___awdiv@counter:
   472  0021                     ___awmod@counter:	
   473                           ; 1 bytes @ 0x1
   474                           
   475                           
   476                           ; 1 bytes @ 0x1
   477  0021                     	ds	1
   478  0022                     ___awdiv@sign:
   479  0022                     ___awmod@sign:	
   480                           ; 1 bytes @ 0x2
   481                           
   482                           
   483                           ; 1 bytes @ 0x2
   484  0022                     	ds	1
   485  0023                     ___awdiv@quotient:
   486                           
   487                           ; 2 bytes @ 0x3
   488  0023                     	ds	2
   489  0025                     ??_main:
   490                           
   491                           ; 1 bytes @ 0x5
   492  0025                     	ds	8
   493                           
   494                           	psect	maintext
   495  0022                     __pmaintext:	
   496 ;;
   497 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   498 ;;
   499 ;; *************** function _main *****************
   500 ;; Defined at:
   501 ;;		line 114 in file "slave2_main.c"
   502 ;; Parameters:    Size  Location     Type
   503 ;;		None
   504 ;; Auto vars:     Size  Location     Type
   505 ;;		None
   506 ;; Return value:  Size  Location     Type
   507 ;;                  1    wreg      void 
   508 ;; Registers used:
   509 ;;		wreg, status,2, status,0, pclath, cstack
   510 ;; Tracked objects:
   511 ;;		On entry : B00/0
   512 ;;		On exit  : 0/0
   513 ;;		Unchanged: 0/0
   514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   515 ;;      Params:         0       0       0       0       0
   516 ;;      Locals:         0       0       0       0       0
   517 ;;      Temps:          0       8       0       0       0
   518 ;;      Totals:         0       8       0       0       0
   519 ;;Total ram usage:        8 bytes
   520 ;; Hardware stack levels required when called:    3
   521 ;; This function calls:
   522 ;;		_CheckResponse
   523 ;;		_ReadData
   524 ;;		_StartSignal
   525 ;;		___awdiv
   526 ;;		___awmod
   527 ;;		_setup
   528 ;; This function is called by:
   529 ;;		Startup code after reset
   530 ;; This function uses a non-reentrant model
   531 ;;
   532                           
   533                           
   534                           ;psect for function _main
   535  0022                     _main:
   536  0022                     l1391:	
   537                           ;incstack = 0
   538                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   539                           
   540                           
   541                           ;slave2_main.c: 115:     setup();
   542  0022  120A  118A  2275  120A  118A  	fcall	_setup
   543  0027                     l175:	
   544                           ;slave2_main.c: 117:     while(1){
   545                           
   546                           
   547                           ;slave2_main.c: 122:         StartSignal();
   548  0027  120A  118A  22B3  120A  118A  	fcall	_StartSignal
   549                           
   550                           ;slave2_main.c: 123:         CheckResponse();
   551  002C  120A  118A  2295  120A  118A  	fcall	_CheckResponse
   552  0031                     l1393:
   553                           
   554                           ;slave2_main.c: 124:         if(Check == 1)
   555  0031  037A               	decf	_Check,w
   556  0032  1D03               	btfss	3,2
   557  0033  2835               	goto	u1001
   558  0034  2836               	goto	u1000
   559  0035                     u1001:
   560  0035  28FD               	goto	l1409
   561  0036                     u1000:
   562  0036                     l1395:
   563                           
   564                           ;slave2_main.c: 125:         {;slave2_main.c: 126:           RH_byte1 = ReadData();
   565  0036  120A  118A  2233  120A  118A  	fcall	_ReadData
   566  003B  1283               	bcf	3,5	;RP0=0, select bank0
   567  003C  1303               	bcf	3,6	;RP1=0, select bank0
   568  003D  00A5               	movwf	??_main
   569  003E  0825               	movf	??_main,w
   570  003F  00F7               	movwf	_RH_byte1
   571                           
   572                           ;slave2_main.c: 127:           RH_byte2 = ReadData();
   573  0040  120A  118A  2233  120A  118A  	fcall	_ReadData
   574  0045  1283               	bcf	3,5	;RP0=0, select bank0
   575  0046  1303               	bcf	3,6	;RP1=0, select bank0
   576  0047  00A5               	movwf	??_main
   577  0048  0825               	movf	??_main,w
   578  0049  00AF               	movwf	_RH_byte2
   579                           
   580                           ;slave2_main.c: 128:           T_byte1 = ReadData();
   581  004A  120A  118A  2233  120A  118A  	fcall	_ReadData
   582  004F  1283               	bcf	3,5	;RP0=0, select bank0
   583  0050  1303               	bcf	3,6	;RP1=0, select bank0
   584  0051  00A5               	movwf	??_main
   585  0052  0825               	movf	??_main,w
   586  0053  00F8               	movwf	_T_byte1
   587                           
   588                           ;slave2_main.c: 129:           T_byte2 = ReadData();
   589  0054  120A  118A  2233  120A  118A  	fcall	_ReadData
   590  0059  1283               	bcf	3,5	;RP0=0, select bank0
   591  005A  1303               	bcf	3,6	;RP1=0, select bank0
   592  005B  00A5               	movwf	??_main
   593  005C  0825               	movf	??_main,w
   594  005D  00B0               	movwf	_T_byte2
   595                           
   596                           ;slave2_main.c: 130:           Sum = ReadData();
   597  005E  120A  118A  2233  120A  118A  	fcall	_ReadData
   598  0063  1283               	bcf	3,5	;RP0=0, select bank0
   599  0064  1303               	bcf	3,6	;RP1=0, select bank0
   600  0065  00A5               	movwf	??_main
   601  0066  01A6               	clrf	??_main+1
   602  0067  0825               	movf	??_main,w
   603  0068  00AD               	movwf	_Sum
   604  0069  0826               	movf	??_main+1,w
   605  006A  00AE               	movwf	_Sum+1
   606  006B                     l1397:
   607                           
   608                           ;slave2_main.c: 132:           if(Sum == ((RH_byte1+RH_byte2+T_byte1+T_byte2) & 0XFF))
   609  006B  0877               	movf	_RH_byte1,w
   610  006C  072F               	addwf	_RH_byte2,w
   611  006D  00A5               	movwf	??_main
   612  006E  01A6               	clrf	??_main+1
   613  006F  0DA6               	rlf	??_main+1,f
   614  0070  0878               	movf	_T_byte1,w
   615  0071  0725               	addwf	??_main,w
   616  0072  00A7               	movwf	??_main+2
   617  0073  3000               	movlw	0
   618  0074  1803               	skipnc
   619  0075  3001               	movlw	1
   620  0076  0726               	addwf	??_main+1,w
   621  0077  00A8               	movwf	??_main+3
   622  0078  0830               	movf	_T_byte2,w
   623  0079  0727               	addwf	??_main+2,w
   624  007A  00A9               	movwf	??_main+4
   625  007B  3000               	movlw	0
   626  007C  1803               	skipnc
   627  007D  3001               	movlw	1
   628  007E  0728               	addwf	??_main+3,w
   629  007F  00AA               	movwf	??_main+5
   630  0080  30FF               	movlw	255
   631  0081  0529               	andwf	??_main+4,w
   632  0082  00AB               	movwf	??_main+6
   633  0083  3000               	movlw	0
   634  0084  052A               	andwf	??_main+5,w
   635  0085  00AC               	movwf	??_main+7
   636  0086  082E               	movf	_Sum+1,w
   637  0087  062C               	xorwf	??_main+7,w
   638  0088  1D03               	skipz
   639  0089  288C               	goto	u1015
   640  008A  082D               	movf	_Sum,w
   641  008B  062B               	xorwf	??_main+6,w
   642  008C                     u1015:
   643  008C  1D03               	skipz
   644  008D  288F               	goto	u1011
   645  008E  2890               	goto	u1010
   646  008F                     u1011:
   647  008F  28FE               	goto	l1411
   648  0090                     u1010:
   649  0090                     l1399:
   650                           
   651                           ;slave2_main.c: 133:           {;slave2_main.c: 134:            decHR=RH_byte1/10;
   652  0090  300A               	movlw	10
   653  0091  00F3               	movwf	___awdiv@divisor
   654  0092  3000               	movlw	0
   655  0093  00F4               	movwf	___awdiv@divisor+1
   656  0094  0877               	movf	_RH_byte1,w
   657  0095  00A5               	movwf	??_main
   658  0096  01A6               	clrf	??_main+1
   659  0097  0825               	movf	??_main,w
   660  0098  00F5               	movwf	___awdiv@dividend
   661  0099  0826               	movf	??_main+1,w
   662  009A  00F6               	movwf	___awdiv@dividend+1
   663  009B  120A  118A  2110  120A  118A  	fcall	___awdiv
   664  00A0  0873               	movf	?___awdiv,w
   665  00A1  1283               	bcf	3,5	;RP0=0, select bank0
   666  00A2  1303               	bcf	3,6	;RP1=0, select bank0
   667  00A3  00A7               	movwf	??_main+2
   668  00A4  0827               	movf	??_main+2,w
   669  00A5  00B1               	movwf	_decHR
   670                           
   671                           ;slave2_main.c: 135:            uniHR=RH_byte1%10;
   672  00A6  300A               	movlw	10
   673  00A7  00F3               	movwf	___awmod@divisor
   674  00A8  3000               	movlw	0
   675  00A9  00F4               	movwf	___awmod@divisor+1
   676  00AA  0877               	movf	_RH_byte1,w
   677  00AB  00A5               	movwf	??_main
   678  00AC  01A6               	clrf	??_main+1
   679  00AD  0825               	movf	??_main,w
   680  00AE  00F5               	movwf	___awmod@dividend
   681  00AF  0826               	movf	??_main+1,w
   682  00B0  00F6               	movwf	___awmod@dividend+1
   683  00B1  120A  118A  21D8  120A  118A  	fcall	___awmod
   684  00B6  0873               	movf	?___awmod,w
   685  00B7  1283               	bcf	3,5	;RP0=0, select bank0
   686  00B8  1303               	bcf	3,6	;RP1=0, select bank0
   687  00B9  00A7               	movwf	??_main+2
   688  00BA  0827               	movf	??_main+2,w
   689  00BB  00B2               	movwf	_uniHR
   690                           
   691                           ;slave2_main.c: 136:            decT=T_byte1/10;
   692  00BC  300A               	movlw	10
   693  00BD  00F3               	movwf	___awdiv@divisor
   694  00BE  3000               	movlw	0
   695  00BF  00F4               	movwf	___awdiv@divisor+1
   696  00C0  0878               	movf	_T_byte1,w
   697  00C1  00A5               	movwf	??_main
   698  00C2  01A6               	clrf	??_main+1
   699  00C3  0825               	movf	??_main,w
   700  00C4  00F5               	movwf	___awdiv@dividend
   701  00C5  0826               	movf	??_main+1,w
   702  00C6  00F6               	movwf	___awdiv@dividend+1
   703  00C7  120A  118A  2110  120A  118A  	fcall	___awdiv
   704  00CC  0873               	movf	?___awdiv,w
   705  00CD  1283               	bcf	3,5	;RP0=0, select bank0
   706  00CE  1303               	bcf	3,6	;RP1=0, select bank0
   707  00CF  00A7               	movwf	??_main+2
   708  00D0  0827               	movf	??_main+2,w
   709  00D1  00B3               	movwf	_decT
   710                           
   711                           ;slave2_main.c: 137:            uniT=T_byte1%10;
   712  00D2  300A               	movlw	10
   713  00D3  00F3               	movwf	___awmod@divisor
   714  00D4  3000               	movlw	0
   715  00D5  00F4               	movwf	___awmod@divisor+1
   716  00D6  0878               	movf	_T_byte1,w
   717  00D7  00A5               	movwf	??_main
   718  00D8  01A6               	clrf	??_main+1
   719  00D9  0825               	movf	??_main,w
   720  00DA  00F5               	movwf	___awmod@dividend
   721  00DB  0826               	movf	??_main+1,w
   722  00DC  00F6               	movwf	___awmod@dividend+1
   723  00DD  120A  118A  21D8  120A  118A  	fcall	___awmod
   724  00E2  0873               	movf	?___awmod,w
   725  00E3  1283               	bcf	3,5	;RP0=0, select bank0
   726  00E4  1303               	bcf	3,6	;RP1=0, select bank0
   727  00E5  00A7               	movwf	??_main+2
   728  00E6  0827               	movf	??_main+2,w
   729  00E7  00F9               	movwf	_uniT
   730  00E8                     l1401:
   731                           
   732                           ;slave2_main.c: 139:            decHR=decHR+0x30;
   733  00E8  0831               	movf	_decHR,w
   734  00E9  3E30               	addlw	48
   735  00EA  00A5               	movwf	??_main
   736  00EB  0825               	movf	??_main,w
   737  00EC  00B1               	movwf	_decHR
   738  00ED                     l1403:
   739                           
   740                           ;slave2_main.c: 140:            uniHR=uniHR+0x30;
   741  00ED  0832               	movf	_uniHR,w
   742  00EE  3E30               	addlw	48
   743  00EF  00A5               	movwf	??_main
   744  00F0  0825               	movf	??_main,w
   745  00F1  00B2               	movwf	_uniHR
   746  00F2                     l1405:
   747                           
   748                           ;slave2_main.c: 141:            decT=decT+0x30;
   749  00F2  0833               	movf	_decT,w
   750  00F3  3E30               	addlw	48
   751  00F4  00A5               	movwf	??_main
   752  00F5  0825               	movf	??_main,w
   753  00F6  00B3               	movwf	_decT
   754  00F7                     l1407:
   755                           
   756                           ;slave2_main.c: 142:            uniT=uniT+0x30;
   757  00F7  0879               	movf	_uniT,w
   758  00F8  3E30               	addlw	48
   759  00F9  00A5               	movwf	??_main
   760  00FA  0825               	movf	??_main,w
   761  00FB  00F9               	movwf	_uniT
   762  00FC  28FE               	goto	l1411
   763  00FD                     l1409:
   764                           
   765                           ;slave2_main.c: 146:             T_byte1 = 0;
   766  00FD  01F8               	clrf	_T_byte1
   767  00FE                     l1411:
   768                           
   769                           ;slave2_main.c: 149:         _delay((unsigned long)((1000)*(8000000/4000.0)));
   770  00FE  300B               	movlw	11
   771  00FF  1283               	bcf	3,5	;RP0=0, select bank0
   772  0100  1303               	bcf	3,6	;RP1=0, select bank0
   773  0101  00A7               	movwf	??_main+2
   774  0102  3026               	movlw	38
   775  0103  00A6               	movwf	??_main+1
   776  0104  305D               	movlw	93
   777  0105  00A5               	movwf	??_main
   778  0106                     u1027:
   779  0106  0BA5               	decfsz	??_main,f
   780  0107  2906               	goto	u1027
   781  0108  0BA6               	decfsz	??_main+1,f
   782  0109  2906               	goto	u1027
   783  010A  0BA7               	decfsz	??_main+2,f
   784  010B  2906               	goto	u1027
   785  010C  2827               	goto	l175
   786  010D  120A  118A  280C   	ljmp	start
   787  0110                     __end_of_main:
   788                           
   789                           	psect	text1
   790  0275                     __ptext1:	
   791 ;; *************** function _setup *****************
   792 ;; Defined at:
   793 ;;		line 154 in file "slave2_main.c"
   794 ;; Parameters:    Size  Location     Type
   795 ;;		None
   796 ;; Auto vars:     Size  Location     Type
   797 ;;		None
   798 ;; Return value:  Size  Location     Type
   799 ;;                  1    wreg      void 
   800 ;; Registers used:
   801 ;;		wreg, status,2, status,0, pclath, cstack
   802 ;; Tracked objects:
   803 ;;		On entry : 0/0
   804 ;;		On exit  : 0/0
   805 ;;		Unchanged: 0/0
   806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   807 ;;      Params:         0       0       0       0       0
   808 ;;      Locals:         0       0       0       0       0
   809 ;;      Temps:          0       0       0       0       0
   810 ;;      Totals:         0       0       0       0       0
   811 ;;Total ram usage:        0 bytes
   812 ;; Hardware stack levels used:    1
   813 ;; Hardware stack levels required when called:    2
   814 ;; This function calls:
   815 ;;		_I2C_Slave_Init
   816 ;; This function is called by:
   817 ;;		_main
   818 ;; This function uses a non-reentrant model
   819 ;;
   820                           
   821                           
   822                           ;psect for function _setup
   823  0275                     _setup:
   824  0275                     l1111:	
   825                           ;incstack = 0
   826                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   827                           
   828                           
   829                           ;slave2_main.c: 156:     ANSEL = 0B0000000;
   830  0275  1683               	bsf	3,5	;RP0=1, select bank3
   831  0276  1703               	bsf	3,6	;RP1=1, select bank3
   832  0277  0188               	clrf	8	;volatile
   833                           
   834                           ;slave2_main.c: 157:     ANSELH = 0X00;
   835  0278  0189               	clrf	9	;volatile
   836                           
   837                           ;slave2_main.c: 159:     TRISA = 0B0000000;
   838  0279  1683               	bsf	3,5	;RP0=1, select bank1
   839  027A  1303               	bcf	3,6	;RP1=0, select bank1
   840  027B  0185               	clrf	5	;volatile
   841                           
   842                           ;slave2_main.c: 160:     TRISD = 0X00;
   843  027C  0188               	clrf	8	;volatile
   844                           
   845                           ;slave2_main.c: 161:     TRISE = 0X00;
   846  027D  0189               	clrf	9	;volatile
   847                           
   848                           ;slave2_main.c: 162:     TRISB = 0X00;
   849  027E  0186               	clrf	6	;volatile
   850                           
   851                           ;slave2_main.c: 164:     PORTA = 0X00;
   852  027F  1283               	bcf	3,5	;RP0=0, select bank0
   853  0280  1303               	bcf	3,6	;RP1=0, select bank0
   854  0281  0185               	clrf	5	;volatile
   855                           
   856                           ;slave2_main.c: 165:     PORTB = 0X00;
   857  0282  0186               	clrf	6	;volatile
   858                           
   859                           ;slave2_main.c: 166:     PORTC = 0X00;
   860  0283  0187               	clrf	7	;volatile
   861                           
   862                           ;slave2_main.c: 167:     PORTD = 0X00;
   863  0284  0188               	clrf	8	;volatile
   864                           
   865                           ;slave2_main.c: 168:     PORTE = 0X00;
   866  0285  0189               	clrf	9	;volatile
   867  0286                     l1113:
   868                           
   869                           ;slave2_main.c: 171:     OSCCONbits.IRCF2 = 1;
   870  0286  1683               	bsf	3,5	;RP0=1, select bank1
   871  0287  1303               	bcf	3,6	;RP1=0, select bank1
   872  0288  170F               	bsf	15,6	;volatile
   873  0289                     l1115:
   874                           
   875                           ;slave2_main.c: 172:     OSCCONbits.IRCF1 = 1;
   876  0289  168F               	bsf	15,5	;volatile
   877  028A                     l1117:
   878                           
   879                           ;slave2_main.c: 173:     OSCCONbits.IRCF0 = 1;
   880  028A  160F               	bsf	15,4	;volatile
   881  028B                     l1119:
   882                           
   883                           ;slave2_main.c: 174:     OSCCONbits.SCS = 1;
   884  028B  140F               	bsf	15,0	;volatile
   885  028C                     l1121:
   886                           
   887                           ;slave2_main.c: 177:     INTCONbits.GIE = 1;
   888  028C  178B               	bsf	11,7	;volatile
   889  028D                     l1123:
   890                           
   891                           ;slave2_main.c: 178:     INTCONbits.PEIE = 1;
   892  028D  170B               	bsf	11,6	;volatile
   893  028E                     l1125:
   894                           
   895                           ;slave2_main.c: 179:     I2C_Slave_Init(0x80);
   896  028E  3080               	movlw	128
   897  028F  120A  118A  22CE  120A  118A  	fcall	_I2C_Slave_Init
   898  0294                     l184:
   899  0294  0008               	return
   900  0295                     __end_of_setup:
   901                           
   902                           	psect	text2
   903  02CE                     __ptext2:	
   904 ;; *************** function _I2C_Slave_Init *****************
   905 ;; Defined at:
   906 ;;		line 93 in file "I2C.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;  address         1    wreg     unsigned char 
   909 ;; Auto vars:     Size  Location     Type
   910 ;;  address         1    3[COMMON] unsigned char 
   911 ;; Return value:  Size  Location     Type
   912 ;;                  1    wreg      void 
   913 ;; Registers used:
   914 ;;		wreg
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   920 ;;      Params:         0       0       0       0       0
   921 ;;      Locals:         1       0       0       0       0
   922 ;;      Temps:          0       0       0       0       0
   923 ;;      Totals:         1       0       0       0       0
   924 ;;Total ram usage:        1 bytes
   925 ;; Hardware stack levels used:    1
   926 ;; Hardware stack levels required when called:    1
   927 ;; This function calls:
   928 ;;		Nothing
   929 ;; This function is called by:
   930 ;;		_setup
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934                           
   935                           ;psect for function _I2C_Slave_Init
   936  02CE                     _I2C_Slave_Init:
   937                           
   938                           ;incstack = 0
   939                           ; Regs used in _I2C_Slave_Init: [wreg]
   940                           ;I2C_Slave_Init@address stored from wreg
   941  02CE  00F3               	movwf	I2C_Slave_Init@address
   942  02CF                     l1097:
   943                           
   944                           ;I2C.c: 93: void I2C_Slave_Init(uint8_t address);I2C.c: 94: {;I2C.c: 95:     SSPADD = ad
      +                          dress;
   945  02CF  0873               	movf	I2C_Slave_Init@address,w
   946  02D0  1683               	bsf	3,5	;RP0=1, select bank1
   947  02D1  1303               	bcf	3,6	;RP1=0, select bank1
   948  02D2  0093               	movwf	19	;volatile
   949                           
   950                           ;I2C.c: 96:     SSPCON = 0x36;
   951  02D3  3036               	movlw	54
   952  02D4  1283               	bcf	3,5	;RP0=0, select bank0
   953  02D5  1303               	bcf	3,6	;RP1=0, select bank0
   954  02D6  0094               	movwf	20	;volatile
   955                           
   956                           ;I2C.c: 97:     SSPSTAT = 0x80;
   957  02D7  3080               	movlw	128
   958  02D8  1683               	bsf	3,5	;RP0=1, select bank1
   959  02D9  1303               	bcf	3,6	;RP1=0, select bank1
   960  02DA  0094               	movwf	20	;volatile
   961                           
   962                           ;I2C.c: 98:     SSPCON2 = 0x01;
   963  02DB  3001               	movlw	1
   964  02DC  0091               	movwf	17	;volatile
   965  02DD                     l1099:
   966                           
   967                           ;I2C.c: 99:     TRISC3 = 1;
   968  02DD  1587               	bsf	7,3	;volatile
   969  02DE                     l1101:
   970                           
   971                           ;I2C.c: 100:     TRISC4 = 1;
   972  02DE  1607               	bsf	7,4	;volatile
   973  02DF                     l1103:
   974                           
   975                           ;I2C.c: 101:     GIE = 1;
   976  02DF  178B               	bsf	11,7	;volatile
   977  02E0                     l1105:
   978                           
   979                           ;I2C.c: 102:     PEIE = 1;
   980  02E0  170B               	bsf	11,6	;volatile
   981  02E1                     l1107:
   982                           
   983                           ;I2C.c: 103:     SSPIF = 0;
   984  02E1  1283               	bcf	3,5	;RP0=0, select bank0
   985  02E2  1303               	bcf	3,6	;RP1=0, select bank0
   986  02E3  118C               	bcf	12,3	;volatile
   987  02E4                     l1109:
   988                           
   989                           ;I2C.c: 104:     SSPIE = 1;
   990  02E4  1683               	bsf	3,5	;RP0=1, select bank1
   991  02E5  1303               	bcf	3,6	;RP1=0, select bank1
   992  02E6  158C               	bsf	12,3	;volatile
   993  02E7                     l55:
   994  02E7  0008               	return
   995  02E8                     __end_of_I2C_Slave_Init:
   996                           
   997                           	psect	text3
   998  01D8                     __ptext3:	
   999 ;; *************** function ___awmod *****************
  1000 ;; Defined at:
  1001 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  1002 ;; Parameters:    Size  Location     Type
  1003 ;;  divisor         2    3[COMMON] int 
  1004 ;;  dividend        2    5[COMMON] int 
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;  sign            1    2[BANK0 ] unsigned char 
  1007 ;;  counter         1    1[BANK0 ] unsigned char 
  1008 ;; Return value:  Size  Location     Type
  1009 ;;                  2    3[COMMON] int 
  1010 ;; Registers used:
  1011 ;;		wreg, status,2, status,0
  1012 ;; Tracked objects:
  1013 ;;		On entry : 0/0
  1014 ;;		On exit  : 0/0
  1015 ;;		Unchanged: 0/0
  1016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1017 ;;      Params:         4       0       0       0       0
  1018 ;;      Locals:         0       2       0       0       0
  1019 ;;      Temps:          0       1       0       0       0
  1020 ;;      Totals:         4       3       0       0       0
  1021 ;;Total ram usage:        7 bytes
  1022 ;; Hardware stack levels used:    1
  1023 ;; Hardware stack levels required when called:    1
  1024 ;; This function calls:
  1025 ;;		Nothing
  1026 ;; This function is called by:
  1027 ;;		_main
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031                           
  1032                           ;psect for function ___awmod
  1033  01D8                     ___awmod:
  1034  01D8                     l1353:	
  1035                           ;incstack = 0
  1036                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1037                           
  1038  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  1039  01D9  1303               	bcf	3,6	;RP1=0, select bank0
  1040  01DA  01A2               	clrf	___awmod@sign
  1041  01DB                     l1355:
  1042  01DB  1FF6               	btfss	___awmod@dividend+1,7
  1043  01DC  29DE               	goto	u911
  1044  01DD  29DF               	goto	u910
  1045  01DE                     u911:
  1046  01DE  29E6               	goto	l1361
  1047  01DF                     u910:
  1048  01DF                     l1357:
  1049  01DF  09F5               	comf	___awmod@dividend,f
  1050  01E0  09F6               	comf	___awmod@dividend+1,f
  1051  01E1  0AF5               	incf	___awmod@dividend,f
  1052  01E2  1903               	skipnz
  1053  01E3  0AF6               	incf	___awmod@dividend+1,f
  1054  01E4                     l1359:
  1055  01E4  01A2               	clrf	___awmod@sign
  1056  01E5  0AA2               	incf	___awmod@sign,f
  1057  01E6                     l1361:
  1058  01E6  1FF4               	btfss	___awmod@divisor+1,7
  1059  01E7  29E9               	goto	u921
  1060  01E8  29EA               	goto	u920
  1061  01E9                     u921:
  1062  01E9  29EF               	goto	l1365
  1063  01EA                     u920:
  1064  01EA                     l1363:
  1065  01EA  09F3               	comf	___awmod@divisor,f
  1066  01EB  09F4               	comf	___awmod@divisor+1,f
  1067  01EC  0AF3               	incf	___awmod@divisor,f
  1068  01ED  1903               	skipnz
  1069  01EE  0AF4               	incf	___awmod@divisor+1,f
  1070  01EF                     l1365:
  1071  01EF  0873               	movf	___awmod@divisor,w
  1072  01F0  0474               	iorwf	___awmod@divisor+1,w
  1073  01F1  1903               	btfsc	3,2
  1074  01F2  29F4               	goto	u931
  1075  01F3  29F5               	goto	u930
  1076  01F4                     u931:
  1077  01F4  2A24               	goto	l1383
  1078  01F5                     u930:
  1079  01F5                     l1367:
  1080  01F5  01A1               	clrf	___awmod@counter
  1081  01F6  0AA1               	incf	___awmod@counter,f
  1082  01F7  2A03               	goto	l1373
  1083  01F8                     l1369:
  1084  01F8  3001               	movlw	1
  1085  01F9                     u945:
  1086  01F9  1003               	clrc
  1087  01FA  0DF3               	rlf	___awmod@divisor,f
  1088  01FB  0DF4               	rlf	___awmod@divisor+1,f
  1089  01FC  3EFF               	addlw	-1
  1090  01FD  1D03               	skipz
  1091  01FE  29F9               	goto	u945
  1092  01FF                     l1371:
  1093  01FF  3001               	movlw	1
  1094  0200  00A0               	movwf	??___awmod
  1095  0201  0820               	movf	??___awmod,w
  1096  0202  07A1               	addwf	___awmod@counter,f
  1097  0203                     l1373:
  1098  0203  1FF4               	btfss	___awmod@divisor+1,7
  1099  0204  2A06               	goto	u951
  1100  0205  2A07               	goto	u950
  1101  0206                     u951:
  1102  0206  29F8               	goto	l1369
  1103  0207                     u950:
  1104  0207                     l1375:
  1105  0207  0874               	movf	___awmod@divisor+1,w
  1106  0208  0276               	subwf	___awmod@dividend+1,w
  1107  0209  1D03               	skipz
  1108  020A  2A0D               	goto	u965
  1109  020B  0873               	movf	___awmod@divisor,w
  1110  020C  0275               	subwf	___awmod@dividend,w
  1111  020D                     u965:
  1112  020D  1C03               	skipc
  1113  020E  2A10               	goto	u961
  1114  020F  2A11               	goto	u960
  1115  0210                     u961:
  1116  0210  2A17               	goto	l1379
  1117  0211                     u960:
  1118  0211                     l1377:
  1119  0211  0873               	movf	___awmod@divisor,w
  1120  0212  02F5               	subwf	___awmod@dividend,f
  1121  0213  0874               	movf	___awmod@divisor+1,w
  1122  0214  1C03               	skipc
  1123  0215  03F6               	decf	___awmod@dividend+1,f
  1124  0216  02F6               	subwf	___awmod@dividend+1,f
  1125  0217                     l1379:
  1126  0217  3001               	movlw	1
  1127  0218                     u975:
  1128  0218  1003               	clrc
  1129  0219  0CF4               	rrf	___awmod@divisor+1,f
  1130  021A  0CF3               	rrf	___awmod@divisor,f
  1131  021B  3EFF               	addlw	-1
  1132  021C  1D03               	skipz
  1133  021D  2A18               	goto	u975
  1134  021E                     l1381:
  1135  021E  3001               	movlw	1
  1136  021F  02A1               	subwf	___awmod@counter,f
  1137  0220  1D03               	btfss	3,2
  1138  0221  2A23               	goto	u981
  1139  0222  2A24               	goto	u980
  1140  0223                     u981:
  1141  0223  2A07               	goto	l1375
  1142  0224                     u980:
  1143  0224                     l1383:
  1144  0224  0822               	movf	___awmod@sign,w
  1145  0225  1903               	btfsc	3,2
  1146  0226  2A28               	goto	u991
  1147  0227  2A29               	goto	u990
  1148  0228                     u991:
  1149  0228  2A2E               	goto	l1387
  1150  0229                     u990:
  1151  0229                     l1385:
  1152  0229  09F5               	comf	___awmod@dividend,f
  1153  022A  09F6               	comf	___awmod@dividend+1,f
  1154  022B  0AF5               	incf	___awmod@dividend,f
  1155  022C  1903               	skipnz
  1156  022D  0AF6               	incf	___awmod@dividend+1,f
  1157  022E                     l1387:
  1158  022E  0876               	movf	___awmod@dividend+1,w
  1159  022F  00F4               	movwf	?___awmod+1
  1160  0230  0875               	movf	___awmod@dividend,w
  1161  0231  00F3               	movwf	?___awmod
  1162  0232                     l457:
  1163  0232  0008               	return
  1164  0233                     __end_of___awmod:
  1165                           
  1166                           	psect	text4
  1167  0110                     __ptext4:	
  1168 ;; *************** function ___awdiv *****************
  1169 ;; Defined at:
  1170 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1171 ;; Parameters:    Size  Location     Type
  1172 ;;  divisor         2    3[COMMON] int 
  1173 ;;  dividend        2    5[COMMON] int 
  1174 ;; Auto vars:     Size  Location     Type
  1175 ;;  quotient        2    3[BANK0 ] int 
  1176 ;;  sign            1    2[BANK0 ] unsigned char 
  1177 ;;  counter         1    1[BANK0 ] unsigned char 
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  2    3[COMMON] int 
  1180 ;; Registers used:
  1181 ;;		wreg, status,2, status,0
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1187 ;;      Params:         4       0       0       0       0
  1188 ;;      Locals:         0       4       0       0       0
  1189 ;;      Temps:          0       1       0       0       0
  1190 ;;      Totals:         4       5       0       0       0
  1191 ;;Total ram usage:        9 bytes
  1192 ;; Hardware stack levels used:    1
  1193 ;; Hardware stack levels required when called:    1
  1194 ;; This function calls:
  1195 ;;		Nothing
  1196 ;; This function is called by:
  1197 ;;		_main
  1198 ;; This function uses a non-reentrant model
  1199 ;;
  1200                           
  1201                           
  1202                           ;psect for function ___awdiv
  1203  0110                     ___awdiv:
  1204  0110                     l1309:	
  1205                           ;incstack = 0
  1206                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1207                           
  1208  0110  1283               	bcf	3,5	;RP0=0, select bank0
  1209  0111  1303               	bcf	3,6	;RP1=0, select bank0
  1210  0112  01A2               	clrf	___awdiv@sign
  1211  0113                     l1311:
  1212  0113  1FF4               	btfss	___awdiv@divisor+1,7
  1213  0114  2916               	goto	u811
  1214  0115  2917               	goto	u810
  1215  0116                     u811:
  1216  0116  291E               	goto	l1317
  1217  0117                     u810:
  1218  0117                     l1313:
  1219  0117  09F3               	comf	___awdiv@divisor,f
  1220  0118  09F4               	comf	___awdiv@divisor+1,f
  1221  0119  0AF3               	incf	___awdiv@divisor,f
  1222  011A  1903               	skipnz
  1223  011B  0AF4               	incf	___awdiv@divisor+1,f
  1224  011C                     l1315:
  1225  011C  01A2               	clrf	___awdiv@sign
  1226  011D  0AA2               	incf	___awdiv@sign,f
  1227  011E                     l1317:
  1228  011E  1FF6               	btfss	___awdiv@dividend+1,7
  1229  011F  2921               	goto	u821
  1230  0120  2922               	goto	u820
  1231  0121                     u821:
  1232  0121  292B               	goto	l1323
  1233  0122                     u820:
  1234  0122                     l1319:
  1235  0122  09F5               	comf	___awdiv@dividend,f
  1236  0123  09F6               	comf	___awdiv@dividend+1,f
  1237  0124  0AF5               	incf	___awdiv@dividend,f
  1238  0125  1903               	skipnz
  1239  0126  0AF6               	incf	___awdiv@dividend+1,f
  1240  0127                     l1321:
  1241  0127  3001               	movlw	1
  1242  0128  00A0               	movwf	??___awdiv
  1243  0129  0820               	movf	??___awdiv,w
  1244  012A  06A2               	xorwf	___awdiv@sign,f
  1245  012B                     l1323:
  1246  012B  01A3               	clrf	___awdiv@quotient
  1247  012C  01A4               	clrf	___awdiv@quotient+1
  1248  012D                     l1325:
  1249  012D  0873               	movf	___awdiv@divisor,w
  1250  012E  0474               	iorwf	___awdiv@divisor+1,w
  1251  012F  1903               	btfsc	3,2
  1252  0130  2932               	goto	u831
  1253  0131  2933               	goto	u830
  1254  0132                     u831:
  1255  0132  296A               	goto	l1345
  1256  0133                     u830:
  1257  0133                     l1327:
  1258  0133  01A1               	clrf	___awdiv@counter
  1259  0134  0AA1               	incf	___awdiv@counter,f
  1260  0135  2941               	goto	l1333
  1261  0136                     l1329:
  1262  0136  3001               	movlw	1
  1263  0137                     u845:
  1264  0137  1003               	clrc
  1265  0138  0DF3               	rlf	___awdiv@divisor,f
  1266  0139  0DF4               	rlf	___awdiv@divisor+1,f
  1267  013A  3EFF               	addlw	-1
  1268  013B  1D03               	skipz
  1269  013C  2937               	goto	u845
  1270  013D                     l1331:
  1271  013D  3001               	movlw	1
  1272  013E  00A0               	movwf	??___awdiv
  1273  013F  0820               	movf	??___awdiv,w
  1274  0140  07A1               	addwf	___awdiv@counter,f
  1275  0141                     l1333:
  1276  0141  1FF4               	btfss	___awdiv@divisor+1,7
  1277  0142  2944               	goto	u851
  1278  0143  2945               	goto	u850
  1279  0144                     u851:
  1280  0144  2936               	goto	l1329
  1281  0145                     u850:
  1282  0145                     l1335:
  1283  0145  3001               	movlw	1
  1284  0146                     u865:
  1285  0146  1003               	clrc
  1286  0147  0DA3               	rlf	___awdiv@quotient,f
  1287  0148  0DA4               	rlf	___awdiv@quotient+1,f
  1288  0149  3EFF               	addlw	-1
  1289  014A  1D03               	skipz
  1290  014B  2946               	goto	u865
  1291  014C  0874               	movf	___awdiv@divisor+1,w
  1292  014D  0276               	subwf	___awdiv@dividend+1,w
  1293  014E  1D03               	skipz
  1294  014F  2952               	goto	u875
  1295  0150  0873               	movf	___awdiv@divisor,w
  1296  0151  0275               	subwf	___awdiv@dividend,w
  1297  0152                     u875:
  1298  0152  1C03               	skipc
  1299  0153  2955               	goto	u871
  1300  0154  2956               	goto	u870
  1301  0155                     u871:
  1302  0155  295D               	goto	l1341
  1303  0156                     u870:
  1304  0156                     l1337:
  1305  0156  0873               	movf	___awdiv@divisor,w
  1306  0157  02F5               	subwf	___awdiv@dividend,f
  1307  0158  0874               	movf	___awdiv@divisor+1,w
  1308  0159  1C03               	skipc
  1309  015A  03F6               	decf	___awdiv@dividend+1,f
  1310  015B  02F6               	subwf	___awdiv@dividend+1,f
  1311  015C                     l1339:
  1312  015C  1423               	bsf	___awdiv@quotient,0
  1313  015D                     l1341:
  1314  015D  3001               	movlw	1
  1315  015E                     u885:
  1316  015E  1003               	clrc
  1317  015F  0CF4               	rrf	___awdiv@divisor+1,f
  1318  0160  0CF3               	rrf	___awdiv@divisor,f
  1319  0161  3EFF               	addlw	-1
  1320  0162  1D03               	skipz
  1321  0163  295E               	goto	u885
  1322  0164                     l1343:
  1323  0164  3001               	movlw	1
  1324  0165  02A1               	subwf	___awdiv@counter,f
  1325  0166  1D03               	btfss	3,2
  1326  0167  2969               	goto	u891
  1327  0168  296A               	goto	u890
  1328  0169                     u891:
  1329  0169  2945               	goto	l1335
  1330  016A                     u890:
  1331  016A                     l1345:
  1332  016A  0822               	movf	___awdiv@sign,w
  1333  016B  1903               	btfsc	3,2
  1334  016C  296E               	goto	u901
  1335  016D  296F               	goto	u900
  1336  016E                     u901:
  1337  016E  2974               	goto	l1349
  1338  016F                     u900:
  1339  016F                     l1347:
  1340  016F  09A3               	comf	___awdiv@quotient,f
  1341  0170  09A4               	comf	___awdiv@quotient+1,f
  1342  0171  0AA3               	incf	___awdiv@quotient,f
  1343  0172  1903               	skipnz
  1344  0173  0AA4               	incf	___awdiv@quotient+1,f
  1345  0174                     l1349:
  1346  0174  0824               	movf	___awdiv@quotient+1,w
  1347  0175  00F4               	movwf	?___awdiv+1
  1348  0176  0823               	movf	___awdiv@quotient,w
  1349  0177  00F3               	movwf	?___awdiv
  1350  0178                     l444:
  1351  0178  0008               	return
  1352  0179                     __end_of___awdiv:
  1353                           
  1354                           	psect	text5
  1355  02B3                     __ptext5:	
  1356 ;; *************** function _StartSignal *****************
  1357 ;; Defined at:
  1358 ;;		line 187 in file "slave2_main.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;		None
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;		None
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  1    wreg      void 
  1365 ;; Registers used:
  1366 ;;		wreg
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1372 ;;      Params:         0       0       0       0       0
  1373 ;;      Locals:         0       0       0       0       0
  1374 ;;      Temps:          2       0       0       0       0
  1375 ;;      Totals:         2       0       0       0       0
  1376 ;;Total ram usage:        2 bytes
  1377 ;; Hardware stack levels used:    1
  1378 ;; Hardware stack levels required when called:    1
  1379 ;; This function calls:
  1380 ;;		Nothing
  1381 ;; This function is called by:
  1382 ;;		_main
  1383 ;; This function uses a non-reentrant model
  1384 ;;
  1385                           
  1386                           
  1387                           ;psect for function _StartSignal
  1388  02B3                     _StartSignal:
  1389  02B3                     l1127:	
  1390                           ;incstack = 0
  1391                           ; Regs used in _StartSignal: [wreg]
  1392                           
  1393                           
  1394                           ;slave2_main.c: 189:   TRISAbits.TRISA0 = 0;
  1395  02B3  1683               	bsf	3,5	;RP0=1, select bank1
  1396  02B4  1303               	bcf	3,6	;RP1=0, select bank1
  1397  02B5  1005               	bcf	5,0	;volatile
  1398                           
  1399                           ;slave2_main.c: 190:   PORTAbits.RA0 = 0;
  1400  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  1401  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  1402  02B8  1005               	bcf	5,0	;volatile
  1403  02B9                     l1129:
  1404                           
  1405                           ;slave2_main.c: 191:   _delay((unsigned long)((18)*(8000000/4000.0)));
  1406  02B9  302F               	movlw	47
  1407  02BA  00F4               	movwf	??_StartSignal+1
  1408  02BB  30BF               	movlw	191
  1409  02BC  00F3               	movwf	??_StartSignal
  1410  02BD                     u1037:
  1411  02BD  0BF3               	decfsz	??_StartSignal,f
  1412  02BE  2ABD               	goto	u1037
  1413  02BF  0BF4               	decfsz	??_StartSignal+1,f
  1414  02C0  2ABD               	goto	u1037
  1415  02C1  2AC2               	nop2
  1416  02C2                     l1131:
  1417                           
  1418                           ;slave2_main.c: 192:   PORTAbits.RA0 = 1;
  1419  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  1420  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  1421  02C4  1405               	bsf	5,0	;volatile
  1422                           
  1423                           ;slave2_main.c: 193:   _delay((unsigned long)((30)*(8000000/4000000.0)));
  1424  02C5  3013               	movlw	19
  1425  02C6  00F3               	movwf	??_StartSignal
  1426  02C7                     u1047:
  1427  02C7  0BF3               	decfsz	??_StartSignal,f
  1428  02C8  2AC7               	goto	u1047
  1429  02C9  2ACA               	nop2
  1430  02CA                     l1133:
  1431                           
  1432                           ;slave2_main.c: 194:   TRISAbits.TRISA0 = 1;
  1433  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  1434  02CB  1303               	bcf	3,6	;RP1=0, select bank1
  1435  02CC  1405               	bsf	5,0	;volatile
  1436  02CD                     l187:
  1437  02CD  0008               	return
  1438  02CE                     __end_of_StartSignal:
  1439                           
  1440                           	psect	text6
  1441  0233                     __ptext6:	
  1442 ;; *************** function _ReadData *****************
  1443 ;; Defined at:
  1444 ;;		line 212 in file "slave2_main.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;		None
  1447 ;; Auto vars:     Size  Location     Type
  1448 ;;  j               1    6[COMMON] unsigned char 
  1449 ;;  i               1    5[COMMON] unsigned char 
  1450 ;; Return value:  Size  Location     Type
  1451 ;;                  1    wreg      unsigned char 
  1452 ;; Registers used:
  1453 ;;		wreg, status,2, status,0
  1454 ;; Tracked objects:
  1455 ;;		On entry : 0/0
  1456 ;;		On exit  : 0/0
  1457 ;;		Unchanged: 0/0
  1458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1459 ;;      Params:         0       0       0       0       0
  1460 ;;      Locals:         2       0       0       0       0
  1461 ;;      Temps:          2       0       0       0       0
  1462 ;;      Totals:         4       0       0       0       0
  1463 ;;Total ram usage:        4 bytes
  1464 ;; Hardware stack levels used:    1
  1465 ;; Hardware stack levels required when called:    1
  1466 ;; This function calls:
  1467 ;;		Nothing
  1468 ;; This function is called by:
  1469 ;;		_main
  1470 ;; This function uses a non-reentrant model
  1471 ;;
  1472                           
  1473                           
  1474                           ;psect for function _ReadData
  1475  0233                     _ReadData:
  1476  0233                     l1149:	
  1477                           ;incstack = 0
  1478                           ; Regs used in _ReadData: [wreg+status,2+status,0]
  1479                           
  1480                           
  1481                           ;slave2_main.c: 217:   char i, j;;slave2_main.c: 218:   for(j = 0; j < 8; j++)
  1482  0233  01F6               	clrf	ReadData@j
  1483  0234                     l197:
  1484  0234  1283               	bcf	3,5	;RP0=0, select bank0
  1485  0235  1303               	bcf	3,6	;RP1=0, select bank0
  1486  0236  1C05               	btfss	5,0	;volatile
  1487  0237  2A39               	goto	u451
  1488  0238  2A3A               	goto	u450
  1489  0239                     u451:
  1490  0239  2A34               	goto	l197
  1491  023A                     u450:
  1492  023A                     l1155:
  1493                           
  1494                           ;slave2_main.c: 221:     _delay((unsigned long)((30)*(8000000/4000000.0)));
  1495  023A  3013               	movlw	19
  1496  023B  00F3               	movwf	??_ReadData
  1497  023C                     u1057:
  1498  023C  0BF3               	decfsz	??_ReadData,f
  1499  023D  2A3C               	goto	u1057
  1500  023E  2A3F               	nop2
  1501  023F                     l1157:
  1502                           
  1503                           ;slave2_main.c: 222:     if(PORTAbits.RA0 == 0)
  1504  023F  1283               	bcf	3,5	;RP0=0, select bank0
  1505  0240  1303               	bcf	3,6	;RP1=0, select bank0
  1506  0241  1805               	btfsc	5,0	;volatile
  1507  0242  2A44               	goto	u461
  1508  0243  2A45               	goto	u460
  1509  0244                     u461:
  1510  0244  2A56               	goto	l1161
  1511  0245                     u460:
  1512  0245                     l1159:
  1513                           
  1514                           ;slave2_main.c: 223:      i&= ~(1<<(7 - j));
  1515  0245  3001               	movlw	1
  1516  0246  00F3               	movwf	??_ReadData
  1517  0247  0876               	movf	ReadData@j,w
  1518  0248  3C07               	sublw	7
  1519  0249  3E01               	addlw	1
  1520  024A  2A4D               	goto	u474
  1521  024B                     u475:
  1522  024B  1003               	clrc
  1523  024C  0DF3               	rlf	??_ReadData,f
  1524  024D                     u474:
  1525  024D  3EFF               	addlw	-1
  1526  024E  1D03               	skipz
  1527  024F  2A4B               	goto	u475
  1528  0250  0873               	movf	??_ReadData,w
  1529  0251  3AFF               	xorlw	255
  1530  0252  00F4               	movwf	??_ReadData+1
  1531  0253  0874               	movf	??_ReadData+1,w
  1532  0254  05F5               	andwf	ReadData@i,f
  1533  0255  2A69               	goto	l1163
  1534  0256                     l1161:
  1535                           
  1536                           ;slave2_main.c: 225:     {;slave2_main.c: 226:       i|= (1 << (7 - j));
  1537  0256  3001               	movlw	1
  1538  0257  00F3               	movwf	??_ReadData
  1539  0258  0876               	movf	ReadData@j,w
  1540  0259  3C07               	sublw	7
  1541  025A  3E01               	addlw	1
  1542  025B  2A5E               	goto	u484
  1543  025C                     u485:
  1544  025C  1003               	clrc
  1545  025D  0DF3               	rlf	??_ReadData,f
  1546  025E                     u484:
  1547  025E  3EFF               	addlw	-1
  1548  025F  1D03               	skipz
  1549  0260  2A5C               	goto	u485
  1550  0261  0873               	movf	??_ReadData,w
  1551  0262  00F4               	movwf	??_ReadData+1
  1552  0263  0874               	movf	??_ReadData+1,w
  1553  0264  04F5               	iorwf	ReadData@i,f
  1554  0265                     l202:	
  1555                           ;slave2_main.c: 227:       while(PORTAbits.RA0 );
  1556                           
  1557  0265  1805               	btfsc	5,0	;volatile
  1558  0266  2A68               	goto	u491
  1559  0267  2A69               	goto	u490
  1560  0268                     u491:
  1561  0268  2A65               	goto	l202
  1562  0269                     u490:
  1563  0269                     l1163:
  1564                           
  1565                           ;slave2_main.c: 229:   }
  1566  0269  3001               	movlw	1
  1567  026A  00F3               	movwf	??_ReadData
  1568  026B  0873               	movf	??_ReadData,w
  1569  026C  07F6               	addwf	ReadData@j,f
  1570  026D                     l1165:
  1571  026D  3008               	movlw	8
  1572  026E  0276               	subwf	ReadData@j,w
  1573  026F  1C03               	skipc
  1574  0270  2A72               	goto	u501
  1575  0271  2A73               	goto	u500
  1576  0272                     u501:
  1577  0272  2A34               	goto	l197
  1578  0273                     u500:
  1579  0273                     l1167:
  1580                           
  1581                           ;slave2_main.c: 230:  return i;
  1582  0273  0875               	movf	ReadData@i,w
  1583  0274                     l205:
  1584  0274  0008               	return
  1585  0275                     __end_of_ReadData:
  1586                           
  1587                           	psect	text7
  1588  0295                     __ptext7:	
  1589 ;; *************** function _CheckResponse *****************
  1590 ;; Defined at:
  1591 ;;		line 198 in file "slave2_main.c"
  1592 ;; Parameters:    Size  Location     Type
  1593 ;;		None
  1594 ;; Auto vars:     Size  Location     Type
  1595 ;;		None
  1596 ;; Return value:  Size  Location     Type
  1597 ;;                  1    wreg      void 
  1598 ;; Registers used:
  1599 ;;		wreg, status,2
  1600 ;; Tracked objects:
  1601 ;;		On entry : 0/0
  1602 ;;		On exit  : 0/0
  1603 ;;		Unchanged: 0/0
  1604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1605 ;;      Params:         0       0       0       0       0
  1606 ;;      Locals:         0       0       0       0       0
  1607 ;;      Temps:          1       0       0       0       0
  1608 ;;      Totals:         1       0       0       0       0
  1609 ;;Total ram usage:        1 bytes
  1610 ;; Hardware stack levels used:    1
  1611 ;; Hardware stack levels required when called:    1
  1612 ;; This function calls:
  1613 ;;		Nothing
  1614 ;; This function is called by:
  1615 ;;		_main
  1616 ;; This function uses a non-reentrant model
  1617 ;;
  1618                           
  1619                           
  1620                           ;psect for function _CheckResponse
  1621  0295                     _CheckResponse:
  1622  0295                     l1135:	
  1623                           ;incstack = 0
  1624                           ; Regs used in _CheckResponse: [wreg+status,2]
  1625                           
  1626                           
  1627                           ;slave2_main.c: 200:   Check = 0;
  1628  0295  01FA               	clrf	_Check
  1629  0296                     l1137:
  1630                           
  1631                           ;slave2_main.c: 201:   _delay((unsigned long)((40)*(8000000/4000000.0)));
  1632  0296  301A               	movlw	26
  1633  0297  00F3               	movwf	??_CheckResponse
  1634  0298                     u1067:
  1635  0298  0BF3               	decfsz	??_CheckResponse,f
  1636  0299  2A98               	goto	u1067
  1637  029A  0000               	nop
  1638  029B                     l1139:
  1639                           
  1640                           ;slave2_main.c: 202:   if(PORTAbits.RA0 == 0)
  1641  029B  1283               	bcf	3,5	;RP0=0, select bank0
  1642  029C  1303               	bcf	3,6	;RP1=0, select bank0
  1643  029D  1805               	btfsc	5,0	;volatile
  1644  029E  2AA0               	goto	u431
  1645  029F  2AA1               	goto	u430
  1646  02A0                     u431:
  1647  02A0  2AB2               	goto	l192
  1648  02A1                     u430:
  1649  02A1                     l1141:
  1650                           
  1651                           ;slave2_main.c: 203:   {;slave2_main.c: 204:     _delay((unsigned long)((80)*(8000000/40
      +                          00000.0)));
  1652  02A1  3035               	movlw	53
  1653  02A2  00F3               	movwf	??_CheckResponse
  1654  02A3                     u1077:
  1655  02A3  0BF3               	decfsz	??_CheckResponse,f
  1656  02A4  2AA3               	goto	u1077
  1657  02A5                     l1143:
  1658                           
  1659                           ;slave2_main.c: 205:     if (PORTAbits.RA0 == 1)
  1660  02A5  1283               	bcf	3,5	;RP0=0, select bank0
  1661  02A6  1303               	bcf	3,6	;RP1=0, select bank0
  1662  02A7  1C05               	btfss	5,0	;volatile
  1663  02A8  2AAA               	goto	u441
  1664  02A9  2AAB               	goto	u440
  1665  02AA                     u441:
  1666  02AA  2AAD               	goto	l1147
  1667  02AB                     u440:
  1668  02AB                     l1145:
  1669                           
  1670                           ;slave2_main.c: 206:     Check = 1;
  1671  02AB  01FA               	clrf	_Check
  1672  02AC  0AFA               	incf	_Check,f
  1673  02AD                     l1147:
  1674                           
  1675                           ;slave2_main.c: 207:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1676  02AD  301A               	movlw	26
  1677  02AE  00F3               	movwf	??_CheckResponse
  1678  02AF                     u1087:
  1679  02AF  0BF3               	decfsz	??_CheckResponse,f
  1680  02B0  2AAF               	goto	u1087
  1681  02B1  0000               	nop
  1682  02B2                     l192:
  1683  02B2  0008               	return
  1684  02B3                     __end_of_CheckResponse:
  1685                           
  1686                           	psect	text8
  1687  0179                     __ptext8:	
  1688 ;; *************** function _isr *****************
  1689 ;; Defined at:
  1690 ;;		line 69 in file "slave2_main.c"
  1691 ;; Parameters:    Size  Location     Type
  1692 ;;		None
  1693 ;; Auto vars:     Size  Location     Type
  1694 ;;		None
  1695 ;; Return value:  Size  Location     Type
  1696 ;;                  1    wreg      void 
  1697 ;; Registers used:
  1698 ;;		wreg
  1699 ;; Tracked objects:
  1700 ;;		On entry : 0/0
  1701 ;;		On exit  : 0/0
  1702 ;;		Unchanged: 0/0
  1703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1704 ;;      Params:         0       0       0       0       0
  1705 ;;      Locals:         0       0       0       0       0
  1706 ;;      Temps:          3       0       0       0       0
  1707 ;;      Totals:         3       0       0       0       0
  1708 ;;Total ram usage:        3 bytes
  1709 ;; Hardware stack levels used:    1
  1710 ;; This function calls:
  1711 ;;		Nothing
  1712 ;; This function is called by:
  1713 ;;		Interrupt level 1
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           
  1718                           ;psect for function _isr
  1719  0179                     _isr:
  1720  0179                     i1l1253:
  1721                           
  1722                           ;slave2_main.c: 78:        if(PIR1bits.SSPIF == 1){
  1723  0179  1283               	bcf	3,5	;RP0=0, select bank0
  1724  017A  1303               	bcf	3,6	;RP1=0, select bank0
  1725  017B  1D8C               	btfss	12,3	;volatile
  1726  017C  297E               	goto	u70_21
  1727  017D  297F               	goto	u70_20
  1728  017E                     u70_21:
  1729  017E  29D1               	goto	i1l170
  1730  017F                     u70_20:
  1731  017F                     i1l1255:
  1732                           
  1733                           ;slave2_main.c: 80:         SSPCONbits.CKP = 0;
  1734  017F  1214               	bcf	20,4	;volatile
  1735                           
  1736                           ;slave2_main.c: 82:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
  1737  0180  1B14               	btfsc	20,6	;volatile
  1738  0181  2983               	goto	u71_21
  1739  0182  2984               	goto	u71_20
  1740  0183                     u71_21:
  1741  0183  2988               	goto	i1l1259
  1742  0184                     u71_20:
  1743  0184                     i1l1257:
  1744  0184  1F94               	btfss	20,7	;volatile
  1745  0185  2987               	goto	u72_21
  1746  0186  2988               	goto	u72_20
  1747  0187                     u72_21:
  1748  0187  298F               	goto	i1l1267
  1749  0188                     u72_20:
  1750  0188                     i1l1259:
  1751                           
  1752                           ;slave2_main.c: 83:             var = SSPBUF;
  1753  0188  0813               	movf	19,w	;volatile
  1754  0189  00F0               	movwf	??_isr
  1755  018A  0870               	movf	??_isr,w
  1756  018B  00B4               	movwf	_var
  1757  018C                     i1l1261:
  1758                           
  1759                           ;slave2_main.c: 84:             SSPCONbits.SSPOV = 0;
  1760  018C  1314               	bcf	20,6	;volatile
  1761  018D                     i1l1263:
  1762                           
  1763                           ;slave2_main.c: 85:             SSPCONbits.WCOL = 0;
  1764  018D  1394               	bcf	20,7	;volatile
  1765  018E                     i1l1265:
  1766                           
  1767                           ;slave2_main.c: 86:             SSPCONbits.CKP = 1;
  1768  018E  1614               	bsf	20,4	;volatile
  1769  018F                     i1l1267:
  1770                           
  1771                           ;slave2_main.c: 89:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
  1772  018F  1683               	bsf	3,5	;RP0=1, select bank1
  1773  0190  1303               	bcf	3,6	;RP1=0, select bank1
  1774  0191  1A94               	btfsc	20,5	;volatile
  1775  0192  2994               	goto	u73_21
  1776  0193  2995               	goto	u73_20
  1777  0194                     u73_21:
  1778  0194  29AD               	goto	i1l161
  1779  0195                     u73_20:
  1780  0195                     i1l1269:
  1781  0195  1914               	btfsc	20,2	;volatile
  1782  0196  2998               	goto	u74_21
  1783  0197  2999               	goto	u74_20
  1784  0198                     u74_21:
  1785  0198  29AD               	goto	i1l161
  1786  0199                     u74_20:
  1787  0199                     i1l1271:
  1788                           
  1789                           ;slave2_main.c: 91:             var = SSPBUF;
  1790  0199  1283               	bcf	3,5	;RP0=0, select bank0
  1791  019A  1303               	bcf	3,6	;RP1=0, select bank0
  1792  019B  0813               	movf	19,w	;volatile
  1793  019C  00F0               	movwf	??_isr
  1794  019D  0870               	movf	??_isr,w
  1795  019E  00B4               	movwf	_var
  1796  019F                     i1l1273:
  1797                           
  1798                           ;slave2_main.c: 93:             PIR1bits.SSPIF = 0;
  1799  019F  118C               	bcf	12,3	;volatile
  1800  01A0                     i1l1275:
  1801                           
  1802                           ;slave2_main.c: 94:             SSPCONbits.CKP = 1;
  1803  01A0  1614               	bsf	20,4	;volatile
  1804  01A1                     i1l162:	
  1805                           ;slave2_main.c: 95:             while(!SSPSTATbits.BF);
  1806                           
  1807  01A1  1683               	bsf	3,5	;RP0=1, select bank1
  1808  01A2  1303               	bcf	3,6	;RP1=0, select bank1
  1809  01A3  1C14               	btfss	20,0	;volatile
  1810  01A4  29A6               	goto	u75_21
  1811  01A5  29A7               	goto	u75_20
  1812  01A6                     u75_21:
  1813  01A6  29A1               	goto	i1l162
  1814  01A7                     u75_20:
  1815  01A7                     i1l1277:
  1816                           
  1817                           ;slave2_main.c: 97:             _delay((unsigned long)((250)*(8000000/4000000.0)));
  1818  01A7  30A6               	movlw	166
  1819  01A8  00F0               	movwf	??_isr
  1820  01A9                     u109_27:
  1821  01A9  0BF0               	decfsz	??_isr,f
  1822  01AA  29A9               	goto	u109_27
  1823  01AB  0000               	nop
  1824                           
  1825                           ;slave2_main.c: 99:         }else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
  1826  01AC  29CE               	goto	i1l165
  1827  01AD                     i1l161:
  1828  01AD  1A94               	btfsc	20,5	;volatile
  1829  01AE  29B0               	goto	u76_21
  1830  01AF  29B1               	goto	u76_20
  1831  01B0                     u76_21:
  1832  01B0  29CE               	goto	i1l165
  1833  01B1                     u76_20:
  1834  01B1                     i1l1279:
  1835  01B1  1D14               	btfss	20,2	;volatile
  1836  01B2  29B4               	goto	u77_21
  1837  01B3  29B5               	goto	u77_20
  1838  01B4                     u77_21:
  1839  01B4  29CE               	goto	i1l165
  1840  01B5                     u77_20:
  1841  01B5                     i1l1281:
  1842                           
  1843                           ;slave2_main.c: 100:             var = SSPBUF;
  1844  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  1845  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  1846  01B7  0813               	movf	19,w	;volatile
  1847  01B8  00F0               	movwf	??_isr
  1848  01B9  0870               	movf	??_isr,w
  1849  01BA  00B4               	movwf	_var
  1850  01BB                     i1l1283:
  1851                           
  1852                           ;slave2_main.c: 101:             BF = 0;
  1853  01BB  1683               	bsf	3,5	;RP0=1, select bank1
  1854  01BC  1303               	bcf	3,6	;RP1=0, select bank1
  1855  01BD  1014               	bcf	20,0	;volatile
  1856                           
  1857                           ;slave2_main.c: 102:             SSPBUF = T_byte1;
  1858  01BE  0878               	movf	_T_byte1,w
  1859  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  1860  01C0  1303               	bcf	3,6	;RP1=0, select bank0
  1861  01C1  0093               	movwf	19	;volatile
  1862  01C2                     i1l1285:
  1863                           
  1864                           ;slave2_main.c: 103:             SSPCONbits.CKP = 1;
  1865  01C2  1614               	bsf	20,4	;volatile
  1866                           
  1867                           ;slave2_main.c: 104:             _delay((unsigned long)((250)*(8000000/4000000.0)));
  1868  01C3  30A6               	movlw	166
  1869  01C4  00F0               	movwf	??_isr
  1870  01C5                     u110_27:
  1871  01C5  0BF0               	decfsz	??_isr,f
  1872  01C6  29C5               	goto	u110_27
  1873  01C7  0000               	nop
  1874  01C8                     i1l167:	
  1875                           ;slave2_main.c: 105:             while(SSPSTATbits.BF);
  1876                           
  1877  01C8  1683               	bsf	3,5	;RP0=1, select bank1
  1878  01C9  1303               	bcf	3,6	;RP1=0, select bank1
  1879  01CA  1814               	btfsc	20,0	;volatile
  1880  01CB  29CD               	goto	u78_21
  1881  01CC  29CE               	goto	u78_20
  1882  01CD                     u78_21:
  1883  01CD  29C8               	goto	i1l167
  1884  01CE                     u78_20:
  1885  01CE                     i1l165:
  1886                           
  1887                           ;slave2_main.c: 108:         PIR1bits.SSPIF = 0;
  1888  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  1889  01CF  1303               	bcf	3,6	;RP1=0, select bank0
  1890  01D0  118C               	bcf	12,3	;volatile
  1891  01D1                     i1l170:
  1892  01D1  0872               	movf	??_isr+2,w
  1893  01D2  008A               	movwf	10
  1894  01D3  0E71               	swapf	??_isr+1,w
  1895  01D4  0083               	movwf	3
  1896  01D5  0EFE               	swapf	btemp,f
  1897  01D6  0E7E               	swapf	btemp,w
  1898  01D7  0009               	retfie
  1899  01D8                     __end_of_isr:
  1900  007E                     btemp	set	126	;btemp
  1901  007E                     wtemp0	set	126
  1902                           
  1903                           	psect	intentry
  1904  0004                     __pintentry:	
  1905                           ;incstack = 0
  1906                           ; Regs used in _isr: [wreg]
  1907                           
  1908  0004                     interrupt_function:
  1909  007E                     saved_w	set	btemp
  1910  0004  00FE               	movwf	btemp
  1911  0005  0E03               	swapf	3,w
  1912  0006  00F1               	movwf	??_isr+1
  1913  0007  080A               	movf	10,w
  1914  0008  00F2               	movwf	??_isr+2
  1915  0009  120A  118A  2979   	ljmp	_isr
  1916                           
  1917                           	psect	config
  1918                           
  1919                           ;Config register CONFIG1 @ 0x2007
  1920                           ;	Oscillator Selection bits
  1921                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1922                           ;	Watchdog Timer Enable bit
  1923                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1924                           ;	Power-up Timer Enable bit
  1925                           ;	PWRTE = ON, PWRT enabled
  1926                           ;	RE3/MCLR pin function select bit
  1927                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1928                           ;	Code Protection bit
  1929                           ;	CP = OFF, Program memory code protection is disabled
  1930                           ;	Data Code Protection bit
  1931                           ;	CPD = OFF, Data memory code protection is disabled
  1932                           ;	Brown Out Reset Selection bits
  1933                           ;	BOREN = OFF, BOR disabled
  1934                           ;	Internal External Switchover bit
  1935                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1936                           ;	Fail-Safe Clock Monitor Enabled bit
  1937                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1938                           ;	Low Voltage Programming Enable bit
  1939                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1940                           ;	In-Circuit Debugger Mode bit
  1941                           ;	DEBUG = 0x1, unprogrammed default
  1942  2007                     	org	8199
  1943  2007  20C4               	dw	8388
  1944                           
  1945                           ;Config register CONFIG2 @ 0x2008
  1946                           ;	Brown-out Reset Selection bit
  1947                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1948                           ;	Flash Program Memory Self Write Enable bits
  1949                           ;	WRT = OFF, Write protection off
  1950  2008                     	org	8200
  1951  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80     13      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ReadData
    _main->___awdiv
    _main->___awmod
    _setup->_I2C_Slave_Init

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    1734
                                              5 BANK0      8     8      0
                      _CheckResponse
                           _ReadData
                        _StartSignal
                            ___awdiv
                            ___awmod
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                     _I2C_Slave_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     793
                                              3 COMMON     4     0      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     805
                                              3 COMMON     4     0      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _StartSignal                                          2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ReadData                                             4     4      0     114
                                              3 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _CheckResponse                                        1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CheckResponse
   _ReadData
   _StartSignal
   ___awdiv
   ___awmod
   _setup
     _I2C_Slave_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      21       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      D      16       5       27.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      21      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Aug 24 23:56:44 2021

            _SSPSTATbits 0094                       _BF 04A0                       l55 02E7  
           ___awdiv@sign 0022                      l202 0265                      l205 0274  
                    l175 0027                      l192 02B2                      l184 0294  
                    l187 02CD                      l444 0178                      l197 0234  
                    l457 0232                      _GIE 005F                      u500 0273  
                    u501 0272                      u430 02A1                      u431 02A0  
                    u440 02AB                      u441 02AA                      u450 023A  
                    u451 0239                      u460 0245                      u461 0244  
                    u490 0269                      u474 024D                      u810 0117  
                    u491 0268                      u475 024B                      u811 0116  
                    u484 025E                      u900 016F                      u820 0122  
                    u485 025C                      u901 016E                      u821 0121  
                    u830 0133                      u910 01DF                      u831 0132  
                    u911 01DE                      u920 01EA                      u921 01E9  
                    u850 0145                      u930 01F5                      u851 0144  
                    u931 01F4                      u845 0137                      u870 0156  
                    u950 0207                      u871 0155                      u951 0206  
                    u960 0211                      u865 0146                      u961 0210  
                    u945 01F9                      u890 016A                      u891 0169  
                    u875 0152                      u980 0224                      u885 015E  
                    u981 0223                      u965 020D                      u990 0229  
                    u991 0228                      u975 0218                      _Sum 002D  
                    _isr 0179                      _var 0034             ___awmod@sign 0022  
                   l1101 02DE                     l1103 02DF                     l1111 0275  
                   l1105 02E0                     l1121 028C                     l1113 0286  
                   l1131 02C2                     l1107 02E1                     l1123 028D  
                   l1115 0289                     l1141 02A1                     l1133 02CA  
                   l1109 02E4                     l1125 028E                     l1117 028A  
                   l1143 02A5                     l1135 0295                     l1127 02B3  
                   l1311 0113                     l1119 028B                     l1145 02AB  
                   l1137 0296                     l1161 0256                     l1129 02B9  
                   l1321 0127                     l1313 0117                     l1401 00E8  
                   l1147 02AD                     l1139 029B                     l1163 0269  
                   l1155 023A                     l1331 013D                     l1323 012B  
                   l1315 011C                     l1403 00ED                     l1411 00FE  
                   l1165 026D                     l1157 023F                     l1149 0233  
                   l1341 015D                     l1333 0141                     l1325 012D  
                   l1317 011E                     l1309 0110                     l1405 00F2  
                   l1167 0273                     l1159 0245                     l1343 0164  
                   l1335 0145                     l1327 0133                     l1319 0122  
                   l1407 00F7                     l1337 0156                     l1329 0136  
                   l1345 016A                     l1361 01E6                     l1353 01D8  
                   l1097 02CF                     l1409 00FD                     l1347 016F  
                   l1339 015C                     l1371 01FF                     l1363 01EA  
                   l1355 01DB                     l1099 02DD                     l1349 0174  
                   l1381 021E                     l1373 0203                     l1365 01EF  
                   l1357 01DF                     l1375 0207                     l1367 01F5  
                   l1383 0224                     l1359 01E4                     l1391 0022  
                   l1385 0229                     l1377 0211                     l1369 01F8  
                   l1393 0031                     l1387 022E                     l1379 0217  
                   l1395 0036                     l1397 006B                     l1399 0090  
                   ?_isr 0070                     u1000 0036                     u1001 0035  
                   u1010 0090                     u1011 008F                     u1015 008C  
                   u1027 0106                     u1037 02BD                     u1047 02C7  
                   u1057 023C                     u1067 0298                     u1077 02A3  
                   u1087 02AF                     _PEIE 005E                     _decT 0033  
                   _main 0022                     _uniT 0079                     btemp 007E  
                   start 000C                    ??_isr 0070                    ?_main 0070  
        __end_of___awdiv 0179          __end_of___awmod 0233                    _ANSEL 0188  
        ___awdiv@divisor 0073                    i1l161 01AD                    i1l162 01A1  
                  i1l170 01D1                    i1l165 01CE                    i1l167 01C8  
        ___awdiv@counter 0021                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  u70_20 017F                    u70_21 017E                    u71_20 0184  
                  u71_21 0183                    u72_20 0188                    u72_21 0187  
                  u73_20 0195                    u73_21 0194                    _TRISA 0085  
                  _TRISB 0086                    _TRISD 0088                    _SSPIE 0463  
                  _TRISE 0089                    u74_20 0199                    _SSPIF 0063  
                  u74_21 0198                    u75_20 01A7                    u75_21 01A6  
                  u76_20 01B1                    u76_21 01B0                    u77_20 01B5  
                  u77_21 01B4                    u78_20 01CE                    u78_21 01CD  
                  _Check 007A                    _decHR 0031                    _uniHR 0032  
                  _setup 0275                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0110  
       __end_of_ReadData 0275                   ??_main 0025                   _ADRESH 001E  
       ___awdiv@dividend 0075                   ?_setup 0070                   _ANSELH 0189  
                 u110_27 01C5                   i1l1261 018C                   i1l1253 0179  
                 i1l1271 0199                   i1l1263 018D                   i1l1255 017F  
                 i1l1281 01B5                   i1l1273 019F                   i1l1265 018E  
                 i1l1257 0184                   i1l1283 01BB                   i1l1275 01A0  
                 i1l1267 018F                   i1l1259 0188                   i1l1285 01C2  
                 i1l1277 01A7                   i1l1269 0195                   i1l1279 01B1  
                 u109_27 01A9                   _SSPADD 0093                   _TRISC3 043B  
                 _TRISC4 043C                   _SSPCON 0014                   _SSPBUF 0013  
              ??___awdiv 0020                ??___awmod 0020         ___awdiv@quotient 0023  
        ___awmod@divisor 0073          ___awmod@counter 0021   __size_of_CheckResponse 001E  
                 saved_w 007E  __end_of__initialization 001E           __pcstackCOMMON 0070  
__size_of_I2C_Slave_Init 001A            ??_StartSignal 0073            __end_of_setup 0295  
                ??_setup 0074    I2C_Slave_Init@address 0073               __pbssBANK0 002D  
              ?_ReadData 0070            _CheckResponse 0295               __pmaintext 0022  
             __pintentry 0004      __end_of_StartSignal 02CE                  _SSPCON2 0091  
                _SSPSTAT 0094               ??_ReadData 0073           ?_CheckResponse 0070  
                _T_byte1 0078                  _T_byte2 0030                  ___awdiv 0110  
                ___awmod 01D8                  __ptext1 0275                  __ptext2 02CE  
                __ptext3 01D8                  __ptext4 0110                  __ptext5 02B3  
                __ptext6 0233                  __ptext7 0295                  __ptext8 0179  
           __size_of_isr 005F         ___awmod@dividend 0075     end_of_initialization 001E  
         _I2C_Slave_Init 02CE              _StartSignal 02B3                _PORTAbits 0005  
              _TRISAbits 0085                _TRISCbits 0087          ??_CheckResponse 0073  
              ReadData@i 0075                ReadData@j 0076   __end_of_I2C_Slave_Init 02E8  
    start_initialization 000F              __end_of_isr 01D8        __size_of_ReadData 0042  
        ?_I2C_Slave_Init 0070              __pbssCOMMON 0077                ___latbits 0002  
          __pcstackBANK0 0020                 ?___awdiv 0073                 ?___awmod 0073  
         __size_of_setup 0020        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C                _valor_ADC 0035             ?_StartSignal 0070  
             _ADCON0bits 001F               _ADCON1bits 009F                 _RH_byte1 0077  
               _RH_byte2 002F                 _ReadData 0233         __size_of___awdiv 0069  
       __size_of___awmod 005B         ??_I2C_Slave_Init 0073    __end_of_CheckResponse 02B3  
          __size_of_main 00EE               _INTCONbits 000B                 intlevel1 0000  
             _OSCCONbits 008F     __size_of_StartSignal 001B              _SSPCON2bits 0091  
             _SSPCONbits 0014  
