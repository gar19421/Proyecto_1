

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Aug 30 18:43:25 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  000E                     	;# 
   228  000F                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0014                     	;# 
   234  0015                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001D                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  0081                     	;# 
   248  0085                     	;# 
   249  0086                     	;# 
   250  0087                     	;# 
   251  0088                     	;# 
   252  0089                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  008F                     	;# 
   257  0090                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0094                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0097                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009A                     	;# 
   270  009B                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  009F                     	;# 
   275  0105                     	;# 
   276  0107                     	;# 
   277  0108                     	;# 
   278  0109                     	;# 
   279  010C                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  010F                     	;# 
   284  0185                     	;# 
   285  0187                     	;# 
   286  0188                     	;# 
   287  0189                     	;# 
   288  018C                     	;# 
   289  018D                     	;# 
   290  0005                     _PORTAbits	set	5
   291  000B                     _INTCONbits	set	11
   292  0009                     _PORTE	set	9
   293  0008                     _PORTD	set	8
   294  0007                     _PORTC	set	7
   295  0006                     _PORTB	set	6
   296  0005                     _PORTA	set	5
   297  0014                     _SSPCONbits	set	20
   298  001E                     _ADRESH	set	30
   299  000C                     _PIR1bits	set	12
   300  001F                     _ADCON0bits	set	31
   301  0013                     _SSPBUF	set	19
   302  0014                     _SSPCON	set	20
   303  0063                     _SSPIF	set	99
   304  005E                     _PEIE	set	94
   305  005F                     _GIE	set	95
   306  0085                     _TRISAbits	set	133
   307  008F                     _OSCCONbits	set	143
   308  0086                     _TRISB	set	134
   309  0089                     _TRISE	set	137
   310  0088                     _TRISD	set	136
   311  0085                     _TRISA	set	133
   312  0094                     _SSPSTATbits	set	148
   313  008C                     _PIE1bits	set	140
   314  009F                     _ADCON1bits	set	159
   315  0091                     _SSPCON2bits	set	145
   316  0087                     _TRISCbits	set	135
   317  0094                     _SSPSTAT	set	148
   318  0093                     _SSPADD	set	147
   319  0091                     _SSPCON2	set	145
   320  04A0                     _BF	set	1184
   321  0463                     _SSPIE	set	1123
   322  043C                     _TRISC4	set	1084
   323  043B                     _TRISC3	set	1083
   324  0189                     _ANSELH	set	393
   325  0188                     _ANSEL	set	392
   326                           
   327                           	psect	cinit
   328  000F                     start_initialization:	
   329                           ; #config settings
   330                           
   331  000F                     __initialization:
   332                           
   333                           ; Clear objects allocated to COMMON
   334  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   335  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   336  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   337  0012  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   338                           
   339                           ; Clear objects allocated to BANK0
   340  0013  1283               	bcf	3,5	;RP0=0, select bank0
   341  0014  1303               	bcf	3,6	;RP1=0, select bank0
   342  0015  01AD               	clrf	__pbssBANK0& (0+127)
   343  0016  01AE               	clrf	(__pbssBANK0+1)& (0+127)
   344  0017  01AF               	clrf	(__pbssBANK0+2)& (0+127)
   345  0018  01B0               	clrf	(__pbssBANK0+3)& (0+127)
   346  0019  01B1               	clrf	(__pbssBANK0+4)& (0+127)
   347  001A  01B2               	clrf	(__pbssBANK0+5)& (0+127)
   348  001B  01B3               	clrf	(__pbssBANK0+6)& (0+127)
   349  001C  01B4               	clrf	(__pbssBANK0+7)& (0+127)
   350  001D  01B5               	clrf	(__pbssBANK0+8)& (0+127)
   351  001E                     end_of_initialization:	
   352                           ;End of C runtime variable initialization code
   353                           
   354  001E                     __end_of__initialization:
   355  001E  0183               	clrf	3
   356  001F  120A  118A  2822   	ljmp	_main	;jump to C main() function
   357                           
   358                           	psect	bssCOMMON
   359  0077                     __pbssCOMMON:
   360  0077                     _RH_byte1:
   361  0077                     	ds	1
   362  0078                     _T_byte1:
   363  0078                     	ds	1
   364  0079                     _uniT:
   365  0079                     	ds	1
   366  007A                     _Check:
   367  007A                     	ds	1
   368                           
   369                           	psect	bssBANK0
   370  002D                     __pbssBANK0:
   371  002D                     _Sum:
   372  002D                     	ds	2
   373  002F                     _RH_byte2:
   374  002F                     	ds	1
   375  0030                     _T_byte2:
   376  0030                     	ds	1
   377  0031                     _decHR:
   378  0031                     	ds	1
   379  0032                     _uniHR:
   380  0032                     	ds	1
   381  0033                     _decT:
   382  0033                     	ds	1
   383  0034                     _var:
   384  0034                     	ds	1
   385  0035                     _valor_ADC:
   386  0035                     	ds	1
   387                           
   388                           	psect	cstackCOMMON
   389  0070                     __pcstackCOMMON:
   390  0070                     ?_setup:
   391  0070                     ?_StartSignal:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0070                     ?_CheckResponse:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0070                     ?_ReadData:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0070                     ?_I2C_Slave_Init:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ?_isr:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ??_isr:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0070                     ?_main:	
   410                           ; 1 bytes @ 0x0
   411                           
   412                           
   413                           ; 1 bytes @ 0x0
   414  0070                     	ds	3
   415  0073                     ??_StartSignal:
   416  0073                     ??_CheckResponse:	
   417                           ; 1 bytes @ 0x3
   418                           
   419  0073                     ??_ReadData:	
   420                           ; 1 bytes @ 0x3
   421                           
   422  0073                     ??_I2C_Slave_Init:	
   423                           ; 1 bytes @ 0x3
   424                           
   425  0073                     ?___awdiv:	
   426                           ; 1 bytes @ 0x3
   427                           
   428  0073                     ?___awmod:	
   429                           ; 2 bytes @ 0x3
   430                           
   431  0073                     I2C_Slave_Init@address:	
   432                           ; 2 bytes @ 0x3
   433                           
   434  0073                     ___awdiv@divisor:	
   435                           ; 1 bytes @ 0x3
   436                           
   437  0073                     ___awmod@divisor:	
   438                           ; 2 bytes @ 0x3
   439                           
   440                           
   441                           ; 2 bytes @ 0x3
   442  0073                     	ds	1
   443  0074                     ??_setup:
   444                           
   445                           ; 1 bytes @ 0x4
   446  0074                     	ds	1
   447  0075                     ReadData@i:
   448  0075                     ___awdiv@dividend:	
   449                           ; 1 bytes @ 0x5
   450                           
   451  0075                     ___awmod@dividend:	
   452                           ; 2 bytes @ 0x5
   453                           
   454                           
   455                           ; 2 bytes @ 0x5
   456  0075                     	ds	1
   457  0076                     ReadData@j:
   458                           
   459                           ; 1 bytes @ 0x6
   460  0076                     	ds	1
   461                           
   462                           	psect	cstackBANK0
   463  0020                     __pcstackBANK0:
   464  0020                     ??___awdiv:
   465  0020                     ??___awmod:	
   466                           ; 1 bytes @ 0x0
   467                           
   468                           
   469                           ; 1 bytes @ 0x0
   470  0020                     	ds	1
   471  0021                     ___awdiv@counter:
   472  0021                     ___awmod@counter:	
   473                           ; 1 bytes @ 0x1
   474                           
   475                           
   476                           ; 1 bytes @ 0x1
   477  0021                     	ds	1
   478  0022                     ___awdiv@sign:
   479  0022                     ___awmod@sign:	
   480                           ; 1 bytes @ 0x2
   481                           
   482                           
   483                           ; 1 bytes @ 0x2
   484  0022                     	ds	1
   485  0023                     ___awdiv@quotient:
   486                           
   487                           ; 2 bytes @ 0x3
   488  0023                     	ds	2
   489  0025                     ??_main:
   490                           
   491                           ; 1 bytes @ 0x5
   492  0025                     	ds	8
   493                           
   494                           	psect	maintext
   495  0022                     __pmaintext:	
   496 ;;
   497 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   498 ;;
   499 ;; *************** function _main *****************
   500 ;; Defined at:
   501 ;;		line 114 in file "slave2_main.c"
   502 ;; Parameters:    Size  Location     Type
   503 ;;		None
   504 ;; Auto vars:     Size  Location     Type
   505 ;;		None
   506 ;; Return value:  Size  Location     Type
   507 ;;                  1    wreg      void 
   508 ;; Registers used:
   509 ;;		wreg, status,2, status,0, pclath, cstack
   510 ;; Tracked objects:
   511 ;;		On entry : B00/0
   512 ;;		On exit  : 0/0
   513 ;;		Unchanged: 0/0
   514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   515 ;;      Params:         0       0       0       0       0
   516 ;;      Locals:         0       0       0       0       0
   517 ;;      Temps:          0       8       0       0       0
   518 ;;      Totals:         0       8       0       0       0
   519 ;;Total ram usage:        8 bytes
   520 ;; Hardware stack levels required when called:    3
   521 ;; This function calls:
   522 ;;		_CheckResponse
   523 ;;		_ReadData
   524 ;;		_StartSignal
   525 ;;		___awdiv
   526 ;;		___awmod
   527 ;;		_setup
   528 ;; This function is called by:
   529 ;;		Startup code after reset
   530 ;; This function uses a non-reentrant model
   531 ;;
   532                           
   533                           
   534                           ;psect for function _main
   535  0022                     _main:
   536  0022                     l1391:	
   537                           ;incstack = 0
   538                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   539                           
   540                           
   541                           ;slave2_main.c: 115:     setup();
   542  0022  120A  118A  2276  120A  118A  	fcall	_setup
   543  0027                     l175:	
   544                           ;slave2_main.c: 117:     while(1){
   545                           
   546                           
   547                           ;slave2_main.c: 122:         StartSignal();
   548  0027  120A  118A  22B4  120A  118A  	fcall	_StartSignal
   549                           
   550                           ;slave2_main.c: 123:         CheckResponse();
   551  002C  120A  118A  2296  120A  118A  	fcall	_CheckResponse
   552  0031                     l1393:
   553                           
   554                           ;slave2_main.c: 124:         if(Check == 1)
   555  0031  037A               	decf	_Check,w
   556  0032  1D03               	btfss	3,2
   557  0033  2835               	goto	u1001
   558  0034  2836               	goto	u1000
   559  0035                     u1001:
   560  0035  28FD               	goto	l1409
   561  0036                     u1000:
   562  0036                     l1395:
   563                           
   564                           ;slave2_main.c: 125:         {;slave2_main.c: 126:           RH_byte1 = ReadData();
   565  0036  120A  118A  2234  120A  118A  	fcall	_ReadData
   566  003B  1283               	bcf	3,5	;RP0=0, select bank0
   567  003C  1303               	bcf	3,6	;RP1=0, select bank0
   568  003D  00A5               	movwf	??_main
   569  003E  0825               	movf	??_main,w
   570  003F  00F7               	movwf	_RH_byte1
   571                           
   572                           ;slave2_main.c: 127:           RH_byte2 = ReadData();
   573  0040  120A  118A  2234  120A  118A  	fcall	_ReadData
   574  0045  1283               	bcf	3,5	;RP0=0, select bank0
   575  0046  1303               	bcf	3,6	;RP1=0, select bank0
   576  0047  00A5               	movwf	??_main
   577  0048  0825               	movf	??_main,w
   578  0049  00AF               	movwf	_RH_byte2
   579                           
   580                           ;slave2_main.c: 128:           T_byte1 = ReadData();
   581  004A  120A  118A  2234  120A  118A  	fcall	_ReadData
   582  004F  1283               	bcf	3,5	;RP0=0, select bank0
   583  0050  1303               	bcf	3,6	;RP1=0, select bank0
   584  0051  00A5               	movwf	??_main
   585  0052  0825               	movf	??_main,w
   586  0053  00F8               	movwf	_T_byte1
   587                           
   588                           ;slave2_main.c: 129:           T_byte2 = ReadData();
   589  0054  120A  118A  2234  120A  118A  	fcall	_ReadData
   590  0059  1283               	bcf	3,5	;RP0=0, select bank0
   591  005A  1303               	bcf	3,6	;RP1=0, select bank0
   592  005B  00A5               	movwf	??_main
   593  005C  0825               	movf	??_main,w
   594  005D  00B0               	movwf	_T_byte2
   595                           
   596                           ;slave2_main.c: 130:           Sum = ReadData();
   597  005E  120A  118A  2234  120A  118A  	fcall	_ReadData
   598  0063  1283               	bcf	3,5	;RP0=0, select bank0
   599  0064  1303               	bcf	3,6	;RP1=0, select bank0
   600  0065  00A5               	movwf	??_main
   601  0066  01A6               	clrf	??_main+1
   602  0067  0825               	movf	??_main,w
   603  0068  00AD               	movwf	_Sum
   604  0069  0826               	movf	??_main+1,w
   605  006A  00AE               	movwf	_Sum+1
   606  006B                     l1397:
   607                           
   608                           ;slave2_main.c: 132:           if(Sum == ((RH_byte1+RH_byte2+T_byte1+T_byte2) & 0XFF))
   609  006B  0877               	movf	_RH_byte1,w
   610  006C  072F               	addwf	_RH_byte2,w
   611  006D  00A5               	movwf	??_main
   612  006E  01A6               	clrf	??_main+1
   613  006F  0DA6               	rlf	??_main+1,f
   614  0070  0878               	movf	_T_byte1,w
   615  0071  0725               	addwf	??_main,w
   616  0072  00A7               	movwf	??_main+2
   617  0073  3000               	movlw	0
   618  0074  1803               	skipnc
   619  0075  3001               	movlw	1
   620  0076  0726               	addwf	??_main+1,w
   621  0077  00A8               	movwf	??_main+3
   622  0078  0830               	movf	_T_byte2,w
   623  0079  0727               	addwf	??_main+2,w
   624  007A  00A9               	movwf	??_main+4
   625  007B  3000               	movlw	0
   626  007C  1803               	skipnc
   627  007D  3001               	movlw	1
   628  007E  0728               	addwf	??_main+3,w
   629  007F  00AA               	movwf	??_main+5
   630  0080  30FF               	movlw	255
   631  0081  0529               	andwf	??_main+4,w
   632  0082  00AB               	movwf	??_main+6
   633  0083  3000               	movlw	0
   634  0084  052A               	andwf	??_main+5,w
   635  0085  00AC               	movwf	??_main+7
   636  0086  082E               	movf	_Sum+1,w
   637  0087  062C               	xorwf	??_main+7,w
   638  0088  1D03               	skipz
   639  0089  288C               	goto	u1015
   640  008A  082D               	movf	_Sum,w
   641  008B  062B               	xorwf	??_main+6,w
   642  008C                     u1015:
   643  008C  1D03               	skipz
   644  008D  288F               	goto	u1011
   645  008E  2890               	goto	u1010
   646  008F                     u1011:
   647  008F  28FE               	goto	l1411
   648  0090                     u1010:
   649  0090                     l1399:
   650                           
   651                           ;slave2_main.c: 133:           {;slave2_main.c: 134:            decHR=RH_byte1/10;
   652  0090  300A               	movlw	10
   653  0091  00F3               	movwf	___awdiv@divisor
   654  0092  3000               	movlw	0
   655  0093  00F4               	movwf	___awdiv@divisor+1
   656  0094  0877               	movf	_RH_byte1,w
   657  0095  00A5               	movwf	??_main
   658  0096  01A6               	clrf	??_main+1
   659  0097  0825               	movf	??_main,w
   660  0098  00F5               	movwf	___awdiv@dividend
   661  0099  0826               	movf	??_main+1,w
   662  009A  00F6               	movwf	___awdiv@dividend+1
   663  009B  120A  118A  2111  120A  118A  	fcall	___awdiv
   664  00A0  0873               	movf	?___awdiv,w
   665  00A1  1283               	bcf	3,5	;RP0=0, select bank0
   666  00A2  1303               	bcf	3,6	;RP1=0, select bank0
   667  00A3  00A7               	movwf	??_main+2
   668  00A4  0827               	movf	??_main+2,w
   669  00A5  00B1               	movwf	_decHR
   670                           
   671                           ;slave2_main.c: 135:            uniHR=RH_byte1%10;
   672  00A6  300A               	movlw	10
   673  00A7  00F3               	movwf	___awmod@divisor
   674  00A8  3000               	movlw	0
   675  00A9  00F4               	movwf	___awmod@divisor+1
   676  00AA  0877               	movf	_RH_byte1,w
   677  00AB  00A5               	movwf	??_main
   678  00AC  01A6               	clrf	??_main+1
   679  00AD  0825               	movf	??_main,w
   680  00AE  00F5               	movwf	___awmod@dividend
   681  00AF  0826               	movf	??_main+1,w
   682  00B0  00F6               	movwf	___awmod@dividend+1
   683  00B1  120A  118A  21D9  120A  118A  	fcall	___awmod
   684  00B6  0873               	movf	?___awmod,w
   685  00B7  1283               	bcf	3,5	;RP0=0, select bank0
   686  00B8  1303               	bcf	3,6	;RP1=0, select bank0
   687  00B9  00A7               	movwf	??_main+2
   688  00BA  0827               	movf	??_main+2,w
   689  00BB  00B2               	movwf	_uniHR
   690                           
   691                           ;slave2_main.c: 136:            decT=T_byte1/10;
   692  00BC  300A               	movlw	10
   693  00BD  00F3               	movwf	___awdiv@divisor
   694  00BE  3000               	movlw	0
   695  00BF  00F4               	movwf	___awdiv@divisor+1
   696  00C0  0878               	movf	_T_byte1,w
   697  00C1  00A5               	movwf	??_main
   698  00C2  01A6               	clrf	??_main+1
   699  00C3  0825               	movf	??_main,w
   700  00C4  00F5               	movwf	___awdiv@dividend
   701  00C5  0826               	movf	??_main+1,w
   702  00C6  00F6               	movwf	___awdiv@dividend+1
   703  00C7  120A  118A  2111  120A  118A  	fcall	___awdiv
   704  00CC  0873               	movf	?___awdiv,w
   705  00CD  1283               	bcf	3,5	;RP0=0, select bank0
   706  00CE  1303               	bcf	3,6	;RP1=0, select bank0
   707  00CF  00A7               	movwf	??_main+2
   708  00D0  0827               	movf	??_main+2,w
   709  00D1  00B3               	movwf	_decT
   710                           
   711                           ;slave2_main.c: 137:            uniT=T_byte1%10;
   712  00D2  300A               	movlw	10
   713  00D3  00F3               	movwf	___awmod@divisor
   714  00D4  3000               	movlw	0
   715  00D5  00F4               	movwf	___awmod@divisor+1
   716  00D6  0878               	movf	_T_byte1,w
   717  00D7  00A5               	movwf	??_main
   718  00D8  01A6               	clrf	??_main+1
   719  00D9  0825               	movf	??_main,w
   720  00DA  00F5               	movwf	___awmod@dividend
   721  00DB  0826               	movf	??_main+1,w
   722  00DC  00F6               	movwf	___awmod@dividend+1
   723  00DD  120A  118A  21D9  120A  118A  	fcall	___awmod
   724  00E2  0873               	movf	?___awmod,w
   725  00E3  1283               	bcf	3,5	;RP0=0, select bank0
   726  00E4  1303               	bcf	3,6	;RP1=0, select bank0
   727  00E5  00A7               	movwf	??_main+2
   728  00E6  0827               	movf	??_main+2,w
   729  00E7  00F9               	movwf	_uniT
   730  00E8                     l1401:
   731                           
   732                           ;slave2_main.c: 139:            decHR=decHR+0x30;
   733  00E8  0831               	movf	_decHR,w
   734  00E9  3E30               	addlw	48
   735  00EA  00A5               	movwf	??_main
   736  00EB  0825               	movf	??_main,w
   737  00EC  00B1               	movwf	_decHR
   738  00ED                     l1403:
   739                           
   740                           ;slave2_main.c: 140:            uniHR=uniHR+0x30;
   741  00ED  0832               	movf	_uniHR,w
   742  00EE  3E30               	addlw	48
   743  00EF  00A5               	movwf	??_main
   744  00F0  0825               	movf	??_main,w
   745  00F1  00B2               	movwf	_uniHR
   746  00F2                     l1405:
   747                           
   748                           ;slave2_main.c: 141:            decT=decT+0x30;
   749  00F2  0833               	movf	_decT,w
   750  00F3  3E30               	addlw	48
   751  00F4  00A5               	movwf	??_main
   752  00F5  0825               	movf	??_main,w
   753  00F6  00B3               	movwf	_decT
   754  00F7                     l1407:
   755                           
   756                           ;slave2_main.c: 142:            uniT=uniT+0x30;
   757  00F7  0879               	movf	_uniT,w
   758  00F8  3E30               	addlw	48
   759  00F9  00A5               	movwf	??_main
   760  00FA  0825               	movf	??_main,w
   761  00FB  00F9               	movwf	_uniT
   762  00FC  28FE               	goto	l1411
   763  00FD                     l1409:
   764                           
   765                           ;slave2_main.c: 146:             T_byte1 = 0;
   766  00FD  01F8               	clrf	_T_byte1
   767  00FE                     l1411:
   768                           
   769                           ;slave2_main.c: 149:         _delay((unsigned long)((900)*(8000000/4000.0)));
   770  00FE  300A               	movlw	10
   771  00FF  1283               	bcf	3,5	;RP0=0, select bank0
   772  0100  1303               	bcf	3,6	;RP1=0, select bank0
   773  0101  00A7               	movwf	??_main+2
   774  0102  3022               	movlw	34
   775  0103  00A6               	movwf	??_main+1
   776  0104  30A0               	movlw	160
   777  0105  00A5               	movwf	??_main
   778  0106                     u1027:
   779  0106  0BA5               	decfsz	??_main,f
   780  0107  2906               	goto	u1027
   781  0108  0BA6               	decfsz	??_main+1,f
   782  0109  2906               	goto	u1027
   783  010A  0BA7               	decfsz	??_main+2,f
   784  010B  2906               	goto	u1027
   785  010C  0000               	nop
   786  010D  2827               	goto	l175
   787  010E  120A  118A  280C   	ljmp	start
   788  0111                     __end_of_main:
   789                           
   790                           	psect	text1
   791  0276                     __ptext1:	
   792 ;; *************** function _setup *****************
   793 ;; Defined at:
   794 ;;		line 154 in file "slave2_main.c"
   795 ;; Parameters:    Size  Location     Type
   796 ;;		None
   797 ;; Auto vars:     Size  Location     Type
   798 ;;		None
   799 ;; Return value:  Size  Location     Type
   800 ;;                  1    wreg      void 
   801 ;; Registers used:
   802 ;;		wreg, status,2, status,0, pclath, cstack
   803 ;; Tracked objects:
   804 ;;		On entry : 0/0
   805 ;;		On exit  : 0/0
   806 ;;		Unchanged: 0/0
   807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   808 ;;      Params:         0       0       0       0       0
   809 ;;      Locals:         0       0       0       0       0
   810 ;;      Temps:          0       0       0       0       0
   811 ;;      Totals:         0       0       0       0       0
   812 ;;Total ram usage:        0 bytes
   813 ;; Hardware stack levels used:    1
   814 ;; Hardware stack levels required when called:    2
   815 ;; This function calls:
   816 ;;		_I2C_Slave_Init
   817 ;; This function is called by:
   818 ;;		_main
   819 ;; This function uses a non-reentrant model
   820 ;;
   821                           
   822                           
   823                           ;psect for function _setup
   824  0276                     _setup:
   825  0276                     l1111:	
   826                           ;incstack = 0
   827                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   828                           
   829                           
   830                           ;slave2_main.c: 156:     ANSEL = 0B0000000;
   831  0276  1683               	bsf	3,5	;RP0=1, select bank3
   832  0277  1703               	bsf	3,6	;RP1=1, select bank3
   833  0278  0188               	clrf	8	;volatile
   834                           
   835                           ;slave2_main.c: 157:     ANSELH = 0X00;
   836  0279  0189               	clrf	9	;volatile
   837                           
   838                           ;slave2_main.c: 159:     TRISA = 0B0000000;
   839  027A  1683               	bsf	3,5	;RP0=1, select bank1
   840  027B  1303               	bcf	3,6	;RP1=0, select bank1
   841  027C  0185               	clrf	5	;volatile
   842                           
   843                           ;slave2_main.c: 160:     TRISD = 0X00;
   844  027D  0188               	clrf	8	;volatile
   845                           
   846                           ;slave2_main.c: 161:     TRISE = 0X00;
   847  027E  0189               	clrf	9	;volatile
   848                           
   849                           ;slave2_main.c: 162:     TRISB = 0X00;
   850  027F  0186               	clrf	6	;volatile
   851                           
   852                           ;slave2_main.c: 164:     PORTA = 0X00;
   853  0280  1283               	bcf	3,5	;RP0=0, select bank0
   854  0281  1303               	bcf	3,6	;RP1=0, select bank0
   855  0282  0185               	clrf	5	;volatile
   856                           
   857                           ;slave2_main.c: 165:     PORTB = 0X00;
   858  0283  0186               	clrf	6	;volatile
   859                           
   860                           ;slave2_main.c: 166:     PORTC = 0X00;
   861  0284  0187               	clrf	7	;volatile
   862                           
   863                           ;slave2_main.c: 167:     PORTD = 0X00;
   864  0285  0188               	clrf	8	;volatile
   865                           
   866                           ;slave2_main.c: 168:     PORTE = 0X00;
   867  0286  0189               	clrf	9	;volatile
   868  0287                     l1113:
   869                           
   870                           ;slave2_main.c: 171:     OSCCONbits.IRCF2 = 1;
   871  0287  1683               	bsf	3,5	;RP0=1, select bank1
   872  0288  1303               	bcf	3,6	;RP1=0, select bank1
   873  0289  170F               	bsf	15,6	;volatile
   874  028A                     l1115:
   875                           
   876                           ;slave2_main.c: 172:     OSCCONbits.IRCF1 = 1;
   877  028A  168F               	bsf	15,5	;volatile
   878  028B                     l1117:
   879                           
   880                           ;slave2_main.c: 173:     OSCCONbits.IRCF0 = 1;
   881  028B  160F               	bsf	15,4	;volatile
   882  028C                     l1119:
   883                           
   884                           ;slave2_main.c: 174:     OSCCONbits.SCS = 1;
   885  028C  140F               	bsf	15,0	;volatile
   886  028D                     l1121:
   887                           
   888                           ;slave2_main.c: 177:     INTCONbits.GIE = 1;
   889  028D  178B               	bsf	11,7	;volatile
   890  028E                     l1123:
   891                           
   892                           ;slave2_main.c: 178:     INTCONbits.PEIE = 1;
   893  028E  170B               	bsf	11,6	;volatile
   894  028F                     l1125:
   895                           
   896                           ;slave2_main.c: 179:     I2C_Slave_Init(0x80);
   897  028F  3080               	movlw	128
   898  0290  120A  118A  22CF  120A  118A  	fcall	_I2C_Slave_Init
   899  0295                     l184:
   900  0295  0008               	return
   901  0296                     __end_of_setup:
   902                           
   903                           	psect	text2
   904  02CF                     __ptext2:	
   905 ;; *************** function _I2C_Slave_Init *****************
   906 ;; Defined at:
   907 ;;		line 93 in file "I2C.c"
   908 ;; Parameters:    Size  Location     Type
   909 ;;  address         1    wreg     unsigned char 
   910 ;; Auto vars:     Size  Location     Type
   911 ;;  address         1    3[COMMON] unsigned char 
   912 ;; Return value:  Size  Location     Type
   913 ;;                  1    wreg      void 
   914 ;; Registers used:
   915 ;;		wreg
   916 ;; Tracked objects:
   917 ;;		On entry : 0/0
   918 ;;		On exit  : 0/0
   919 ;;		Unchanged: 0/0
   920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   921 ;;      Params:         0       0       0       0       0
   922 ;;      Locals:         1       0       0       0       0
   923 ;;      Temps:          0       0       0       0       0
   924 ;;      Totals:         1       0       0       0       0
   925 ;;Total ram usage:        1 bytes
   926 ;; Hardware stack levels used:    1
   927 ;; Hardware stack levels required when called:    1
   928 ;; This function calls:
   929 ;;		Nothing
   930 ;; This function is called by:
   931 ;;		_setup
   932 ;; This function uses a non-reentrant model
   933 ;;
   934                           
   935                           
   936                           ;psect for function _I2C_Slave_Init
   937  02CF                     _I2C_Slave_Init:
   938                           
   939                           ;incstack = 0
   940                           ; Regs used in _I2C_Slave_Init: [wreg]
   941                           ;I2C_Slave_Init@address stored from wreg
   942  02CF  00F3               	movwf	I2C_Slave_Init@address
   943  02D0                     l1097:
   944                           
   945                           ;I2C.c: 93: void I2C_Slave_Init(uint8_t address);I2C.c: 94: {;I2C.c: 95:     SSPADD = ad
      +                          dress;
   946  02D0  0873               	movf	I2C_Slave_Init@address,w
   947  02D1  1683               	bsf	3,5	;RP0=1, select bank1
   948  02D2  1303               	bcf	3,6	;RP1=0, select bank1
   949  02D3  0093               	movwf	19	;volatile
   950                           
   951                           ;I2C.c: 96:     SSPCON = 0x36;
   952  02D4  3036               	movlw	54
   953  02D5  1283               	bcf	3,5	;RP0=0, select bank0
   954  02D6  1303               	bcf	3,6	;RP1=0, select bank0
   955  02D7  0094               	movwf	20	;volatile
   956                           
   957                           ;I2C.c: 97:     SSPSTAT = 0x80;
   958  02D8  3080               	movlw	128
   959  02D9  1683               	bsf	3,5	;RP0=1, select bank1
   960  02DA  1303               	bcf	3,6	;RP1=0, select bank1
   961  02DB  0094               	movwf	20	;volatile
   962                           
   963                           ;I2C.c: 98:     SSPCON2 = 0x01;
   964  02DC  3001               	movlw	1
   965  02DD  0091               	movwf	17	;volatile
   966  02DE                     l1099:
   967                           
   968                           ;I2C.c: 99:     TRISC3 = 1;
   969  02DE  1587               	bsf	7,3	;volatile
   970  02DF                     l1101:
   971                           
   972                           ;I2C.c: 100:     TRISC4 = 1;
   973  02DF  1607               	bsf	7,4	;volatile
   974  02E0                     l1103:
   975                           
   976                           ;I2C.c: 101:     GIE = 1;
   977  02E0  178B               	bsf	11,7	;volatile
   978  02E1                     l1105:
   979                           
   980                           ;I2C.c: 102:     PEIE = 1;
   981  02E1  170B               	bsf	11,6	;volatile
   982  02E2                     l1107:
   983                           
   984                           ;I2C.c: 103:     SSPIF = 0;
   985  02E2  1283               	bcf	3,5	;RP0=0, select bank0
   986  02E3  1303               	bcf	3,6	;RP1=0, select bank0
   987  02E4  118C               	bcf	12,3	;volatile
   988  02E5                     l1109:
   989                           
   990                           ;I2C.c: 104:     SSPIE = 1;
   991  02E5  1683               	bsf	3,5	;RP0=1, select bank1
   992  02E6  1303               	bcf	3,6	;RP1=0, select bank1
   993  02E7  158C               	bsf	12,3	;volatile
   994  02E8                     l55:
   995  02E8  0008               	return
   996  02E9                     __end_of_I2C_Slave_Init:
   997                           
   998                           	psect	text3
   999  01D9                     __ptext3:	
  1000 ;; *************** function ___awmod *****************
  1001 ;; Defined at:
  1002 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;  divisor         2    3[COMMON] int 
  1005 ;;  dividend        2    5[COMMON] int 
  1006 ;; Auto vars:     Size  Location     Type
  1007 ;;  sign            1    2[BANK0 ] unsigned char 
  1008 ;;  counter         1    1[BANK0 ] unsigned char 
  1009 ;; Return value:  Size  Location     Type
  1010 ;;                  2    3[COMMON] int 
  1011 ;; Registers used:
  1012 ;;		wreg, status,2, status,0
  1013 ;; Tracked objects:
  1014 ;;		On entry : 0/0
  1015 ;;		On exit  : 0/0
  1016 ;;		Unchanged: 0/0
  1017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1018 ;;      Params:         4       0       0       0       0
  1019 ;;      Locals:         0       2       0       0       0
  1020 ;;      Temps:          0       1       0       0       0
  1021 ;;      Totals:         4       3       0       0       0
  1022 ;;Total ram usage:        7 bytes
  1023 ;; Hardware stack levels used:    1
  1024 ;; Hardware stack levels required when called:    1
  1025 ;; This function calls:
  1026 ;;		Nothing
  1027 ;; This function is called by:
  1028 ;;		_main
  1029 ;; This function uses a non-reentrant model
  1030 ;;
  1031                           
  1032                           
  1033                           ;psect for function ___awmod
  1034  01D9                     ___awmod:
  1035  01D9                     l1353:	
  1036                           ;incstack = 0
  1037                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1038                           
  1039  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  1040  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  1041  01DB  01A2               	clrf	___awmod@sign
  1042  01DC                     l1355:
  1043  01DC  1FF6               	btfss	___awmod@dividend+1,7
  1044  01DD  29DF               	goto	u911
  1045  01DE  29E0               	goto	u910
  1046  01DF                     u911:
  1047  01DF  29E7               	goto	l1361
  1048  01E0                     u910:
  1049  01E0                     l1357:
  1050  01E0  09F5               	comf	___awmod@dividend,f
  1051  01E1  09F6               	comf	___awmod@dividend+1,f
  1052  01E2  0AF5               	incf	___awmod@dividend,f
  1053  01E3  1903               	skipnz
  1054  01E4  0AF6               	incf	___awmod@dividend+1,f
  1055  01E5                     l1359:
  1056  01E5  01A2               	clrf	___awmod@sign
  1057  01E6  0AA2               	incf	___awmod@sign,f
  1058  01E7                     l1361:
  1059  01E7  1FF4               	btfss	___awmod@divisor+1,7
  1060  01E8  29EA               	goto	u921
  1061  01E9  29EB               	goto	u920
  1062  01EA                     u921:
  1063  01EA  29F0               	goto	l1365
  1064  01EB                     u920:
  1065  01EB                     l1363:
  1066  01EB  09F3               	comf	___awmod@divisor,f
  1067  01EC  09F4               	comf	___awmod@divisor+1,f
  1068  01ED  0AF3               	incf	___awmod@divisor,f
  1069  01EE  1903               	skipnz
  1070  01EF  0AF4               	incf	___awmod@divisor+1,f
  1071  01F0                     l1365:
  1072  01F0  0873               	movf	___awmod@divisor,w
  1073  01F1  0474               	iorwf	___awmod@divisor+1,w
  1074  01F2  1903               	btfsc	3,2
  1075  01F3  29F5               	goto	u931
  1076  01F4  29F6               	goto	u930
  1077  01F5                     u931:
  1078  01F5  2A25               	goto	l1383
  1079  01F6                     u930:
  1080  01F6                     l1367:
  1081  01F6  01A1               	clrf	___awmod@counter
  1082  01F7  0AA1               	incf	___awmod@counter,f
  1083  01F8  2A04               	goto	l1373
  1084  01F9                     l1369:
  1085  01F9  3001               	movlw	1
  1086  01FA                     u945:
  1087  01FA  1003               	clrc
  1088  01FB  0DF3               	rlf	___awmod@divisor,f
  1089  01FC  0DF4               	rlf	___awmod@divisor+1,f
  1090  01FD  3EFF               	addlw	-1
  1091  01FE  1D03               	skipz
  1092  01FF  29FA               	goto	u945
  1093  0200                     l1371:
  1094  0200  3001               	movlw	1
  1095  0201  00A0               	movwf	??___awmod
  1096  0202  0820               	movf	??___awmod,w
  1097  0203  07A1               	addwf	___awmod@counter,f
  1098  0204                     l1373:
  1099  0204  1FF4               	btfss	___awmod@divisor+1,7
  1100  0205  2A07               	goto	u951
  1101  0206  2A08               	goto	u950
  1102  0207                     u951:
  1103  0207  29F9               	goto	l1369
  1104  0208                     u950:
  1105  0208                     l1375:
  1106  0208  0874               	movf	___awmod@divisor+1,w
  1107  0209  0276               	subwf	___awmod@dividend+1,w
  1108  020A  1D03               	skipz
  1109  020B  2A0E               	goto	u965
  1110  020C  0873               	movf	___awmod@divisor,w
  1111  020D  0275               	subwf	___awmod@dividend,w
  1112  020E                     u965:
  1113  020E  1C03               	skipc
  1114  020F  2A11               	goto	u961
  1115  0210  2A12               	goto	u960
  1116  0211                     u961:
  1117  0211  2A18               	goto	l1379
  1118  0212                     u960:
  1119  0212                     l1377:
  1120  0212  0873               	movf	___awmod@divisor,w
  1121  0213  02F5               	subwf	___awmod@dividend,f
  1122  0214  0874               	movf	___awmod@divisor+1,w
  1123  0215  1C03               	skipc
  1124  0216  03F6               	decf	___awmod@dividend+1,f
  1125  0217  02F6               	subwf	___awmod@dividend+1,f
  1126  0218                     l1379:
  1127  0218  3001               	movlw	1
  1128  0219                     u975:
  1129  0219  1003               	clrc
  1130  021A  0CF4               	rrf	___awmod@divisor+1,f
  1131  021B  0CF3               	rrf	___awmod@divisor,f
  1132  021C  3EFF               	addlw	-1
  1133  021D  1D03               	skipz
  1134  021E  2A19               	goto	u975
  1135  021F                     l1381:
  1136  021F  3001               	movlw	1
  1137  0220  02A1               	subwf	___awmod@counter,f
  1138  0221  1D03               	btfss	3,2
  1139  0222  2A24               	goto	u981
  1140  0223  2A25               	goto	u980
  1141  0224                     u981:
  1142  0224  2A08               	goto	l1375
  1143  0225                     u980:
  1144  0225                     l1383:
  1145  0225  0822               	movf	___awmod@sign,w
  1146  0226  1903               	btfsc	3,2
  1147  0227  2A29               	goto	u991
  1148  0228  2A2A               	goto	u990
  1149  0229                     u991:
  1150  0229  2A2F               	goto	l1387
  1151  022A                     u990:
  1152  022A                     l1385:
  1153  022A  09F5               	comf	___awmod@dividend,f
  1154  022B  09F6               	comf	___awmod@dividend+1,f
  1155  022C  0AF5               	incf	___awmod@dividend,f
  1156  022D  1903               	skipnz
  1157  022E  0AF6               	incf	___awmod@dividend+1,f
  1158  022F                     l1387:
  1159  022F  0876               	movf	___awmod@dividend+1,w
  1160  0230  00F4               	movwf	?___awmod+1
  1161  0231  0875               	movf	___awmod@dividend,w
  1162  0232  00F3               	movwf	?___awmod
  1163  0233                     l457:
  1164  0233  0008               	return
  1165  0234                     __end_of___awmod:
  1166                           
  1167                           	psect	text4
  1168  0111                     __ptext4:	
  1169 ;; *************** function ___awdiv *****************
  1170 ;; Defined at:
  1171 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1172 ;; Parameters:    Size  Location     Type
  1173 ;;  divisor         2    3[COMMON] int 
  1174 ;;  dividend        2    5[COMMON] int 
  1175 ;; Auto vars:     Size  Location     Type
  1176 ;;  quotient        2    3[BANK0 ] int 
  1177 ;;  sign            1    2[BANK0 ] unsigned char 
  1178 ;;  counter         1    1[BANK0 ] unsigned char 
  1179 ;; Return value:  Size  Location     Type
  1180 ;;                  2    3[COMMON] int 
  1181 ;; Registers used:
  1182 ;;		wreg, status,2, status,0
  1183 ;; Tracked objects:
  1184 ;;		On entry : 0/0
  1185 ;;		On exit  : 0/0
  1186 ;;		Unchanged: 0/0
  1187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1188 ;;      Params:         4       0       0       0       0
  1189 ;;      Locals:         0       4       0       0       0
  1190 ;;      Temps:          0       1       0       0       0
  1191 ;;      Totals:         4       5       0       0       0
  1192 ;;Total ram usage:        9 bytes
  1193 ;; Hardware stack levels used:    1
  1194 ;; Hardware stack levels required when called:    1
  1195 ;; This function calls:
  1196 ;;		Nothing
  1197 ;; This function is called by:
  1198 ;;		_main
  1199 ;; This function uses a non-reentrant model
  1200 ;;
  1201                           
  1202                           
  1203                           ;psect for function ___awdiv
  1204  0111                     ___awdiv:
  1205  0111                     l1309:	
  1206                           ;incstack = 0
  1207                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1208                           
  1209  0111  1283               	bcf	3,5	;RP0=0, select bank0
  1210  0112  1303               	bcf	3,6	;RP1=0, select bank0
  1211  0113  01A2               	clrf	___awdiv@sign
  1212  0114                     l1311:
  1213  0114  1FF4               	btfss	___awdiv@divisor+1,7
  1214  0115  2917               	goto	u811
  1215  0116  2918               	goto	u810
  1216  0117                     u811:
  1217  0117  291F               	goto	l1317
  1218  0118                     u810:
  1219  0118                     l1313:
  1220  0118  09F3               	comf	___awdiv@divisor,f
  1221  0119  09F4               	comf	___awdiv@divisor+1,f
  1222  011A  0AF3               	incf	___awdiv@divisor,f
  1223  011B  1903               	skipnz
  1224  011C  0AF4               	incf	___awdiv@divisor+1,f
  1225  011D                     l1315:
  1226  011D  01A2               	clrf	___awdiv@sign
  1227  011E  0AA2               	incf	___awdiv@sign,f
  1228  011F                     l1317:
  1229  011F  1FF6               	btfss	___awdiv@dividend+1,7
  1230  0120  2922               	goto	u821
  1231  0121  2923               	goto	u820
  1232  0122                     u821:
  1233  0122  292C               	goto	l1323
  1234  0123                     u820:
  1235  0123                     l1319:
  1236  0123  09F5               	comf	___awdiv@dividend,f
  1237  0124  09F6               	comf	___awdiv@dividend+1,f
  1238  0125  0AF5               	incf	___awdiv@dividend,f
  1239  0126  1903               	skipnz
  1240  0127  0AF6               	incf	___awdiv@dividend+1,f
  1241  0128                     l1321:
  1242  0128  3001               	movlw	1
  1243  0129  00A0               	movwf	??___awdiv
  1244  012A  0820               	movf	??___awdiv,w
  1245  012B  06A2               	xorwf	___awdiv@sign,f
  1246  012C                     l1323:
  1247  012C  01A3               	clrf	___awdiv@quotient
  1248  012D  01A4               	clrf	___awdiv@quotient+1
  1249  012E                     l1325:
  1250  012E  0873               	movf	___awdiv@divisor,w
  1251  012F  0474               	iorwf	___awdiv@divisor+1,w
  1252  0130  1903               	btfsc	3,2
  1253  0131  2933               	goto	u831
  1254  0132  2934               	goto	u830
  1255  0133                     u831:
  1256  0133  296B               	goto	l1345
  1257  0134                     u830:
  1258  0134                     l1327:
  1259  0134  01A1               	clrf	___awdiv@counter
  1260  0135  0AA1               	incf	___awdiv@counter,f
  1261  0136  2942               	goto	l1333
  1262  0137                     l1329:
  1263  0137  3001               	movlw	1
  1264  0138                     u845:
  1265  0138  1003               	clrc
  1266  0139  0DF3               	rlf	___awdiv@divisor,f
  1267  013A  0DF4               	rlf	___awdiv@divisor+1,f
  1268  013B  3EFF               	addlw	-1
  1269  013C  1D03               	skipz
  1270  013D  2938               	goto	u845
  1271  013E                     l1331:
  1272  013E  3001               	movlw	1
  1273  013F  00A0               	movwf	??___awdiv
  1274  0140  0820               	movf	??___awdiv,w
  1275  0141  07A1               	addwf	___awdiv@counter,f
  1276  0142                     l1333:
  1277  0142  1FF4               	btfss	___awdiv@divisor+1,7
  1278  0143  2945               	goto	u851
  1279  0144  2946               	goto	u850
  1280  0145                     u851:
  1281  0145  2937               	goto	l1329
  1282  0146                     u850:
  1283  0146                     l1335:
  1284  0146  3001               	movlw	1
  1285  0147                     u865:
  1286  0147  1003               	clrc
  1287  0148  0DA3               	rlf	___awdiv@quotient,f
  1288  0149  0DA4               	rlf	___awdiv@quotient+1,f
  1289  014A  3EFF               	addlw	-1
  1290  014B  1D03               	skipz
  1291  014C  2947               	goto	u865
  1292  014D  0874               	movf	___awdiv@divisor+1,w
  1293  014E  0276               	subwf	___awdiv@dividend+1,w
  1294  014F  1D03               	skipz
  1295  0150  2953               	goto	u875
  1296  0151  0873               	movf	___awdiv@divisor,w
  1297  0152  0275               	subwf	___awdiv@dividend,w
  1298  0153                     u875:
  1299  0153  1C03               	skipc
  1300  0154  2956               	goto	u871
  1301  0155  2957               	goto	u870
  1302  0156                     u871:
  1303  0156  295E               	goto	l1341
  1304  0157                     u870:
  1305  0157                     l1337:
  1306  0157  0873               	movf	___awdiv@divisor,w
  1307  0158  02F5               	subwf	___awdiv@dividend,f
  1308  0159  0874               	movf	___awdiv@divisor+1,w
  1309  015A  1C03               	skipc
  1310  015B  03F6               	decf	___awdiv@dividend+1,f
  1311  015C  02F6               	subwf	___awdiv@dividend+1,f
  1312  015D                     l1339:
  1313  015D  1423               	bsf	___awdiv@quotient,0
  1314  015E                     l1341:
  1315  015E  3001               	movlw	1
  1316  015F                     u885:
  1317  015F  1003               	clrc
  1318  0160  0CF4               	rrf	___awdiv@divisor+1,f
  1319  0161  0CF3               	rrf	___awdiv@divisor,f
  1320  0162  3EFF               	addlw	-1
  1321  0163  1D03               	skipz
  1322  0164  295F               	goto	u885
  1323  0165                     l1343:
  1324  0165  3001               	movlw	1
  1325  0166  02A1               	subwf	___awdiv@counter,f
  1326  0167  1D03               	btfss	3,2
  1327  0168  296A               	goto	u891
  1328  0169  296B               	goto	u890
  1329  016A                     u891:
  1330  016A  2946               	goto	l1335
  1331  016B                     u890:
  1332  016B                     l1345:
  1333  016B  0822               	movf	___awdiv@sign,w
  1334  016C  1903               	btfsc	3,2
  1335  016D  296F               	goto	u901
  1336  016E  2970               	goto	u900
  1337  016F                     u901:
  1338  016F  2975               	goto	l1349
  1339  0170                     u900:
  1340  0170                     l1347:
  1341  0170  09A3               	comf	___awdiv@quotient,f
  1342  0171  09A4               	comf	___awdiv@quotient+1,f
  1343  0172  0AA3               	incf	___awdiv@quotient,f
  1344  0173  1903               	skipnz
  1345  0174  0AA4               	incf	___awdiv@quotient+1,f
  1346  0175                     l1349:
  1347  0175  0824               	movf	___awdiv@quotient+1,w
  1348  0176  00F4               	movwf	?___awdiv+1
  1349  0177  0823               	movf	___awdiv@quotient,w
  1350  0178  00F3               	movwf	?___awdiv
  1351  0179                     l444:
  1352  0179  0008               	return
  1353  017A                     __end_of___awdiv:
  1354                           
  1355                           	psect	text5
  1356  02B4                     __ptext5:	
  1357 ;; *************** function _StartSignal *****************
  1358 ;; Defined at:
  1359 ;;		line 187 in file "slave2_main.c"
  1360 ;; Parameters:    Size  Location     Type
  1361 ;;		None
  1362 ;; Auto vars:     Size  Location     Type
  1363 ;;		None
  1364 ;; Return value:  Size  Location     Type
  1365 ;;                  1    wreg      void 
  1366 ;; Registers used:
  1367 ;;		wreg
  1368 ;; Tracked objects:
  1369 ;;		On entry : 0/0
  1370 ;;		On exit  : 0/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1373 ;;      Params:         0       0       0       0       0
  1374 ;;      Locals:         0       0       0       0       0
  1375 ;;      Temps:          2       0       0       0       0
  1376 ;;      Totals:         2       0       0       0       0
  1377 ;;Total ram usage:        2 bytes
  1378 ;; Hardware stack levels used:    1
  1379 ;; Hardware stack levels required when called:    1
  1380 ;; This function calls:
  1381 ;;		Nothing
  1382 ;; This function is called by:
  1383 ;;		_main
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387                           
  1388                           ;psect for function _StartSignal
  1389  02B4                     _StartSignal:
  1390  02B4                     l1127:	
  1391                           ;incstack = 0
  1392                           ; Regs used in _StartSignal: [wreg]
  1393                           
  1394                           
  1395                           ;slave2_main.c: 189:   TRISAbits.TRISA0 = 0;
  1396  02B4  1683               	bsf	3,5	;RP0=1, select bank1
  1397  02B5  1303               	bcf	3,6	;RP1=0, select bank1
  1398  02B6  1005               	bcf	5,0	;volatile
  1399                           
  1400                           ;slave2_main.c: 190:   PORTAbits.RA0 = 0;
  1401  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  1402  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  1403  02B9  1005               	bcf	5,0	;volatile
  1404  02BA                     l1129:
  1405                           
  1406                           ;slave2_main.c: 191:   _delay((unsigned long)((18)*(8000000/4000.0)));
  1407  02BA  302F               	movlw	47
  1408  02BB  00F4               	movwf	??_StartSignal+1
  1409  02BC  30BF               	movlw	191
  1410  02BD  00F3               	movwf	??_StartSignal
  1411  02BE                     u1037:
  1412  02BE  0BF3               	decfsz	??_StartSignal,f
  1413  02BF  2ABE               	goto	u1037
  1414  02C0  0BF4               	decfsz	??_StartSignal+1,f
  1415  02C1  2ABE               	goto	u1037
  1416  02C2  2AC3               	nop2
  1417  02C3                     l1131:
  1418                           
  1419                           ;slave2_main.c: 192:   PORTAbits.RA0 = 1;
  1420  02C3  1283               	bcf	3,5	;RP0=0, select bank0
  1421  02C4  1303               	bcf	3,6	;RP1=0, select bank0
  1422  02C5  1405               	bsf	5,0	;volatile
  1423                           
  1424                           ;slave2_main.c: 193:   _delay((unsigned long)((30)*(8000000/4000000.0)));
  1425  02C6  3013               	movlw	19
  1426  02C7  00F3               	movwf	??_StartSignal
  1427  02C8                     u1047:
  1428  02C8  0BF3               	decfsz	??_StartSignal,f
  1429  02C9  2AC8               	goto	u1047
  1430  02CA  2ACB               	nop2
  1431  02CB                     l1133:
  1432                           
  1433                           ;slave2_main.c: 194:   TRISAbits.TRISA0 = 1;
  1434  02CB  1683               	bsf	3,5	;RP0=1, select bank1
  1435  02CC  1303               	bcf	3,6	;RP1=0, select bank1
  1436  02CD  1405               	bsf	5,0	;volatile
  1437  02CE                     l187:
  1438  02CE  0008               	return
  1439  02CF                     __end_of_StartSignal:
  1440                           
  1441                           	psect	text6
  1442  0234                     __ptext6:	
  1443 ;; *************** function _ReadData *****************
  1444 ;; Defined at:
  1445 ;;		line 212 in file "slave2_main.c"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;		None
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;  j               1    6[COMMON] unsigned char 
  1450 ;;  i               1    5[COMMON] unsigned char 
  1451 ;; Return value:  Size  Location     Type
  1452 ;;                  1    wreg      unsigned char 
  1453 ;; Registers used:
  1454 ;;		wreg, status,2, status,0
  1455 ;; Tracked objects:
  1456 ;;		On entry : 0/0
  1457 ;;		On exit  : 0/0
  1458 ;;		Unchanged: 0/0
  1459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1460 ;;      Params:         0       0       0       0       0
  1461 ;;      Locals:         2       0       0       0       0
  1462 ;;      Temps:          2       0       0       0       0
  1463 ;;      Totals:         4       0       0       0       0
  1464 ;;Total ram usage:        4 bytes
  1465 ;; Hardware stack levels used:    1
  1466 ;; Hardware stack levels required when called:    1
  1467 ;; This function calls:
  1468 ;;		Nothing
  1469 ;; This function is called by:
  1470 ;;		_main
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474                           
  1475                           ;psect for function _ReadData
  1476  0234                     _ReadData:
  1477  0234                     l1149:	
  1478                           ;incstack = 0
  1479                           ; Regs used in _ReadData: [wreg+status,2+status,0]
  1480                           
  1481                           
  1482                           ;slave2_main.c: 217:   char i, j;;slave2_main.c: 218:   for(j = 0; j < 8; j++)
  1483  0234  01F6               	clrf	ReadData@j
  1484  0235                     l197:
  1485  0235  1283               	bcf	3,5	;RP0=0, select bank0
  1486  0236  1303               	bcf	3,6	;RP1=0, select bank0
  1487  0237  1C05               	btfss	5,0	;volatile
  1488  0238  2A3A               	goto	u451
  1489  0239  2A3B               	goto	u450
  1490  023A                     u451:
  1491  023A  2A35               	goto	l197
  1492  023B                     u450:
  1493  023B                     l1155:
  1494                           
  1495                           ;slave2_main.c: 221:     _delay((unsigned long)((30)*(8000000/4000000.0)));
  1496  023B  3013               	movlw	19
  1497  023C  00F3               	movwf	??_ReadData
  1498  023D                     u1057:
  1499  023D  0BF3               	decfsz	??_ReadData,f
  1500  023E  2A3D               	goto	u1057
  1501  023F  2A40               	nop2
  1502  0240                     l1157:
  1503                           
  1504                           ;slave2_main.c: 222:     if(PORTAbits.RA0 == 0)
  1505  0240  1283               	bcf	3,5	;RP0=0, select bank0
  1506  0241  1303               	bcf	3,6	;RP1=0, select bank0
  1507  0242  1805               	btfsc	5,0	;volatile
  1508  0243  2A45               	goto	u461
  1509  0244  2A46               	goto	u460
  1510  0245                     u461:
  1511  0245  2A57               	goto	l1161
  1512  0246                     u460:
  1513  0246                     l1159:
  1514                           
  1515                           ;slave2_main.c: 223:      i&= ~(1<<(7 - j));
  1516  0246  3001               	movlw	1
  1517  0247  00F3               	movwf	??_ReadData
  1518  0248  0876               	movf	ReadData@j,w
  1519  0249  3C07               	sublw	7
  1520  024A  3E01               	addlw	1
  1521  024B  2A4E               	goto	u474
  1522  024C                     u475:
  1523  024C  1003               	clrc
  1524  024D  0DF3               	rlf	??_ReadData,f
  1525  024E                     u474:
  1526  024E  3EFF               	addlw	-1
  1527  024F  1D03               	skipz
  1528  0250  2A4C               	goto	u475
  1529  0251  0873               	movf	??_ReadData,w
  1530  0252  3AFF               	xorlw	255
  1531  0253  00F4               	movwf	??_ReadData+1
  1532  0254  0874               	movf	??_ReadData+1,w
  1533  0255  05F5               	andwf	ReadData@i,f
  1534  0256  2A6A               	goto	l1163
  1535  0257                     l1161:
  1536                           
  1537                           ;slave2_main.c: 225:     {;slave2_main.c: 226:       i|= (1 << (7 - j));
  1538  0257  3001               	movlw	1
  1539  0258  00F3               	movwf	??_ReadData
  1540  0259  0876               	movf	ReadData@j,w
  1541  025A  3C07               	sublw	7
  1542  025B  3E01               	addlw	1
  1543  025C  2A5F               	goto	u484
  1544  025D                     u485:
  1545  025D  1003               	clrc
  1546  025E  0DF3               	rlf	??_ReadData,f
  1547  025F                     u484:
  1548  025F  3EFF               	addlw	-1
  1549  0260  1D03               	skipz
  1550  0261  2A5D               	goto	u485
  1551  0262  0873               	movf	??_ReadData,w
  1552  0263  00F4               	movwf	??_ReadData+1
  1553  0264  0874               	movf	??_ReadData+1,w
  1554  0265  04F5               	iorwf	ReadData@i,f
  1555  0266                     l202:	
  1556                           ;slave2_main.c: 227:       while(PORTAbits.RA0 );
  1557                           
  1558  0266  1805               	btfsc	5,0	;volatile
  1559  0267  2A69               	goto	u491
  1560  0268  2A6A               	goto	u490
  1561  0269                     u491:
  1562  0269  2A66               	goto	l202
  1563  026A                     u490:
  1564  026A                     l1163:
  1565                           
  1566                           ;slave2_main.c: 229:   }
  1567  026A  3001               	movlw	1
  1568  026B  00F3               	movwf	??_ReadData
  1569  026C  0873               	movf	??_ReadData,w
  1570  026D  07F6               	addwf	ReadData@j,f
  1571  026E                     l1165:
  1572  026E  3008               	movlw	8
  1573  026F  0276               	subwf	ReadData@j,w
  1574  0270  1C03               	skipc
  1575  0271  2A73               	goto	u501
  1576  0272  2A74               	goto	u500
  1577  0273                     u501:
  1578  0273  2A35               	goto	l197
  1579  0274                     u500:
  1580  0274                     l1167:
  1581                           
  1582                           ;slave2_main.c: 230:  return i;
  1583  0274  0875               	movf	ReadData@i,w
  1584  0275                     l205:
  1585  0275  0008               	return
  1586  0276                     __end_of_ReadData:
  1587                           
  1588                           	psect	text7
  1589  0296                     __ptext7:	
  1590 ;; *************** function _CheckResponse *****************
  1591 ;; Defined at:
  1592 ;;		line 198 in file "slave2_main.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;		None
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;		None
  1597 ;; Return value:  Size  Location     Type
  1598 ;;                  1    wreg      void 
  1599 ;; Registers used:
  1600 ;;		wreg, status,2
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1606 ;;      Params:         0       0       0       0       0
  1607 ;;      Locals:         0       0       0       0       0
  1608 ;;      Temps:          1       0       0       0       0
  1609 ;;      Totals:         1       0       0       0       0
  1610 ;;Total ram usage:        1 bytes
  1611 ;; Hardware stack levels used:    1
  1612 ;; Hardware stack levels required when called:    1
  1613 ;; This function calls:
  1614 ;;		Nothing
  1615 ;; This function is called by:
  1616 ;;		_main
  1617 ;; This function uses a non-reentrant model
  1618 ;;
  1619                           
  1620                           
  1621                           ;psect for function _CheckResponse
  1622  0296                     _CheckResponse:
  1623  0296                     l1135:	
  1624                           ;incstack = 0
  1625                           ; Regs used in _CheckResponse: [wreg+status,2]
  1626                           
  1627                           
  1628                           ;slave2_main.c: 200:   Check = 0;
  1629  0296  01FA               	clrf	_Check
  1630  0297                     l1137:
  1631                           
  1632                           ;slave2_main.c: 201:   _delay((unsigned long)((40)*(8000000/4000000.0)));
  1633  0297  301A               	movlw	26
  1634  0298  00F3               	movwf	??_CheckResponse
  1635  0299                     u1067:
  1636  0299  0BF3               	decfsz	??_CheckResponse,f
  1637  029A  2A99               	goto	u1067
  1638  029B  0000               	nop
  1639  029C                     l1139:
  1640                           
  1641                           ;slave2_main.c: 202:   if(PORTAbits.RA0 == 0)
  1642  029C  1283               	bcf	3,5	;RP0=0, select bank0
  1643  029D  1303               	bcf	3,6	;RP1=0, select bank0
  1644  029E  1805               	btfsc	5,0	;volatile
  1645  029F  2AA1               	goto	u431
  1646  02A0  2AA2               	goto	u430
  1647  02A1                     u431:
  1648  02A1  2AB3               	goto	l192
  1649  02A2                     u430:
  1650  02A2                     l1141:
  1651                           
  1652                           ;slave2_main.c: 203:   {;slave2_main.c: 204:     _delay((unsigned long)((80)*(8000000/40
      +                          00000.0)));
  1653  02A2  3035               	movlw	53
  1654  02A3  00F3               	movwf	??_CheckResponse
  1655  02A4                     u1077:
  1656  02A4  0BF3               	decfsz	??_CheckResponse,f
  1657  02A5  2AA4               	goto	u1077
  1658  02A6                     l1143:
  1659                           
  1660                           ;slave2_main.c: 205:     if (PORTAbits.RA0 == 1)
  1661  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  1662  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  1663  02A8  1C05               	btfss	5,0	;volatile
  1664  02A9  2AAB               	goto	u441
  1665  02AA  2AAC               	goto	u440
  1666  02AB                     u441:
  1667  02AB  2AAE               	goto	l1147
  1668  02AC                     u440:
  1669  02AC                     l1145:
  1670                           
  1671                           ;slave2_main.c: 206:     Check = 1;
  1672  02AC  01FA               	clrf	_Check
  1673  02AD  0AFA               	incf	_Check,f
  1674  02AE                     l1147:
  1675                           
  1676                           ;slave2_main.c: 207:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1677  02AE  301A               	movlw	26
  1678  02AF  00F3               	movwf	??_CheckResponse
  1679  02B0                     u1087:
  1680  02B0  0BF3               	decfsz	??_CheckResponse,f
  1681  02B1  2AB0               	goto	u1087
  1682  02B2  0000               	nop
  1683  02B3                     l192:
  1684  02B3  0008               	return
  1685  02B4                     __end_of_CheckResponse:
  1686                           
  1687                           	psect	text8
  1688  017A                     __ptext8:	
  1689 ;; *************** function _isr *****************
  1690 ;; Defined at:
  1691 ;;		line 69 in file "slave2_main.c"
  1692 ;; Parameters:    Size  Location     Type
  1693 ;;		None
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;		None
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  1    wreg      void 
  1698 ;; Registers used:
  1699 ;;		wreg
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1705 ;;      Params:         0       0       0       0       0
  1706 ;;      Locals:         0       0       0       0       0
  1707 ;;      Temps:          3       0       0       0       0
  1708 ;;      Totals:         3       0       0       0       0
  1709 ;;Total ram usage:        3 bytes
  1710 ;; Hardware stack levels used:    1
  1711 ;; This function calls:
  1712 ;;		Nothing
  1713 ;; This function is called by:
  1714 ;;		Interrupt level 1
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           
  1719                           ;psect for function _isr
  1720  017A                     _isr:
  1721  017A                     i1l1253:
  1722                           
  1723                           ;slave2_main.c: 78:        if(PIR1bits.SSPIF == 1){
  1724  017A  1283               	bcf	3,5	;RP0=0, select bank0
  1725  017B  1303               	bcf	3,6	;RP1=0, select bank0
  1726  017C  1D8C               	btfss	12,3	;volatile
  1727  017D  297F               	goto	u70_21
  1728  017E  2980               	goto	u70_20
  1729  017F                     u70_21:
  1730  017F  29D2               	goto	i1l170
  1731  0180                     u70_20:
  1732  0180                     i1l1255:
  1733                           
  1734                           ;slave2_main.c: 80:         SSPCONbits.CKP = 0;
  1735  0180  1214               	bcf	20,4	;volatile
  1736                           
  1737                           ;slave2_main.c: 82:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
  1738  0181  1B14               	btfsc	20,6	;volatile
  1739  0182  2984               	goto	u71_21
  1740  0183  2985               	goto	u71_20
  1741  0184                     u71_21:
  1742  0184  2989               	goto	i1l1259
  1743  0185                     u71_20:
  1744  0185                     i1l1257:
  1745  0185  1F94               	btfss	20,7	;volatile
  1746  0186  2988               	goto	u72_21
  1747  0187  2989               	goto	u72_20
  1748  0188                     u72_21:
  1749  0188  2990               	goto	i1l1267
  1750  0189                     u72_20:
  1751  0189                     i1l1259:
  1752                           
  1753                           ;slave2_main.c: 83:             var = SSPBUF;
  1754  0189  0813               	movf	19,w	;volatile
  1755  018A  00F0               	movwf	??_isr
  1756  018B  0870               	movf	??_isr,w
  1757  018C  00B4               	movwf	_var
  1758  018D                     i1l1261:
  1759                           
  1760                           ;slave2_main.c: 84:             SSPCONbits.SSPOV = 0;
  1761  018D  1314               	bcf	20,6	;volatile
  1762  018E                     i1l1263:
  1763                           
  1764                           ;slave2_main.c: 85:             SSPCONbits.WCOL = 0;
  1765  018E  1394               	bcf	20,7	;volatile
  1766  018F                     i1l1265:
  1767                           
  1768                           ;slave2_main.c: 86:             SSPCONbits.CKP = 1;
  1769  018F  1614               	bsf	20,4	;volatile
  1770  0190                     i1l1267:
  1771                           
  1772                           ;slave2_main.c: 89:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
  1773  0190  1683               	bsf	3,5	;RP0=1, select bank1
  1774  0191  1303               	bcf	3,6	;RP1=0, select bank1
  1775  0192  1A94               	btfsc	20,5	;volatile
  1776  0193  2995               	goto	u73_21
  1777  0194  2996               	goto	u73_20
  1778  0195                     u73_21:
  1779  0195  29AE               	goto	i1l161
  1780  0196                     u73_20:
  1781  0196                     i1l1269:
  1782  0196  1914               	btfsc	20,2	;volatile
  1783  0197  2999               	goto	u74_21
  1784  0198  299A               	goto	u74_20
  1785  0199                     u74_21:
  1786  0199  29AE               	goto	i1l161
  1787  019A                     u74_20:
  1788  019A                     i1l1271:
  1789                           
  1790                           ;slave2_main.c: 91:             var = SSPBUF;
  1791  019A  1283               	bcf	3,5	;RP0=0, select bank0
  1792  019B  1303               	bcf	3,6	;RP1=0, select bank0
  1793  019C  0813               	movf	19,w	;volatile
  1794  019D  00F0               	movwf	??_isr
  1795  019E  0870               	movf	??_isr,w
  1796  019F  00B4               	movwf	_var
  1797  01A0                     i1l1273:
  1798                           
  1799                           ;slave2_main.c: 93:             PIR1bits.SSPIF = 0;
  1800  01A0  118C               	bcf	12,3	;volatile
  1801  01A1                     i1l1275:
  1802                           
  1803                           ;slave2_main.c: 94:             SSPCONbits.CKP = 1;
  1804  01A1  1614               	bsf	20,4	;volatile
  1805  01A2                     i1l162:	
  1806                           ;slave2_main.c: 95:             while(!SSPSTATbits.BF);
  1807                           
  1808  01A2  1683               	bsf	3,5	;RP0=1, select bank1
  1809  01A3  1303               	bcf	3,6	;RP1=0, select bank1
  1810  01A4  1C14               	btfss	20,0	;volatile
  1811  01A5  29A7               	goto	u75_21
  1812  01A6  29A8               	goto	u75_20
  1813  01A7                     u75_21:
  1814  01A7  29A2               	goto	i1l162
  1815  01A8                     u75_20:
  1816  01A8                     i1l1277:
  1817                           
  1818                           ;slave2_main.c: 97:             _delay((unsigned long)((250)*(8000000/4000000.0)));
  1819  01A8  30A6               	movlw	166
  1820  01A9  00F0               	movwf	??_isr
  1821  01AA                     u109_27:
  1822  01AA  0BF0               	decfsz	??_isr,f
  1823  01AB  29AA               	goto	u109_27
  1824  01AC  0000               	nop
  1825                           
  1826                           ;slave2_main.c: 99:         }else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
  1827  01AD  29CF               	goto	i1l165
  1828  01AE                     i1l161:
  1829  01AE  1A94               	btfsc	20,5	;volatile
  1830  01AF  29B1               	goto	u76_21
  1831  01B0  29B2               	goto	u76_20
  1832  01B1                     u76_21:
  1833  01B1  29CF               	goto	i1l165
  1834  01B2                     u76_20:
  1835  01B2                     i1l1279:
  1836  01B2  1D14               	btfss	20,2	;volatile
  1837  01B3  29B5               	goto	u77_21
  1838  01B4  29B6               	goto	u77_20
  1839  01B5                     u77_21:
  1840  01B5  29CF               	goto	i1l165
  1841  01B6                     u77_20:
  1842  01B6                     i1l1281:
  1843                           
  1844                           ;slave2_main.c: 100:             var = SSPBUF;
  1845  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  1846  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  1847  01B8  0813               	movf	19,w	;volatile
  1848  01B9  00F0               	movwf	??_isr
  1849  01BA  0870               	movf	??_isr,w
  1850  01BB  00B4               	movwf	_var
  1851  01BC                     i1l1283:
  1852                           
  1853                           ;slave2_main.c: 101:             BF = 0;
  1854  01BC  1683               	bsf	3,5	;RP0=1, select bank1
  1855  01BD  1303               	bcf	3,6	;RP1=0, select bank1
  1856  01BE  1014               	bcf	20,0	;volatile
  1857                           
  1858                           ;slave2_main.c: 102:             SSPBUF = T_byte1;
  1859  01BF  0878               	movf	_T_byte1,w
  1860  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  1861  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  1862  01C2  0093               	movwf	19	;volatile
  1863  01C3                     i1l1285:
  1864                           
  1865                           ;slave2_main.c: 103:             SSPCONbits.CKP = 1;
  1866  01C3  1614               	bsf	20,4	;volatile
  1867                           
  1868                           ;slave2_main.c: 104:             _delay((unsigned long)((250)*(8000000/4000000.0)));
  1869  01C4  30A6               	movlw	166
  1870  01C5  00F0               	movwf	??_isr
  1871  01C6                     u110_27:
  1872  01C6  0BF0               	decfsz	??_isr,f
  1873  01C7  29C6               	goto	u110_27
  1874  01C8  0000               	nop
  1875  01C9                     i1l167:	
  1876                           ;slave2_main.c: 105:             while(SSPSTATbits.BF);
  1877                           
  1878  01C9  1683               	bsf	3,5	;RP0=1, select bank1
  1879  01CA  1303               	bcf	3,6	;RP1=0, select bank1
  1880  01CB  1814               	btfsc	20,0	;volatile
  1881  01CC  29CE               	goto	u78_21
  1882  01CD  29CF               	goto	u78_20
  1883  01CE                     u78_21:
  1884  01CE  29C9               	goto	i1l167
  1885  01CF                     u78_20:
  1886  01CF                     i1l165:
  1887                           
  1888                           ;slave2_main.c: 108:         PIR1bits.SSPIF = 0;
  1889  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  1890  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  1891  01D1  118C               	bcf	12,3	;volatile
  1892  01D2                     i1l170:
  1893  01D2  0872               	movf	??_isr+2,w
  1894  01D3  008A               	movwf	10
  1895  01D4  0E71               	swapf	??_isr+1,w
  1896  01D5  0083               	movwf	3
  1897  01D6  0EFE               	swapf	btemp,f
  1898  01D7  0E7E               	swapf	btemp,w
  1899  01D8  0009               	retfie
  1900  01D9                     __end_of_isr:
  1901  007E                     btemp	set	126	;btemp
  1902  007E                     wtemp0	set	126
  1903                           
  1904                           	psect	intentry
  1905  0004                     __pintentry:	
  1906                           ;incstack = 0
  1907                           ; Regs used in _isr: [wreg]
  1908                           
  1909  0004                     interrupt_function:
  1910  007E                     saved_w	set	btemp
  1911  0004  00FE               	movwf	btemp
  1912  0005  0E03               	swapf	3,w
  1913  0006  00F1               	movwf	??_isr+1
  1914  0007  080A               	movf	10,w
  1915  0008  00F2               	movwf	??_isr+2
  1916  0009  120A  118A  297A   	ljmp	_isr
  1917                           
  1918                           	psect	config
  1919                           
  1920                           ;Config register CONFIG1 @ 0x2007
  1921                           ;	Oscillator Selection bits
  1922                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1923                           ;	Watchdog Timer Enable bit
  1924                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1925                           ;	Power-up Timer Enable bit
  1926                           ;	PWRTE = ON, PWRT enabled
  1927                           ;	RE3/MCLR pin function select bit
  1928                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1929                           ;	Code Protection bit
  1930                           ;	CP = OFF, Program memory code protection is disabled
  1931                           ;	Data Code Protection bit
  1932                           ;	CPD = OFF, Data memory code protection is disabled
  1933                           ;	Brown Out Reset Selection bits
  1934                           ;	BOREN = OFF, BOR disabled
  1935                           ;	Internal External Switchover bit
  1936                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1937                           ;	Fail-Safe Clock Monitor Enabled bit
  1938                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1939                           ;	Low Voltage Programming Enable bit
  1940                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1941                           ;	In-Circuit Debugger Mode bit
  1942                           ;	DEBUG = 0x1, unprogrammed default
  1943  2007                     	org	8199
  1944  2007  20C4               	dw	8388
  1945                           
  1946                           ;Config register CONFIG2 @ 0x2008
  1947                           ;	Brown-out Reset Selection bit
  1948                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1949                           ;	Flash Program Memory Self Write Enable bits
  1950                           ;	WRT = OFF, Write protection off
  1951  2008                     	org	8200
  1952  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80     13      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ReadData
    _main->___awdiv
    _main->___awmod
    _setup->_I2C_Slave_Init

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    1734
                                              5 BANK0      8     8      0
                      _CheckResponse
                           _ReadData
                        _StartSignal
                            ___awdiv
                            ___awmod
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                     _I2C_Slave_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     793
                                              3 COMMON     4     0      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     805
                                              3 COMMON     4     0      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _StartSignal                                          2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ReadData                                             4     4      0     114
                                              3 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _CheckResponse                                        1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CheckResponse
   _ReadData
   _StartSignal
   ___awdiv
   ___awmod
   _setup
     _I2C_Slave_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      21       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      D      16       5       27.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      21      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Aug 30 18:43:25 2021

            _SSPSTATbits 0094                       _BF 04A0                       l55 02E8  
           ___awdiv@sign 0022                      l202 0266                      l205 0275  
                    l175 0027                      l192 02B3                      l184 0295  
                    l187 02CE                      l444 0179                      l197 0235  
                    l457 0233                      _GIE 005F                      u500 0274  
                    u501 0273                      u430 02A2                      u431 02A1  
                    u440 02AC                      u441 02AB                      u450 023B  
                    u451 023A                      u460 0246                      u461 0245  
                    u490 026A                      u474 024E                      u810 0118  
                    u491 0269                      u475 024C                      u811 0117  
                    u484 025F                      u900 0170                      u820 0123  
                    u485 025D                      u901 016F                      u821 0122  
                    u830 0134                      u910 01E0                      u831 0133  
                    u911 01DF                      u920 01EB                      u921 01EA  
                    u850 0146                      u930 01F6                      u851 0145  
                    u931 01F5                      u845 0138                      u870 0157  
                    u950 0208                      u871 0156                      u951 0207  
                    u960 0212                      u865 0147                      u961 0211  
                    u945 01FA                      u890 016B                      u891 016A  
                    u875 0153                      u980 0225                      u885 015F  
                    u981 0224                      u965 020E                      u990 022A  
                    u991 0229                      u975 0219                      _Sum 002D  
                    _isr 017A                      _var 0034             ___awmod@sign 0022  
                   l1101 02DF                     l1103 02E0                     l1111 0276  
                   l1105 02E1                     l1121 028D                     l1113 0287  
                   l1131 02C3                     l1107 02E2                     l1123 028E  
                   l1115 028A                     l1141 02A2                     l1133 02CB  
                   l1109 02E5                     l1125 028F                     l1117 028B  
                   l1143 02A6                     l1135 0296                     l1127 02B4  
                   l1311 0114                     l1119 028C                     l1145 02AC  
                   l1137 0297                     l1161 0257                     l1129 02BA  
                   l1321 0128                     l1313 0118                     l1401 00E8  
                   l1147 02AE                     l1139 029C                     l1163 026A  
                   l1155 023B                     l1331 013E                     l1323 012C  
                   l1315 011D                     l1403 00ED                     l1411 00FE  
                   l1165 026E                     l1157 0240                     l1149 0234  
                   l1341 015E                     l1333 0142                     l1325 012E  
                   l1317 011F                     l1309 0111                     l1405 00F2  
                   l1167 0274                     l1159 0246                     l1343 0165  
                   l1335 0146                     l1327 0134                     l1319 0123  
                   l1407 00F7                     l1337 0157                     l1329 0137  
                   l1345 016B                     l1361 01E7                     l1353 01D9  
                   l1097 02D0                     l1409 00FD                     l1347 0170  
                   l1339 015D                     l1371 0200                     l1363 01EB  
                   l1355 01DC                     l1099 02DE                     l1349 0175  
                   l1381 021F                     l1373 0204                     l1365 01F0  
                   l1357 01E0                     l1375 0208                     l1367 01F6  
                   l1383 0225                     l1359 01E5                     l1391 0022  
                   l1385 022A                     l1377 0212                     l1369 01F9  
                   l1393 0031                     l1387 022F                     l1379 0218  
                   l1395 0036                     l1397 006B                     l1399 0090  
                   ?_isr 0070                     u1000 0036                     u1001 0035  
                   u1010 0090                     u1011 008F                     u1015 008C  
                   u1027 0106                     u1037 02BE                     u1047 02C8  
                   u1057 023D                     u1067 0299                     u1077 02A4  
                   u1087 02B0                     _PEIE 005E                     _decT 0033  
                   _main 0022                     _uniT 0079                     btemp 007E  
                   start 000C                    ??_isr 0070                    ?_main 0070  
        __end_of___awdiv 017A          __end_of___awmod 0234                    _ANSEL 0188  
        ___awdiv@divisor 0073                    i1l161 01AE                    i1l162 01A2  
                  i1l170 01D2                    i1l165 01CF                    i1l167 01C9  
        ___awdiv@counter 0021                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  u70_20 0180                    u70_21 017F                    u71_20 0185  
                  u71_21 0184                    u72_20 0189                    u72_21 0188  
                  u73_20 0196                    u73_21 0195                    _TRISA 0085  
                  _TRISB 0086                    _TRISD 0088                    _SSPIE 0463  
                  _TRISE 0089                    u74_20 019A                    _SSPIF 0063  
                  u74_21 0199                    u75_20 01A8                    u75_21 01A7  
                  u76_20 01B2                    u76_21 01B1                    u77_20 01B6  
                  u77_21 01B5                    u78_20 01CF                    u78_21 01CE  
                  _Check 007A                    _decHR 0031                    _uniHR 0032  
                  _setup 0276                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0111  
       __end_of_ReadData 0276                   ??_main 0025                   _ADRESH 001E  
       ___awdiv@dividend 0075                   ?_setup 0070                   _ANSELH 0189  
                 u110_27 01C6                   i1l1261 018D                   i1l1253 017A  
                 i1l1271 019A                   i1l1263 018E                   i1l1255 0180  
                 i1l1281 01B6                   i1l1273 01A0                   i1l1265 018F  
                 i1l1257 0185                   i1l1283 01BC                   i1l1275 01A1  
                 i1l1267 0190                   i1l1259 0189                   i1l1285 01C3  
                 i1l1277 01A8                   i1l1269 0196                   i1l1279 01B2  
                 u109_27 01AA                   _SSPADD 0093                   _TRISC3 043B  
                 _TRISC4 043C                   _SSPCON 0014                   _SSPBUF 0013  
              ??___awdiv 0020                ??___awmod 0020         ___awdiv@quotient 0023  
        ___awmod@divisor 0073          ___awmod@counter 0021   __size_of_CheckResponse 001E  
                 saved_w 007E  __end_of__initialization 001E           __pcstackCOMMON 0070  
__size_of_I2C_Slave_Init 001A            ??_StartSignal 0073            __end_of_setup 0296  
                ??_setup 0074    I2C_Slave_Init@address 0073               __pbssBANK0 002D  
              ?_ReadData 0070            _CheckResponse 0296               __pmaintext 0022  
             __pintentry 0004      __end_of_StartSignal 02CF                  _SSPCON2 0091  
                _SSPSTAT 0094               ??_ReadData 0073           ?_CheckResponse 0070  
                _T_byte1 0078                  _T_byte2 0030                  ___awdiv 0111  
                ___awmod 01D9                  __ptext1 0276                  __ptext2 02CF  
                __ptext3 01D9                  __ptext4 0111                  __ptext5 02B4  
                __ptext6 0234                  __ptext7 0296                  __ptext8 017A  
           __size_of_isr 005F         ___awmod@dividend 0075     end_of_initialization 001E  
         _I2C_Slave_Init 02CF              _StartSignal 02B4                _PORTAbits 0005  
              _TRISAbits 0085                _TRISCbits 0087          ??_CheckResponse 0073  
              ReadData@i 0075                ReadData@j 0076   __end_of_I2C_Slave_Init 02E9  
    start_initialization 000F              __end_of_isr 01D9        __size_of_ReadData 0042  
        ?_I2C_Slave_Init 0070              __pbssCOMMON 0077                ___latbits 0002  
          __pcstackBANK0 0020                 ?___awdiv 0073                 ?___awmod 0073  
         __size_of_setup 0020        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C                _valor_ADC 0035             ?_StartSignal 0070  
             _ADCON0bits 001F               _ADCON1bits 009F                 _RH_byte1 0077  
               _RH_byte2 002F                 _ReadData 0234         __size_of___awdiv 0069  
       __size_of___awmod 005B         ??_I2C_Slave_Init 0073    __end_of_CheckResponse 02B4  
          __size_of_main 00EF               _INTCONbits 000B                 intlevel1 0000  
             _OSCCONbits 008F     __size_of_StartSignal 001B              _SSPCON2bits 0091  
             _SSPCONbits 0014  
