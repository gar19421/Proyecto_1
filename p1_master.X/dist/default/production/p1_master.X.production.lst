

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Sep 03 11:54:33 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    43                           	dabs	1,0x7E,2
    44  0000                     
    45                           ; Version 2.20
    46                           ; Generated 12/02/2020 GMT
    47                           ; 
    48                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC16F887 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     	;# 
    80  0001                     	;# 
    81  0002                     	;# 
    82  0003                     	;# 
    83  0004                     	;# 
    84  0005                     	;# 
    85  0006                     	;# 
    86  0007                     	;# 
    87  0008                     	;# 
    88  0009                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000D                     	;# 
    93  000E                     	;# 
    94  000E                     	;# 
    95  000F                     	;# 
    96  0010                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0014                     	;# 
   101  0015                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  001B                     	;# 
   109  001B                     	;# 
   110  001C                     	;# 
   111  001D                     	;# 
   112  001E                     	;# 
   113  001F                     	;# 
   114  0081                     	;# 
   115  0085                     	;# 
   116  0086                     	;# 
   117  0087                     	;# 
   118  0088                     	;# 
   119  0089                     	;# 
   120  008C                     	;# 
   121  008D                     	;# 
   122  008E                     	;# 
   123  008F                     	;# 
   124  0090                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0093                     	;# 
   128  0093                     	;# 
   129  0093                     	;# 
   130  0094                     	;# 
   131  0095                     	;# 
   132  0096                     	;# 
   133  0097                     	;# 
   134  0098                     	;# 
   135  0099                     	;# 
   136  009A                     	;# 
   137  009B                     	;# 
   138  009C                     	;# 
   139  009D                     	;# 
   140  009E                     	;# 
   141  009F                     	;# 
   142  0105                     	;# 
   143  0107                     	;# 
   144  0108                     	;# 
   145  0109                     	;# 
   146  010C                     	;# 
   147  010C                     	;# 
   148  010D                     	;# 
   149  010E                     	;# 
   150  010F                     	;# 
   151  0185                     	;# 
   152  0187                     	;# 
   153  0188                     	;# 
   154  0189                     	;# 
   155  018C                     	;# 
   156  018D                     	;# 
   157  0000                     	;# 
   158  0001                     	;# 
   159  0002                     	;# 
   160  0003                     	;# 
   161  0004                     	;# 
   162  0005                     	;# 
   163  0006                     	;# 
   164  0007                     	;# 
   165  0008                     	;# 
   166  0009                     	;# 
   167  000A                     	;# 
   168  000B                     	;# 
   169  000C                     	;# 
   170  000D                     	;# 
   171  000E                     	;# 
   172  000E                     	;# 
   173  000F                     	;# 
   174  0010                     	;# 
   175  0011                     	;# 
   176  0012                     	;# 
   177  0013                     	;# 
   178  0014                     	;# 
   179  0015                     	;# 
   180  0015                     	;# 
   181  0016                     	;# 
   182  0017                     	;# 
   183  0018                     	;# 
   184  0019                     	;# 
   185  001A                     	;# 
   186  001B                     	;# 
   187  001B                     	;# 
   188  001C                     	;# 
   189  001D                     	;# 
   190  001E                     	;# 
   191  001F                     	;# 
   192  0081                     	;# 
   193  0085                     	;# 
   194  0086                     	;# 
   195  0087                     	;# 
   196  0088                     	;# 
   197  0089                     	;# 
   198  008C                     	;# 
   199  008D                     	;# 
   200  008E                     	;# 
   201  008F                     	;# 
   202  0090                     	;# 
   203  0091                     	;# 
   204  0092                     	;# 
   205  0093                     	;# 
   206  0093                     	;# 
   207  0093                     	;# 
   208  0094                     	;# 
   209  0095                     	;# 
   210  0096                     	;# 
   211  0097                     	;# 
   212  0098                     	;# 
   213  0099                     	;# 
   214  009A                     	;# 
   215  009B                     	;# 
   216  009C                     	;# 
   217  009D                     	;# 
   218  009E                     	;# 
   219  009F                     	;# 
   220  0105                     	;# 
   221  0107                     	;# 
   222  0108                     	;# 
   223  0109                     	;# 
   224  010C                     	;# 
   225  010C                     	;# 
   226  010D                     	;# 
   227  010E                     	;# 
   228  010F                     	;# 
   229  0185                     	;# 
   230  0187                     	;# 
   231  0188                     	;# 
   232  0189                     	;# 
   233  018C                     	;# 
   234  018D                     	;# 
   235  0000                     	;# 
   236  0001                     	;# 
   237  0002                     	;# 
   238  0003                     	;# 
   239  0004                     	;# 
   240  0005                     	;# 
   241  0006                     	;# 
   242  0007                     	;# 
   243  0008                     	;# 
   244  0009                     	;# 
   245  000A                     	;# 
   246  000B                     	;# 
   247  000C                     	;# 
   248  000D                     	;# 
   249  000E                     	;# 
   250  000E                     	;# 
   251  000F                     	;# 
   252  0010                     	;# 
   253  0011                     	;# 
   254  0012                     	;# 
   255  0013                     	;# 
   256  0014                     	;# 
   257  0015                     	;# 
   258  0015                     	;# 
   259  0016                     	;# 
   260  0017                     	;# 
   261  0018                     	;# 
   262  0019                     	;# 
   263  001A                     	;# 
   264  001B                     	;# 
   265  001B                     	;# 
   266  001C                     	;# 
   267  001D                     	;# 
   268  001E                     	;# 
   269  001F                     	;# 
   270  0081                     	;# 
   271  0085                     	;# 
   272  0086                     	;# 
   273  0087                     	;# 
   274  0088                     	;# 
   275  0089                     	;# 
   276  008C                     	;# 
   277  008D                     	;# 
   278  008E                     	;# 
   279  008F                     	;# 
   280  0090                     	;# 
   281  0091                     	;# 
   282  0092                     	;# 
   283  0093                     	;# 
   284  0093                     	;# 
   285  0093                     	;# 
   286  0094                     	;# 
   287  0095                     	;# 
   288  0096                     	;# 
   289  0097                     	;# 
   290  0098                     	;# 
   291  0099                     	;# 
   292  009A                     	;# 
   293  009B                     	;# 
   294  009C                     	;# 
   295  009D                     	;# 
   296  009E                     	;# 
   297  009F                     	;# 
   298  0105                     	;# 
   299  0107                     	;# 
   300  0108                     	;# 
   301  0109                     	;# 
   302  010C                     	;# 
   303  010C                     	;# 
   304  010D                     	;# 
   305  010E                     	;# 
   306  010F                     	;# 
   307  0185                     	;# 
   308  0187                     	;# 
   309  0188                     	;# 
   310  0189                     	;# 
   311  018C                     	;# 
   312  018D                     	;# 
   313  0000                     	;# 
   314  0001                     	;# 
   315  0002                     	;# 
   316  0003                     	;# 
   317  0004                     	;# 
   318  0005                     	;# 
   319  0006                     	;# 
   320  0007                     	;# 
   321  0008                     	;# 
   322  0009                     	;# 
   323  000A                     	;# 
   324  000B                     	;# 
   325  000C                     	;# 
   326  000D                     	;# 
   327  000E                     	;# 
   328  000E                     	;# 
   329  000F                     	;# 
   330  0010                     	;# 
   331  0011                     	;# 
   332  0012                     	;# 
   333  0013                     	;# 
   334  0014                     	;# 
   335  0015                     	;# 
   336  0015                     	;# 
   337  0016                     	;# 
   338  0017                     	;# 
   339  0018                     	;# 
   340  0019                     	;# 
   341  001A                     	;# 
   342  001B                     	;# 
   343  001B                     	;# 
   344  001C                     	;# 
   345  001D                     	;# 
   346  001E                     	;# 
   347  001F                     	;# 
   348  0081                     	;# 
   349  0085                     	;# 
   350  0086                     	;# 
   351  0087                     	;# 
   352  0088                     	;# 
   353  0089                     	;# 
   354  008C                     	;# 
   355  008D                     	;# 
   356  008E                     	;# 
   357  008F                     	;# 
   358  0090                     	;# 
   359  0091                     	;# 
   360  0092                     	;# 
   361  0093                     	;# 
   362  0093                     	;# 
   363  0093                     	;# 
   364  0094                     	;# 
   365  0095                     	;# 
   366  0096                     	;# 
   367  0097                     	;# 
   368  0098                     	;# 
   369  0099                     	;# 
   370  009A                     	;# 
   371  009B                     	;# 
   372  009C                     	;# 
   373  009D                     	;# 
   374  009E                     	;# 
   375  009F                     	;# 
   376  0105                     	;# 
   377  0107                     	;# 
   378  0108                     	;# 
   379  0109                     	;# 
   380  010C                     	;# 
   381  010C                     	;# 
   382  010D                     	;# 
   383  010E                     	;# 
   384  010F                     	;# 
   385  0185                     	;# 
   386  0187                     	;# 
   387  0188                     	;# 
   388  0189                     	;# 
   389  018C                     	;# 
   390  018D                     	;# 
   391  0000                     	;# 
   392  0001                     	;# 
   393  0002                     	;# 
   394  0003                     	;# 
   395  0004                     	;# 
   396  0005                     	;# 
   397  0006                     	;# 
   398  0007                     	;# 
   399  0008                     	;# 
   400  0009                     	;# 
   401  000A                     	;# 
   402  000B                     	;# 
   403  000C                     	;# 
   404  000D                     	;# 
   405  000E                     	;# 
   406  000E                     	;# 
   407  000F                     	;# 
   408  0010                     	;# 
   409  0011                     	;# 
   410  0012                     	;# 
   411  0013                     	;# 
   412  0014                     	;# 
   413  0015                     	;# 
   414  0015                     	;# 
   415  0016                     	;# 
   416  0017                     	;# 
   417  0018                     	;# 
   418  0019                     	;# 
   419  001A                     	;# 
   420  001B                     	;# 
   421  001B                     	;# 
   422  001C                     	;# 
   423  001D                     	;# 
   424  001E                     	;# 
   425  001F                     	;# 
   426  0081                     	;# 
   427  0085                     	;# 
   428  0086                     	;# 
   429  0087                     	;# 
   430  0088                     	;# 
   431  0089                     	;# 
   432  008C                     	;# 
   433  008D                     	;# 
   434  008E                     	;# 
   435  008F                     	;# 
   436  0090                     	;# 
   437  0091                     	;# 
   438  0092                     	;# 
   439  0093                     	;# 
   440  0093                     	;# 
   441  0093                     	;# 
   442  0094                     	;# 
   443  0095                     	;# 
   444  0096                     	;# 
   445  0097                     	;# 
   446  0098                     	;# 
   447  0099                     	;# 
   448  009A                     	;# 
   449  009B                     	;# 
   450  009C                     	;# 
   451  009D                     	;# 
   452  009E                     	;# 
   453  009F                     	;# 
   454  0105                     	;# 
   455  0107                     	;# 
   456  0108                     	;# 
   457  0109                     	;# 
   458  010C                     	;# 
   459  010C                     	;# 
   460  010D                     	;# 
   461  010E                     	;# 
   462  010F                     	;# 
   463  0185                     	;# 
   464  0187                     	;# 
   465  0188                     	;# 
   466  0189                     	;# 
   467  018C                     	;# 
   468  018D                     	;# 
   469                           
   470                           	psect	idataBANK0
   471  07FF                     __pidataBANK0:
   472                           
   473                           ;initializer for _u_flag
   474  07FF  3401               	retlw	1
   475  0005                     _PORTAbits	set	5
   476  0012                     _T2CONbits	set	18
   477  0015                     _CCPR1L	set	21
   478  0017                     _CCP1CONbits	set	23
   479  0001                     _TMR0	set	1
   480  0018                     _RCSTAbits	set	24
   481  0009                     _PORTE	set	9
   482  0007                     _PORTC	set	7
   483  0005                     _PORTA	set	5
   484  0006                     _PORTBbits	set	6
   485  001D                     _CCP2CONbits	set	29
   486  001B                     _CCPR2L	set	27
   487  0019                     _TXREG	set	25
   488  0006                     _PORTB	set	6
   489  001A                     _RCREG	set	26
   490  000C                     _PIR1bits	set	12
   491  000B                     _INTCONbits	set	11
   492  0008                     _PORTD	set	8
   493  0013                     _SSPBUF	set	19
   494  0014                     _SSPCON	set	20
   495  0064                     _TXIF	set	100
   496  0049                     _RE1	set	73
   497  0048                     _RE0	set	72
   498  0063                     _SSPIF	set	99
   499  005E                     _PEIE	set	94
   500  005F                     _GIE	set	95
   501  0092                     _PR2	set	146
   502  0081                     _OPTION_REGbits	set	129
   503  009A                     _SPBRGH	set	154
   504  0099                     _SPBRG	set	153
   505  0098                     _TXSTAbits	set	152
   506  0086                     _TRISB	set	134
   507  0089                     _TRISE	set	137
   508  0088                     _TRISD	set	136
   509  0085                     _TRISA	set	133
   510  008F                     _OSCCONbits	set	143
   511  0091                     _SSPCON2bits	set	145
   512  0087                     _TRISCbits	set	135
   513  0094                     _SSPSTAT	set	148
   514  0093                     _SSPADD	set	147
   515  0091                     _SSPCON2	set	145
   516  0464                     _TXIE	set	1124
   517  0463                     _SSPIE	set	1123
   518  043C                     _TRISC4	set	1084
   519  043B                     _TRISC3	set	1083
   520  0187                     _BAUDCTLbits	set	391
   521  0189                     _ANSELH	set	393
   522  0188                     _ANSEL	set	392
   523                           
   524                           	psect	strings
   525  0800                     __pstrings:
   526  0800                     stringtab:
   527  0800                     __stringtab:
   528  0800                     stringcode:	
   529                           ;	String table - string pointers are 1 byte each
   530                           
   531  0800                     stringdir:
   532  0800  3008               	movlw	high stringdir
   533  0801  008A               	movwf	10
   534  0802  0804               	movf	4,w
   535  0803  0A84               	incf	4,f
   536  0804  0782               	addwf	2,f
   537  0805                     __stringbase:
   538  0805  3400               	retlw	0
   539  0806                     __end_of__stringtab:
   540  0806                     STR_1:
   541  0806  3420               	retlw	32	;' '
   542  0807  3453               	retlw	83	;'S'
   543  0808  3431               	retlw	49	;'1'
   544  0809  343A               	retlw	58	;':'
   545  080A  3420               	retlw	32	;' '
   546  080B  3420               	retlw	32	;' '
   547  080C  3420               	retlw	32	;' '
   548  080D  3453               	retlw	83	;'S'
   549  080E  3432               	retlw	50	;'2'
   550  080F  343A               	retlw	58	;':'
   551  0810  3420               	retlw	32	;' '
   552  0811  3420               	retlw	32	;' '
   553  0812  3420               	retlw	32	;' '
   554  0813  3453               	retlw	83	;'S'
   555  0814  3433               	retlw	51	;'3'
   556  0815  343A               	retlw	58	;':'
   557  0816  3400               	retlw	0
   558  0817                     STR_3:
   559  0817  34DF               	retlw	-33
   560  0818  3443               	retlw	67	;'C'
   561  0819  3420               	retlw	32	;' '
   562  081A  3420               	retlw	32	;' '
   563  081B  3400               	retlw	0
   564  081C                     STR_2:
   565  081C  3476               	retlw	118	;'v'
   566  081D  3420               	retlw	32	;' '
   567  081E  3400               	retlw	0
   568  081B                     
   569                           	psect	cinit
   570  0011                     start_initialization:	
   571                           ; #config settings
   572                           
   573  0011                     __initialization:
   574                           
   575                           ; Initialize objects allocated to BANK0
   576  0011  120A  118A  27FF  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   577  0016  00EF               	movwf	__pdataBANK0& (0+127)
   578                           
   579                           ; Clear objects allocated to BANK1
   580  0017  1683               	bsf	3,5	;RP0=1, select bank1
   581  0018  1303               	bcf	3,6	;RP1=0, select bank1
   582  0019  01A0               	clrf	__pbssBANK1& (0+127)
   583  001A  01A1               	clrf	(__pbssBANK1+1)& (0+127)
   584  001B  01A2               	clrf	(__pbssBANK1+2)& (0+127)
   585  001C  01A3               	clrf	(__pbssBANK1+3)& (0+127)
   586  001D  01A4               	clrf	(__pbssBANK1+4)& (0+127)
   587  001E  01A5               	clrf	(__pbssBANK1+5)& (0+127)
   588                           
   589                           ; Clear objects allocated to BANK0
   590  001F  1383               	bcf	3,7	;select IRP bank0
   591  0020  3056               	movlw	low __pbssBANK0
   592  0021  0084               	movwf	4
   593  0022  306F               	movlw	low (__pbssBANK0+25)
   594  0023  120A  158A  23DE  120A  118A  	fcall	clear_ram0
   595                           
   596                           ; Clear objects allocated to COMMON
   597  0028  01FB               	clrf	__pbssCOMMON& (0+127)
   598  0029  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   599  002A  01FD               	clrf	(__pbssCOMMON+2)& (0+127)
   600  002B                     end_of_initialization:	
   601                           ;End of C runtime variable initialization code
   602                           
   603  002B                     __end_of__initialization:
   604  002B  0183               	clrf	3
   605  002C  120A  118A  2B90   	ljmp	_main	;jump to C main() function
   606                           
   607                           	psect	bssCOMMON
   608  007B                     __pbssCOMMON:
   609  007B                     _val_USART:
   610  007B                     	ds	1
   611  007C                     _guia:
   612  007C                     	ds	1
   613  007D                     _POS1_LDR:
   614  007D                     	ds	1
   615                           
   616                           	psect	bssBANK0
   617  0056                     __pbssBANK0:
   618  0056                     _valor_ADC:
   619  0056                     	ds	2
   620  0058                     _valor_Servo:
   621  0058                     	ds	1
   622  0059                     _decena:
   623  0059                     	ds	1
   624  005A                     _unidad:
   625  005A                     	ds	1
   626  005B                     _c_flag:
   627  005B                     	ds	1
   628  005C                     _d_flag:
   629  005C                     	ds	1
   630  005D                     _bandera_buzzer:
   631  005D                     	ds	1
   632  005E                     _cont:
   633  005E                     	ds	1
   634  005F                     _contador_unidad:
   635  005F                     	ds	1
   636  0060                     _contador:
   637  0060                     	ds	1
   638  0061                     _bandera:
   639  0061                     	ds	1
   640  0062                     _RC_temp:
   641  0062                     	ds	1
   642  0063                     _alarma:
   643  0063                     	ds	1
   644  0064                     _POS3_BZ:
   645  0064                     	ds	1
   646  0065                     _POS2_BZ:
   647  0065                     	ds	1
   648  0066                     _POS1_BZ:
   649  0066                     	ds	1
   650  0067                     _POS3_TMP:
   651  0067                     	ds	1
   652  0068                     _POS2_TMP:
   653  0068                     	ds	1
   654  0069                     _POS1_TMP:
   655  0069                     	ds	1
   656  006A                     _POS3_LDR:
   657  006A                     	ds	1
   658  006B                     _POS2_LDR:
   659  006B                     	ds	1
   660  006C                     _POS3:
   661  006C                     	ds	1
   662  006D                     _POS2:
   663  006D                     	ds	1
   664  006E                     _POS1:
   665  006E                     	ds	1
   666                           
   667                           	psect	dataBANK0
   668  006F                     __pdataBANK0:
   669  006F                     _u_flag:
   670  006F                     	ds	1
   671                           
   672                           	psect	bssBANK1
   673  00A0                     __pbssBANK1:
   674  00A0                     _T_byte1:
   675  00A0                     	ds	2
   676  00A2                     _TEMP:
   677  00A2                     	ds	2
   678  00A4                     _contador_centena:
   679  00A4                     	ds	1
   680  00A5                     _contador_decena:
   681  00A5                     	ds	1
   682                           
   683                           	psect	clrtext
   684  0BDE                     clear_ram0:	
   685                           ;	Called with FSR containing the base address, and
   686                           ;	W with the last address+1
   687                           
   688  0BDE  0064               	clrwdt	;clear the watchdog before getting into this loop
   689  0BDF                     clrloop0:
   690  0BDF  0180               	clrf	0	;clear RAM location pointed to by FSR
   691  0BE0  0A84               	incf	4,f	;increment pointer
   692  0BE1  0604               	xorwf	4,w	;XOR with final address
   693  0BE2  1903               	btfsc	3,2	;have we reached the end yet?
   694  0BE3  3400               	retlw	0	;all done for this memory range, return
   695  0BE4  0604               	xorwf	4,w	;XOR again to restore value
   696  0BE5  2BDF               	goto	clrloop0	;do the next byte
   697                           
   698                           	psect	cstackCOMMON
   699  0070                     __pcstackCOMMON:
   700  0070                     ?_setup:
   701  0070                     ?_moverVentilador:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ?_alarmaBuzzer:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0070                     ?_I2C_Master_Wait:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0070                     ?_I2C_Master_Start:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0070                     ?_I2C_Master_Stop:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ?_Lcd_Port:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0070                     ?_Lcd_Cmd:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0070                     ?_Lcd_Clear:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0070                     ?_Lcd_Init:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0070                     ?_Lcd_Write_Char:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0070                     ?_Lcd_Write_String:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0070                     ?_isr:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0070                     ?_main:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0070                     ?___bmul:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0070                     ___bmul@multiplicand:	
   744                           ; 1 bytes @ 0x0
   745                           
   746                           
   747                           ; 1 bytes @ 0x0
   748  0070                     	ds	1
   749  0071                     ??___bmul:
   750                           
   751                           ; 1 bytes @ 0x1
   752  0071                     	ds	1
   753  0072                     ___bmul@product:
   754                           
   755                           ; 1 bytes @ 0x2
   756  0072                     	ds	1
   757  0073                     ___bmul@multiplier:
   758                           
   759                           ; 1 bytes @ 0x3
   760  0073                     	ds	1
   761  0074                     ??_isr:
   762                           
   763                           ; 1 bytes @ 0x4
   764  0074                     	ds	7
   765                           
   766                           	psect	cstackBANK0
   767  0020                     __pcstackBANK0:
   768  0020                     ??_moverVentilador:
   769  0020                     ??_alarmaBuzzer:	
   770                           ; 1 bytes @ 0x0
   771                           
   772  0020                     ??_I2C_Master_Wait:	
   773                           ; 1 bytes @ 0x0
   774                           
   775  0020                     ??_I2C_Master_Start:	
   776                           ; 1 bytes @ 0x0
   777                           
   778  0020                     ??_I2C_Master_Stop:	
   779                           ; 1 bytes @ 0x0
   780                           
   781  0020                     ?_I2C_Master_Write:	
   782                           ; 1 bytes @ 0x0
   783                           
   784  0020                     ??_Lcd_Port:	
   785                           ; 1 bytes @ 0x0
   786                           
   787  0020                     ?__Umul8_16:	
   788                           ; 1 bytes @ 0x0
   789                           
   790  0020                     ?_I2C_Master_Read:	
   791                           ; 2 bytes @ 0x0
   792                           
   793  0020                     ?___wmul:	
   794                           ; 2 bytes @ 0x0
   795                           
   796  0020                     ?___lwdiv:	
   797                           ; 2 bytes @ 0x0
   798                           
   799  0020                     ?___lldiv:	
   800                           ; 2 bytes @ 0x0
   801                           
   802  0020                     ?___xxtofl:	
   803                           ; 4 bytes @ 0x0
   804                           
   805  0020                     Lcd_Port@a:	
   806                           ; 4 bytes @ 0x0
   807                           
   808  0020                     __Umul8_16@multiplicand:	
   809                           ; 1 bytes @ 0x0
   810                           
   811  0020                     I2C_Master_Write@d:	
   812                           ; 1 bytes @ 0x0
   813                           
   814  0020                     I2C_Master_Read@a:	
   815                           ; 2 bytes @ 0x0
   816                           
   817  0020                     ___wmul@multiplier:	
   818                           ; 2 bytes @ 0x0
   819                           
   820  0020                     ___lwdiv@divisor:	
   821                           ; 2 bytes @ 0x0
   822                           
   823  0020                     ___lldiv@divisor:	
   824                           ; 2 bytes @ 0x0
   825                           
   826  0020                     ___xxtofl@val:	
   827                           ; 4 bytes @ 0x0
   828                           
   829                           
   830                           ; 4 bytes @ 0x0
   831  0020                     	ds	1
   832  0021                     ??_Lcd_Cmd:
   833  0021                     ??_Lcd_Write_Char:	
   834                           ; 1 bytes @ 0x1
   835                           
   836                           
   837                           ; 1 bytes @ 0x1
   838  0021                     	ds	1
   839  0022                     ??__Umul8_16:
   840  0022                     ??_I2C_Master_Write:	
   841                           ; 1 bytes @ 0x2
   842                           
   843  0022                     ??_I2C_Master_Read:	
   844                           ; 1 bytes @ 0x2
   845                           
   846  0022                     Lcd_Write_Char@a:	
   847                           ; 1 bytes @ 0x2
   848                           
   849  0022                     ___wmul@multiplicand:	
   850                           ; 1 bytes @ 0x2
   851                           
   852  0022                     ___lwdiv@dividend:	
   853                           ; 2 bytes @ 0x2
   854                           
   855                           
   856                           ; 2 bytes @ 0x2
   857  0022                     	ds	1
   858  0023                     Lcd_Cmd@a:
   859  0023                     Lcd_Write_Char@temp:	
   860                           ; 1 bytes @ 0x3
   861                           
   862                           
   863                           ; 1 bytes @ 0x3
   864  0023                     	ds	1
   865  0024                     ??_Lcd_Clear:
   866  0024                     ?_Lcd_Set_Cursor:	
   867                           ; 1 bytes @ 0x4
   868                           
   869  0024                     ??_Lcd_Init:	
   870                           ; 1 bytes @ 0x4
   871                           
   872  0024                     ??___wmul:	
   873                           ; 1 bytes @ 0x4
   874                           
   875  0024                     ??___lwdiv:	
   876                           ; 1 bytes @ 0x4
   877                           
   878  0024                     ??___xxtofl:	
   879                           ; 1 bytes @ 0x4
   880                           
   881  0024                     Lcd_Set_Cursor@b:	
   882                           ; 1 bytes @ 0x4
   883                           
   884  0024                     Lcd_Write_Char@y:	
   885                           ; 1 bytes @ 0x4
   886                           
   887  0024                     I2C_Master_Read@temp:	
   888                           ; 1 bytes @ 0x4
   889                           
   890  0024                     ___wmul@product:	
   891                           ; 2 bytes @ 0x4
   892                           
   893  0024                     __Umul8_16@product:	
   894                           ; 2 bytes @ 0x4
   895                           
   896  0024                     ___lldiv@dividend:	
   897                           ; 2 bytes @ 0x4
   898                           
   899                           
   900                           ; 4 bytes @ 0x4
   901  0024                     	ds	1
   902  0025                     ??_Lcd_Set_Cursor:
   903  0025                     ??_Lcd_Write_String:	
   904                           ; 1 bytes @ 0x5
   905                           
   906  0025                     Lcd_Write_String@i:	
   907                           ; 1 bytes @ 0x5
   908                           
   909  0025                     ___lwdiv@quotient:	
   910                           ; 2 bytes @ 0x5
   911                           
   912                           
   913                           ; 2 bytes @ 0x5
   914  0025                     	ds	1
   915  0026                     __Umul8_16@word_mpld:
   916                           
   917                           ; 2 bytes @ 0x6
   918  0026                     	ds	1
   919  0027                     Lcd_Set_Cursor@a:
   920  0027                     Lcd_Write_String@a:	
   921                           ; 1 bytes @ 0x7
   922                           
   923  0027                     ___lwdiv@counter:	
   924                           ; 1 bytes @ 0x7
   925                           
   926                           
   927                           ; 1 bytes @ 0x7
   928  0027                     	ds	1
   929  0028                     ?_VAL:
   930  0028                     ??___lldiv:	
   931                           ; 1 bytes @ 0x8
   932                           
   933  0028                     Lcd_Set_Cursor@z:	
   934                           ; 1 bytes @ 0x8
   935                           
   936  0028                     __Umul8_16@multiplier:	
   937                           ; 1 bytes @ 0x8
   938                           
   939  0028                     ___xxtofl@sign:	
   940                           ; 1 bytes @ 0x8
   941                           
   942  0028                     VAL@variable:	
   943                           ; 1 bytes @ 0x8
   944                           
   945                           
   946                           ; 2 bytes @ 0x8
   947  0028                     	ds	1
   948  0029                     Lcd_Set_Cursor@y:
   949  0029                     ___xxtofl@exp:	
   950                           ; 1 bytes @ 0x9
   951                           
   952  0029                     ___lldiv@quotient:	
   953                           ; 1 bytes @ 0x9
   954                           
   955                           
   956                           ; 4 bytes @ 0x9
   957  0029                     	ds	1
   958  002A                     ??_VAL:
   959  002A                     Lcd_Set_Cursor@temp:	
   960                           ; 1 bytes @ 0xA
   961                           
   962  002A                     ___xxtofl@arg:	
   963                           ; 1 bytes @ 0xA
   964                           
   965                           
   966                           ; 4 bytes @ 0xA
   967  002A                     	ds	2
   968  002C                     VAL@valor:
   969                           
   970                           ; 2 bytes @ 0xC
   971  002C                     	ds	1
   972  002D                     ___lldiv@counter:
   973                           
   974                           ; 1 bytes @ 0xD
   975  002D                     	ds	1
   976  002E                     ?_I2C_Master_Init:
   977  002E                     ?___flmul:	
   978                           ; 1 bytes @ 0xE
   979                           
   980  002E                     I2C_Master_Init@c:	
   981                           ; 4 bytes @ 0xE
   982                           
   983  002E                     ___flmul@b:	
   984                           ; 4 bytes @ 0xE
   985                           
   986                           
   987                           ; 4 bytes @ 0xE
   988  002E                     	ds	4
   989  0032                     ??_I2C_Master_Init:
   990  0032                     ___flmul@a:	
   991                           ; 1 bytes @ 0x12
   992                           
   993                           
   994                           ; 4 bytes @ 0x12
   995  0032                     	ds	4
   996  0036                     ??_setup:
   997  0036                     ??___flmul:	
   998                           ; 1 bytes @ 0x16
   999                           
  1000                           
  1001                           ; 1 bytes @ 0x16
  1002  0036                     	ds	5
  1003  003B                     ___flmul@sign:
  1004                           
  1005                           ; 1 bytes @ 0x1B
  1006  003B                     	ds	1
  1007  003C                     ___flmul@grs:
  1008                           
  1009                           ; 4 bytes @ 0x1C
  1010  003C                     	ds	4
  1011  0040                     ___flmul@aexp:
  1012                           
  1013                           ; 1 bytes @ 0x20
  1014  0040                     	ds	1
  1015  0041                     ___flmul@bexp:
  1016                           
  1017                           ; 1 bytes @ 0x21
  1018  0041                     	ds	1
  1019  0042                     ___flmul@prod:
  1020                           
  1021                           ; 4 bytes @ 0x22
  1022  0042                     	ds	4
  1023  0046                     ___flmul@temp:
  1024                           
  1025                           ; 2 bytes @ 0x26
  1026  0046                     	ds	2
  1027  0048                     ?___fltol:
  1028  0048                     ___fltol@f1:	
  1029                           ; 4 bytes @ 0x28
  1030                           
  1031                           
  1032                           ; 4 bytes @ 0x28
  1033  0048                     	ds	4
  1034  004C                     ??___fltol:
  1035                           
  1036                           ; 1 bytes @ 0x2C
  1037  004C                     	ds	5
  1038  0051                     ___fltol@sign1:
  1039                           
  1040                           ; 1 bytes @ 0x31
  1041  0051                     	ds	1
  1042  0052                     ___fltol@exp1:
  1043                           
  1044                           ; 1 bytes @ 0x32
  1045  0052                     	ds	1
  1046  0053                     ??_main:
  1047                           
  1048                           ; 1 bytes @ 0x33
  1049  0053                     	ds	3
  1050                           
  1051                           	psect	maintext
  1052  0390                     __pmaintext:	
  1053 ;;
  1054 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1055 ;;
  1056 ;; *************** function _main *****************
  1057 ;; Defined at:
  1058 ;;		line 216 in file "master_main.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;		None
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;		None
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  1    wreg      void 
  1065 ;; Registers used:
  1066 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1067 ;; Tracked objects:
  1068 ;;		On entry : B00/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1072 ;;      Params:         0       0       0       0       0
  1073 ;;      Locals:         0       0       0       0       0
  1074 ;;      Temps:          0       3       0       0       0
  1075 ;;      Totals:         0       3       0       0       0
  1076 ;;Total ram usage:        3 bytes
  1077 ;; Hardware stack levels required when called:    5
  1078 ;; This function calls:
  1079 ;;		_I2C_Master_Read
  1080 ;;		_I2C_Master_Start
  1081 ;;		_I2C_Master_Stop
  1082 ;;		_I2C_Master_Write
  1083 ;;		_Lcd_Clear
  1084 ;;		_Lcd_Init
  1085 ;;		_Lcd_Set_Cursor
  1086 ;;		_Lcd_Write_Char
  1087 ;;		_Lcd_Write_String
  1088 ;;		_VAL
  1089 ;;		___flmul
  1090 ;;		___fltol
  1091 ;;		___xxtofl
  1092 ;;		_alarmaBuzzer
  1093 ;;		_moverVentilador
  1094 ;;		_setup
  1095 ;; This function is called by:
  1096 ;;		Startup code after reset
  1097 ;; This function uses a non-reentrant model
  1098 ;;
  1099                           
  1100                           
  1101                           ;psect for function _main
  1102  0390                     _main:
  1103  0390                     l2450:	
  1104                           ;incstack = 0
  1105                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1106                           
  1107                           
  1108                           ;master_main.c: 217:         if(bandera==0x00){
  1109  0390  120A  158A  26A8  120A  118A  	fcall	_setup
  1110                           
  1111                           ;master_main.c: 218: 
  1112  0395  120A  158A  259A  120A  118A  	fcall	_Lcd_Init
  1113                           
  1114                           ;master_main.c: 219:             if(valor_ADC>0x190){
  1115  039A  120A  158A  240F  120A  118A  	fcall	_Lcd_Clear
  1116                           
  1117                           ;master_main.c: 220:                 valor_Servo = 0x00;
  1118  039F  1283               	bcf	3,5	;RP0=0, select bank0
  1119  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  1120  03A1  01A4               	clrf	Lcd_Set_Cursor@b
  1121  03A2  0AA4               	incf	Lcd_Set_Cursor@b,f
  1122  03A3  3001               	movlw	1
  1123  03A4  120A  158A  25E8  120A  118A  	fcall	_Lcd_Set_Cursor
  1124  03A9                     l2452:
  1125                           
  1126                           ;master_main.c: 221:                 CCPR2L = (valor_Servo>>1) + 128;
  1127  03A9  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1128  03AA  120A  158A  24C8  120A  118A  	fcall	_Lcd_Write_String
  1129  03AF                     l2454:
  1130                           
  1131                           ;master_main.c: 224:             }else if(valor_ADC<=0x190){
  1132  03AF  120A  158A  23E6  120A  118A  	fcall	_I2C_Master_Start
  1133  03B4                     l2456:
  1134                           
  1135                           ;master_main.c: 225:                 valor_Servo = 0xFF;
  1136  03B4  3071               	movlw	113
  1137  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  1138  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  1139  03B7  00A0               	movwf	I2C_Master_Write@d
  1140  03B8  3000               	movlw	0
  1141  03B9  00A1               	movwf	I2C_Master_Write@d+1
  1142  03BA  120A  158A  23F8  120A  118A  	fcall	_I2C_Master_Write
  1143  03BF                     l2458:
  1144                           
  1145                           ;master_main.c: 226:                 CCPR2L = (valor_Servo>>1) + 128;
  1146  03BF  3000               	movlw	0
  1147  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  1148  03C1  1303               	bcf	3,6	;RP1=0, select bank0
  1149  03C2  00A0               	movwf	I2C_Master_Read@a
  1150  03C3  00A1               	movwf	I2C_Master_Read@a+1
  1151  03C4  120A  118A  27CD  120A  118A  	fcall	_I2C_Master_Read
  1152  03C9  1283               	bcf	3,5	;RP0=0, select bank0
  1153  03CA  1303               	bcf	3,6	;RP1=0, select bank0
  1154  03CB  0821               	movf	?_I2C_Master_Read+1,w
  1155  03CC  00D7               	movwf	_valor_ADC+1
  1156  03CD  0820               	movf	?_I2C_Master_Read,w
  1157  03CE  00D6               	movwf	_valor_ADC
  1158  03CF                     l2460:
  1159                           
  1160                           ;master_main.c: 227:                 CCP2CONbits.DC2B1 = 0;
  1161  03CF  120A  158A  23EF  120A  118A  	fcall	_I2C_Master_Stop
  1162  03D4                     l2462:
  1163                           
  1164                           ;master_main.c: 228:                 CCP2CONbits.DC2B0 = 0;
  1165  03D4  3004               	movlw	4
  1166  03D5  1283               	bcf	3,5	;RP0=0, select bank0
  1167  03D6  1303               	bcf	3,6	;RP1=0, select bank0
  1168  03D7  00D5               	movwf	??_main+2
  1169  03D8  3026               	movlw	38
  1170  03D9  00D4               	movwf	??_main+1
  1171  03DA  302C               	movlw	44
  1172  03DB  00D3               	movwf	??_main
  1173  03DC                     u2457:
  1174  03DC  0BD3               	decfsz	??_main,f
  1175  03DD  2BDC               	goto	u2457
  1176  03DE  0BD4               	decfsz	??_main+1,f
  1177  03DF  2BDC               	goto	u2457
  1178  03E0  0BD5               	decfsz	??_main+2,f
  1179  03E1  2BDC               	goto	u2457
  1180  03E2  0000               	nop
  1181  03E3                     l2464:
  1182                           
  1183                           ;master_main.c: 231:         }else{
  1184  03E3  120A  158A  23E6  120A  118A  	fcall	_I2C_Master_Start
  1185  03E8                     l2466:
  1186                           
  1187                           ;master_main.c: 232:             if(bandera==0x01){
  1188  03E8  3081               	movlw	129
  1189  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  1190  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  1191  03EB  00A0               	movwf	I2C_Master_Write@d
  1192  03EC  3000               	movlw	0
  1193  03ED  00A1               	movwf	I2C_Master_Write@d+1
  1194  03EE  120A  158A  23F8  120A  118A  	fcall	_I2C_Master_Write
  1195  03F3                     l2468:
  1196                           
  1197                           ;master_main.c: 233:                 valor_Servo = 0x00;
  1198  03F3  3000               	movlw	0
  1199  03F4  1283               	bcf	3,5	;RP0=0, select bank0
  1200  03F5  1303               	bcf	3,6	;RP1=0, select bank0
  1201  03F6  00A0               	movwf	I2C_Master_Read@a
  1202  03F7  00A1               	movwf	I2C_Master_Read@a+1
  1203  03F8  120A  118A  27CD  120A  118A  	fcall	_I2C_Master_Read
  1204  03FD  1283               	bcf	3,5	;RP0=0, select bank0
  1205  03FE  1303               	bcf	3,6	;RP1=0, select bank0
  1206  03FF  0821               	movf	?_I2C_Master_Read+1,w
  1207  0400  1683               	bsf	3,5	;RP0=1, select bank1
  1208  0401  1303               	bcf	3,6	;RP1=0, select bank1
  1209  0402  00A1               	movwf	(_T_byte1+1)^(0+128)
  1210  0403  1283               	bcf	3,5	;RP0=0, select bank0
  1211  0404  1303               	bcf	3,6	;RP1=0, select bank0
  1212  0405  0820               	movf	?_I2C_Master_Read,w
  1213  0406  1683               	bsf	3,5	;RP0=1, select bank1
  1214  0407  1303               	bcf	3,6	;RP1=0, select bank1
  1215  0408  00A0               	movwf	_T_byte1^(0+128)
  1216  0409                     l2470:
  1217                           
  1218                           ;master_main.c: 234:                 CCPR2L = (valor_Servo>>1) + 128;
  1219  0409  120A  158A  23EF  120A  118A  	fcall	_I2C_Master_Stop
  1220  040E                     l2472:
  1221                           
  1222                           ;master_main.c: 235:                 CCP2CONbits.DC2B1 = 0;
  1223  040E  3004               	movlw	4
  1224  040F  1283               	bcf	3,5	;RP0=0, select bank0
  1225  0410  1303               	bcf	3,6	;RP1=0, select bank0
  1226  0411  00D5               	movwf	??_main+2
  1227  0412  3026               	movlw	38
  1228  0413  00D4               	movwf	??_main+1
  1229  0414  302C               	movlw	44
  1230  0415  00D3               	movwf	??_main
  1231  0416                     u2467:
  1232  0416  0BD3               	decfsz	??_main,f
  1233  0417  2C16               	goto	u2467
  1234  0418  0BD4               	decfsz	??_main+1,f
  1235  0419  2C16               	goto	u2467
  1236  041A  0BD5               	decfsz	??_main+2,f
  1237  041B  2C16               	goto	u2467
  1238  041C  0000               	nop
  1239  041D                     l2474:
  1240                           
  1241                           ;master_main.c: 237:             }else if(bandera==0x02){
  1242  041D  120A  158A  241C  120A  118A  	fcall	_moverVentilador
  1243  0422                     l2476:
  1244                           
  1245                           ;master_main.c: 239:                 CCPR2L = (valor_Servo>>1) + 128;
  1246  0422  120A  158A  23E6  120A  118A  	fcall	_I2C_Master_Start
  1247  0427                     l2478:
  1248                           
  1249                           ;master_main.c: 240:                 CCP2CONbits.DC2B1 = 0;
  1250  0427  3071               	movlw	113
  1251  0428  1283               	bcf	3,5	;RP0=0, select bank0
  1252  0429  1303               	bcf	3,6	;RP1=0, select bank0
  1253  042A  00A0               	movwf	I2C_Master_Write@d
  1254  042B  3000               	movlw	0
  1255  042C  00A1               	movwf	I2C_Master_Write@d+1
  1256  042D  120A  158A  23F8  120A  118A  	fcall	_I2C_Master_Write
  1257  0432                     l2480:
  1258                           
  1259                           ;master_main.c: 241:                 CCP2CONbits.DC2B0 = 0;
  1260  0432  3000               	movlw	0
  1261  0433  1283               	bcf	3,5	;RP0=0, select bank0
  1262  0434  1303               	bcf	3,6	;RP1=0, select bank0
  1263  0435  00A0               	movwf	I2C_Master_Read@a
  1264  0436  00A1               	movwf	I2C_Master_Read@a+1
  1265  0437  120A  118A  27CD  120A  118A  	fcall	_I2C_Master_Read
  1266  043C  1283               	bcf	3,5	;RP0=0, select bank0
  1267  043D  1303               	bcf	3,6	;RP1=0, select bank0
  1268  043E  0820               	movf	?_I2C_Master_Read,w
  1269  043F  00D3               	movwf	??_main
  1270  0440  0853               	movf	??_main,w
  1271  0441  00E3               	movwf	_alarma
  1272  0442                     l2482:
  1273                           
  1274                           ;master_main.c: 242:             }
  1275  0442  120A  158A  23EF  120A  118A  	fcall	_I2C_Master_Stop
  1276  0447                     l2484:
  1277                           
  1278                           ;master_main.c: 243: 
  1279  0447  3004               	movlw	4
  1280  0448  1283               	bcf	3,5	;RP0=0, select bank0
  1281  0449  1303               	bcf	3,6	;RP1=0, select bank0
  1282  044A  00D5               	movwf	??_main+2
  1283  044B  3026               	movlw	38
  1284  044C  00D4               	movwf	??_main+1
  1285  044D  302C               	movlw	44
  1286  044E  00D3               	movwf	??_main
  1287  044F                     u2477:
  1288  044F  0BD3               	decfsz	??_main,f
  1289  0450  2C4F               	goto	u2477
  1290  0451  0BD4               	decfsz	??_main+1,f
  1291  0452  2C4F               	goto	u2477
  1292  0453  0BD5               	decfsz	??_main+2,f
  1293  0454  2C4F               	goto	u2477
  1294  0455  0000               	nop
  1295  0456                     l2486:
  1296                           
  1297                           ;master_main.c: 245: 
  1298  0456  1283               	bcf	3,5	;RP0=0, select bank0
  1299  0457  1303               	bcf	3,6	;RP1=0, select bank0
  1300  0458  0A63               	incf	_alarma,w
  1301  0459  1D03               	btfss	3,2
  1302  045A  2C5C               	goto	u2371
  1303  045B  2C5D               	goto	u2370
  1304  045C                     u2371:
  1305  045C  2C67               	goto	l2492
  1306  045D                     u2370:
  1307  045D                     l2488:
  1308                           
  1309                           ;master_main.c: 246: 
  1310  045D  120A  158A  2480  120A  118A  	fcall	_alarmaBuzzer
  1311  0462                     l2490:
  1312                           
  1313                           ;master_main.c: 247: 
  1314  0462  1283               	bcf	3,5	;RP0=0, select bank0
  1315  0463  1303               	bcf	3,6	;RP1=0, select bank0
  1316  0464  01DD               	clrf	_bandera_buzzer
  1317  0465  0ADD               	incf	_bandera_buzzer,f
  1318                           
  1319                           ;master_main.c: 248:         Lcd_Set_Cursor(2,1);
  1320  0466  2C74               	goto	l2500
  1321  0467                     l2492:
  1322                           
  1323                           ;master_main.c: 249:         Lcd_Write_Char(POS1_LDR);
  1324  0467  01DD               	clrf	_bandera_buzzer
  1325  0468                     l2494:
  1326                           
  1327                           ;master_main.c: 250:         Lcd_Write_Char(46);
  1328  0468  302D               	movlw	45
  1329  0469  00D3               	movwf	??_main
  1330  046A  0853               	movf	??_main,w
  1331  046B  00E6               	movwf	_POS1_BZ
  1332  046C                     l2496:
  1333                           
  1334                           ;master_main.c: 251:         Lcd_Write_Char(POS2_LDR);
  1335  046C  302D               	movlw	45
  1336  046D  00D3               	movwf	??_main
  1337  046E  0853               	movf	??_main,w
  1338  046F  00E5               	movwf	_POS2_BZ
  1339  0470                     l2498:
  1340                           
  1341                           ;master_main.c: 252:         Lcd_Write_Char(POS3_LDR);
  1342  0470  302D               	movlw	45
  1343  0471  00D3               	movwf	??_main
  1344  0472  0853               	movf	??_main,w
  1345  0473  00E4               	movwf	_POS3_BZ
  1346  0474                     l2500:
  1347                           
  1348                           ;master_main.c: 255:         VAL(T_byte1);
  1349  0474  0856               	movf	_valor_ADC,w
  1350  0475  00A0               	movwf	___xxtofl@val
  1351  0476  0857               	movf	_valor_ADC+1,w
  1352  0477  00A1               	movwf	___xxtofl@val+1
  1353  0478  01A2               	clrf	___xxtofl@val+2
  1354  0479  01A3               	clrf	___xxtofl@val+3
  1355  047A  3000               	movlw	0
  1356  047B  120A  118A  2711  120A  118A  	fcall	___xxtofl
  1357  0480  1283               	bcf	3,5	;RP0=0, select bank0
  1358  0481  1303               	bcf	3,6	;RP1=0, select bank0
  1359  0482  0823               	movf	?___xxtofl+3,w
  1360  0483  00B5               	movwf	___flmul@a+3
  1361  0484  0822               	movf	?___xxtofl+2,w
  1362  0485  00B4               	movwf	___flmul@a+2
  1363  0486  0821               	movf	?___xxtofl+1,w
  1364  0487  00B3               	movwf	___flmul@a+1
  1365  0488  0820               	movf	?___xxtofl,w
  1366  0489  00B2               	movwf	___flmul@a
  1367  048A  303F               	movlw	63
  1368  048B  00B1               	movwf	___flmul@b+3
  1369  048C  30FB               	movlw	251
  1370  048D  00B0               	movwf	___flmul@b+2
  1371  048E  3002               	movlw	2
  1372  048F  00AF               	movwf	___flmul@b+1
  1373  0490  300C               	movlw	12
  1374  0491  00AE               	movwf	___flmul@b
  1375  0492  120A  118A  202F  120A  118A  	fcall	___flmul
  1376  0497  1283               	bcf	3,5	;RP0=0, select bank0
  1377  0498  1303               	bcf	3,6	;RP1=0, select bank0
  1378  0499  0831               	movf	?___flmul+3,w
  1379  049A  00CB               	movwf	___fltol@f1+3
  1380  049B  0830               	movf	?___flmul+2,w
  1381  049C  00CA               	movwf	___fltol@f1+2
  1382  049D  082F               	movf	?___flmul+1,w
  1383  049E  00C9               	movwf	___fltol@f1+1
  1384  049F  082E               	movf	?___flmul,w
  1385  04A0  00C8               	movwf	___fltol@f1
  1386  04A1  120A  158A  2784  120A  118A  	fcall	___fltol
  1387  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  1388  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  1389  04A8  0849               	movf	?___fltol+1,w
  1390  04A9  00D7               	movwf	_valor_ADC+1
  1391  04AA  0848               	movf	?___fltol,w
  1392  04AB  00D6               	movwf	_valor_ADC
  1393  04AC                     l2502:
  1394                           
  1395                           ;master_main.c: 258:         POS3_TMP = POS3;
  1396  04AC  0857               	movf	_valor_ADC+1,w
  1397  04AD  00A9               	movwf	VAL@variable+1
  1398  04AE  0856               	movf	_valor_ADC,w
  1399  04AF  00A8               	movwf	VAL@variable
  1400  04B0  120A  158A  2710  120A  118A  	fcall	_VAL
  1401  04B5                     l2504:
  1402                           
  1403                           ;master_main.c: 259:         Lcd_Write_Char(POS1_TMP);
  1404  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  1405  04B6  1303               	bcf	3,6	;RP1=0, select bank0
  1406  04B7  086E               	movf	_POS1,w
  1407  04B8  00D3               	movwf	??_main
  1408  04B9  0853               	movf	??_main,w
  1409  04BA  00FD               	movwf	_POS1_LDR
  1410  04BB                     l2506:
  1411                           
  1412                           ;master_main.c: 260:         Lcd_Write_Char(POS2_TMP);
  1413  04BB  086D               	movf	_POS2,w
  1414  04BC  00D3               	movwf	??_main
  1415  04BD  0853               	movf	??_main,w
  1416  04BE  00EB               	movwf	_POS2_LDR
  1417  04BF                     l2508:
  1418                           
  1419                           ;master_main.c: 261:         Lcd_Write_Char(POS3_TMP);
  1420  04BF  086C               	movf	_POS3,w
  1421  04C0  00D3               	movwf	??_main
  1422  04C1  0853               	movf	??_main,w
  1423  04C2  00EA               	movwf	_POS3_LDR
  1424  04C3                     l2510:
  1425                           
  1426                           ;master_main.c: 263: 
  1427  04C3  0861               	movf	_bandera,w
  1428  04C4  1D03               	btfss	3,2
  1429  04C5  2CC7               	goto	u2381
  1430  04C6  2CC8               	goto	u2380
  1431  04C7                     u2381:
  1432  04C7  2CE9               	goto	l2532
  1433  04C8                     u2380:
  1434  04C8                     l2512:
  1435                           
  1436                           ;master_main.c: 265:         Lcd_Write_Char(POS1_BZ);
  1437  04C8  3001               	movlw	1
  1438  04C9  0257               	subwf	_valor_ADC+1,w
  1439  04CA  3091               	movlw	145
  1440  04CB  1903               	skipnz
  1441  04CC  0256               	subwf	_valor_ADC,w
  1442  04CD  1C03               	skipc
  1443  04CE  2CD0               	goto	u2391
  1444  04CF  2CD1               	goto	u2390
  1445  04D0                     u2391:
  1446  04D0  2CD7               	goto	l2522
  1447  04D1                     u2390:
  1448  04D1                     l2514:
  1449                           
  1450                           ;master_main.c: 266:         Lcd_Write_Char(POS2_BZ);
  1451  04D1  01D8               	clrf	_valor_Servo
  1452  04D2                     l2516:
  1453                           
  1454                           ;master_main.c: 267:         Lcd_Write_Char(POS3_BZ);
  1455  04D2  3080               	movlw	128
  1456  04D3  009B               	movwf	27	;volatile
  1457  04D4                     l2518:
  1458                           
  1459                           ;master_main.c: 268:         Lcd_Write_String("");
  1460  04D4  129D               	bcf	29,5	;volatile
  1461  04D5                     l2520:
  1462                           
  1463                           ;master_main.c: 269: 
  1464  04D5  121D               	bcf	29,4	;volatile
  1465                           
  1466                           ;master_main.c: 270: 
  1467  04D6  2D02               	goto	l2552
  1468  04D7                     l2522:
  1469  04D7  3001               	movlw	1
  1470  04D8  0257               	subwf	_valor_ADC+1,w
  1471  04D9  3091               	movlw	145
  1472  04DA  1903               	skipnz
  1473  04DB  0256               	subwf	_valor_ADC,w
  1474  04DC  1803               	skipnc
  1475  04DD  2CDF               	goto	u2401
  1476  04DE  2CE0               	goto	u2400
  1477  04DF                     u2401:
  1478  04DF  2D02               	goto	l2552
  1479  04E0                     u2400:
  1480  04E0                     l2524:
  1481                           
  1482                           ;master_main.c: 271:         if(cont > 15){
  1483  04E0  30FF               	movlw	255
  1484  04E1  00D3               	movwf	??_main
  1485  04E2  0853               	movf	??_main,w
  1486  04E3  00D8               	movwf	_valor_Servo
  1487  04E4                     l2526:
  1488                           
  1489                           ;master_main.c: 272:          cont = 0;
  1490  04E4  30FF               	movlw	255
  1491  04E5  009B               	movwf	27	;volatile
  1492  04E6                     l2528:
  1493                           
  1494                           ;master_main.c: 273:          TXIE = 1;
  1495  04E6  129D               	bcf	29,5	;volatile
  1496  04E7                     l2530:
  1497                           
  1498                           ;master_main.c: 274:         }
  1499  04E7  121D               	bcf	29,4	;volatile
  1500  04E8  2D02               	goto	l2552
  1501  04E9                     l2532:
  1502                           
  1503                           ;master_main.c: 278:             val_USART = 0;
  1504  04E9  0361               	decf	_bandera,w
  1505  04EA  1D03               	btfss	3,2
  1506  04EB  2CED               	goto	u2411
  1507  04EC  2CEE               	goto	u2410
  1508  04ED                     u2411:
  1509  04ED  2CF4               	goto	l2542
  1510  04EE                     u2410:
  1511  04EE                     l2534:
  1512                           
  1513                           ;master_main.c: 279:             contador = 0;
  1514  04EE  01D8               	clrf	_valor_Servo
  1515  04EF                     l2536:
  1516                           
  1517                           ;master_main.c: 280:             PORTB = 0;
  1518  04EF  3080               	movlw	128
  1519  04F0  009B               	movwf	27	;volatile
  1520  04F1                     l2538:
  1521                           
  1522                           ;master_main.c: 281:             u_flag = 1;
  1523  04F1  129D               	bcf	29,5	;volatile
  1524  04F2                     l2540:
  1525                           
  1526                           ;master_main.c: 282:             d_flag = 0;
  1527  04F2  121D               	bcf	29,4	;volatile
  1528                           
  1529                           ;master_main.c: 283:             c_flag = 0;
  1530  04F3  2D02               	goto	l2552
  1531  04F4                     l2542:
  1532  04F4  3002               	movlw	2
  1533  04F5  0661               	xorwf	_bandera,w
  1534  04F6  1D03               	btfss	3,2
  1535  04F7  2CF9               	goto	u2421
  1536  04F8  2CFA               	goto	u2420
  1537  04F9                     u2421:
  1538  04F9  2D02               	goto	l2552
  1539  04FA                     u2420:
  1540  04FA                     l2544:
  1541                           
  1542                           ;master_main.c: 284:         }
  1543  04FA  30FF               	movlw	255
  1544  04FB  00D3               	movwf	??_main
  1545  04FC  0853               	movf	??_main,w
  1546  04FD  00D8               	movwf	_valor_Servo
  1547  04FE                     l2546:
  1548                           
  1549                           ;master_main.c: 285: 
  1550  04FE  30FF               	movlw	255
  1551  04FF  009B               	movwf	27	;volatile
  1552  0500                     l2548:
  1553                           
  1554                           ;master_main.c: 286:     }
  1555  0500  129D               	bcf	29,5	;volatile
  1556  0501                     l2550:
  1557                           
  1558                           ;master_main.c: 287: }
  1559  0501  121D               	bcf	29,4	;volatile
  1560  0502                     l2552:
  1561                           
  1562                           ;master_main.c: 294:     OSCCONbits.IRCF0 = 1;
  1563  0502  01A4               	clrf	Lcd_Set_Cursor@b
  1564  0503  0AA4               	incf	Lcd_Set_Cursor@b,f
  1565  0504  3002               	movlw	2
  1566  0505  120A  158A  25E8  120A  118A  	fcall	_Lcd_Set_Cursor
  1567  050A                     l2554:
  1568                           
  1569                           ;master_main.c: 295:     OSCCONbits.SCS = 1;
  1570  050A  087D               	movf	_POS1_LDR,w
  1571  050B  120A  158A  2460  120A  118A  	fcall	_Lcd_Write_Char
  1572  0510                     l2556:
  1573                           
  1574                           ;master_main.c: 296: 
  1575  0510  302E               	movlw	46
  1576  0511  120A  158A  2460  120A  118A  	fcall	_Lcd_Write_Char
  1577  0516                     l2558:
  1578                           
  1579                           ;master_main.c: 297: 
  1580  0516  1283               	bcf	3,5	;RP0=0, select bank0
  1581  0517  1303               	bcf	3,6	;RP1=0, select bank0
  1582  0518  086B               	movf	_POS2_LDR,w
  1583  0519  120A  158A  2460  120A  118A  	fcall	_Lcd_Write_Char
  1584  051E                     l2560:
  1585                           
  1586                           ;master_main.c: 298:     ANSEL = 0B0000000;
  1587  051E  1283               	bcf	3,5	;RP0=0, select bank0
  1588  051F  1303               	bcf	3,6	;RP1=0, select bank0
  1589  0520  086A               	movf	_POS3_LDR,w
  1590  0521  120A  158A  2460  120A  118A  	fcall	_Lcd_Write_Char
  1591  0526                     l2562:
  1592                           
  1593                           ;master_main.c: 299:     ANSELH = 0X00;
  1594  0526  3017               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1595  0527  120A  158A  24C8  120A  118A  	fcall	_Lcd_Write_String
  1596  052C                     l2564:
  1597                           
  1598                           ;master_main.c: 301:     TRISA = 0B0000000;
  1599  052C  1683               	bsf	3,5	;RP0=1, select bank1
  1600  052D  1303               	bcf	3,6	;RP1=0, select bank1
  1601  052E  0821               	movf	(_T_byte1+1)^(0+128),w
  1602  052F  1283               	bcf	3,5	;RP0=0, select bank0
  1603  0530  1303               	bcf	3,6	;RP1=0, select bank0
  1604  0531  00A9               	movwf	VAL@variable+1
  1605  0532  1683               	bsf	3,5	;RP0=1, select bank1
  1606  0533  1303               	bcf	3,6	;RP1=0, select bank1
  1607  0534  0820               	movf	_T_byte1^(0+128),w
  1608  0535  1283               	bcf	3,5	;RP0=0, select bank0
  1609  0536  1303               	bcf	3,6	;RP1=0, select bank0
  1610  0537  00A8               	movwf	VAL@variable
  1611  0538  120A  158A  2710  120A  118A  	fcall	_VAL
  1612  053D                     l2566:
  1613                           
  1614                           ;master_main.c: 302:     TRISD = 0X00;
  1615  053D  1283               	bcf	3,5	;RP0=0, select bank0
  1616  053E  1303               	bcf	3,6	;RP1=0, select bank0
  1617  053F  086E               	movf	_POS1,w
  1618  0540  00D3               	movwf	??_main
  1619  0541  0853               	movf	??_main,w
  1620  0542  00E9               	movwf	_POS1_TMP
  1621  0543                     l2568:
  1622                           
  1623                           ;master_main.c: 303:     TRISE = 0X00;
  1624  0543  086D               	movf	_POS2,w
  1625  0544  00D3               	movwf	??_main
  1626  0545  0853               	movf	??_main,w
  1627  0546  00E8               	movwf	_POS2_TMP
  1628  0547                     l2570:
  1629                           
  1630                           ;master_main.c: 304:     TRISB = 0X00;
  1631  0547  086C               	movf	_POS3,w
  1632  0548  00D3               	movwf	??_main
  1633  0549  0853               	movf	??_main,w
  1634  054A  00E7               	movwf	_POS3_TMP
  1635  054B                     l2572:
  1636                           
  1637                           ;master_main.c: 305:     TRISCbits.TRISC1= 0X00;
  1638  054B  0869               	movf	_POS1_TMP,w
  1639  054C  120A  158A  2460  120A  118A  	fcall	_Lcd_Write_Char
  1640  0551                     l2574:
  1641                           
  1642                           ;master_main.c: 306: 
  1643  0551  1283               	bcf	3,5	;RP0=0, select bank0
  1644  0552  1303               	bcf	3,6	;RP1=0, select bank0
  1645  0553  0868               	movf	_POS2_TMP,w
  1646  0554  120A  158A  2460  120A  118A  	fcall	_Lcd_Write_Char
  1647  0559                     l2576:
  1648                           
  1649                           ;master_main.c: 307:     PORTA = 0X00;
  1650  0559  1283               	bcf	3,5	;RP0=0, select bank0
  1651  055A  1303               	bcf	3,6	;RP1=0, select bank0
  1652  055B  0867               	movf	_POS3_TMP,w
  1653  055C  120A  158A  2460  120A  118A  	fcall	_Lcd_Write_Char
  1654  0561                     l2578:
  1655                           
  1656                           ;master_main.c: 308:     PORTB = 0X00;
  1657  0561  3012               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1658  0562  120A  158A  24C8  120A  118A  	fcall	_Lcd_Write_String
  1659  0567                     l2580:
  1660                           
  1661                           ;master_main.c: 310:     PORTC = 0X00;
  1662  0567  3000               	movlw	0
  1663  0568  1283               	bcf	3,5	;RP0=0, select bank0
  1664  0569  1303               	bcf	3,6	;RP1=0, select bank0
  1665  056A  00A8               	movwf	VAL@variable
  1666  056B  00A9               	movwf	VAL@variable+1
  1667  056C  120A  158A  2710  120A  118A  	fcall	_VAL
  1668  0571                     l2582:
  1669                           
  1670                           ;master_main.c: 311:     PORTD = 0X00;
  1671  0571  1283               	bcf	3,5	;RP0=0, select bank0
  1672  0572  1303               	bcf	3,6	;RP1=0, select bank0
  1673  0573  0866               	movf	_POS1_BZ,w
  1674  0574  120A  158A  2460  120A  118A  	fcall	_Lcd_Write_Char
  1675  0579                     l2584:
  1676                           
  1677                           ;master_main.c: 312:     PORTE = 0X00;
  1678  0579  1283               	bcf	3,5	;RP0=0, select bank0
  1679  057A  1303               	bcf	3,6	;RP1=0, select bank0
  1680  057B  0865               	movf	_POS2_BZ,w
  1681  057C  120A  158A  2460  120A  118A  	fcall	_Lcd_Write_Char
  1682  0581                     l2586:
  1683                           
  1684                           ;master_main.c: 313: 
  1685  0581  1283               	bcf	3,5	;RP0=0, select bank0
  1686  0582  1303               	bcf	3,6	;RP1=0, select bank0
  1687  0583  0864               	movf	_POS3_BZ,w
  1688  0584  120A  158A  2460  120A  118A  	fcall	_Lcd_Write_Char
  1689  0589                     l2588:
  1690                           
  1691                           ;master_main.c: 314: 
  1692  0589  3016               	movlw	(low (((STR_3+4)-__stringbase)| (0+32768)))& (0+255)
  1693  058A  120A  158A  24C8  120A  118A  	fcall	_Lcd_Write_String
  1694  058F                     l2590:
  1695                           
  1696                           ;master_main.c: 317: 
  1697  058F  3010               	movlw	16
  1698  0590  1283               	bcf	3,5	;RP0=0, select bank0
  1699  0591  1303               	bcf	3,6	;RP1=0, select bank0
  1700  0592  025E               	subwf	_cont,w
  1701  0593  1C03               	skipc
  1702  0594  2D96               	goto	u2431
  1703  0595  2D97               	goto	u2430
  1704  0596                     u2431:
  1705  0596  2D9B               	goto	l2596
  1706  0597                     u2430:
  1707  0597                     l2592:
  1708                           
  1709                           ;master_main.c: 318:     INTCONbits.T0IE = 1;
  1710  0597  01DE               	clrf	_cont
  1711  0598                     l2594:
  1712                           
  1713                           ;master_main.c: 319:     INTCONbits.T0IF = 0;
  1714  0598  1683               	bsf	3,5	;RP0=1, select bank1
  1715  0599  1303               	bcf	3,6	;RP1=0, select bank1
  1716  059A  160C               	bsf	12,4	;volatile
  1717  059B                     l2596:
  1718                           
  1719                           ;master_main.c: 323:     TXSTAbits.SYNC = 0;
  1720  059B  1283               	bcf	3,5	;RP0=0, select bank0
  1721  059C  1C86               	btfss	6,1	;volatile
  1722  059D  2D9F               	goto	u2441
  1723  059E  2DA0               	goto	u2440
  1724  059F                     u2441:
  1725  059F  2BAF               	goto	l2454
  1726  05A0                     u2440:
  1727  05A0                     l2598:
  1728                           
  1729                           ;master_main.c: 324:     TXSTAbits.BRGH = 1;
  1730  05A0  01FB               	clrf	_val_USART
  1731                           
  1732                           ;master_main.c: 325: 
  1733  05A1  01E0               	clrf	_contador
  1734                           
  1735                           ;master_main.c: 326:     BAUDCTLbits.BRG16 = 1;
  1736  05A2  0186               	clrf	6	;volatile
  1737  05A3                     l2600:
  1738                           
  1739                           ;master_main.c: 327: 
  1740  05A3  01EF               	clrf	_u_flag
  1741  05A4  0AEF               	incf	_u_flag,f
  1742                           
  1743                           ;master_main.c: 328:     SPBRG = 207;
  1744  05A5  01DC               	clrf	_d_flag
  1745                           
  1746                           ;master_main.c: 329:     SPBRGH = 0;
  1747  05A6  01DB               	clrf	_c_flag
  1748  05A7  2BAF               	goto	l2454
  1749  05A8  120A  118A  280E   	ljmp	start
  1750  05AB                     __end_of_main:
  1751                           
  1752                           	psect	text1
  1753  0EA8                     __ptext1:	
  1754 ;; *************** function _setup *****************
  1755 ;; Defined at:
  1756 ;;		line 335 in file "master_main.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;		None
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;		None
  1761 ;; Return value:  Size  Location     Type
  1762 ;;                  1    wreg      void 
  1763 ;; Registers used:
  1764 ;;		wreg, status,2, status,0, pclath, cstack
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1770 ;;      Params:         0       0       0       0       0
  1771 ;;      Locals:         0       0       0       0       0
  1772 ;;      Temps:          0       0       0       0       0
  1773 ;;      Totals:         0       0       0       0       0
  1774 ;;Total ram usage:        0 bytes
  1775 ;; Hardware stack levels used:    1
  1776 ;; Hardware stack levels required when called:    4
  1777 ;; This function calls:
  1778 ;;		_I2C_Master_Init
  1779 ;; This function is called by:
  1780 ;;		_main
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           
  1784                           
  1785                           ;psect for function _setup
  1786  0EA8                     _setup:
  1787  0EA8                     l1994:	
  1788                           ;incstack = 0
  1789                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1790                           
  1791                           
  1792                           ;master_main.c: 338:     OPTION_REGbits.T0CS = 0;
  1793  0EA8  1683               	bsf	3,5	;RP0=1, select bank1
  1794  0EA9  1303               	bcf	3,6	;RP1=0, select bank1
  1795  0EAA  170F               	bsf	15,6	;volatile
  1796                           
  1797                           ;master_main.c: 339:     OPTION_REGbits.PSA = 0;
  1798  0EAB  168F               	bsf	15,5	;volatile
  1799                           
  1800                           ;master_main.c: 340:     OPTION_REGbits.PS = 0b111;
  1801  0EAC  160F               	bsf	15,4	;volatile
  1802                           
  1803                           ;master_main.c: 341:     TMR0 = 10;
  1804  0EAD  140F               	bsf	15,0	;volatile
  1805  0EAE                     l1996:
  1806                           
  1807                           ;master_main.c: 344: 
  1808  0EAE  1683               	bsf	3,5	;RP0=1, select bank3
  1809  0EAF  1703               	bsf	3,6	;RP1=1, select bank3
  1810  0EB0  0188               	clrf	8	;volatile
  1811                           
  1812                           ;master_main.c: 345:     PR2 = 250;
  1813  0EB1  0189               	clrf	9	;volatile
  1814                           
  1815                           ;master_main.c: 347:     CCP1CONbits.CCP1M = 0b00001100;
  1816  0EB2  1683               	bsf	3,5	;RP0=1, select bank1
  1817  0EB3  1303               	bcf	3,6	;RP1=0, select bank1
  1818  0EB4  0185               	clrf	5	;volatile
  1819                           
  1820                           ;master_main.c: 348:     CCP2CONbits.CCP2M = 0b00001100;
  1821  0EB5  0188               	clrf	8	;volatile
  1822                           
  1823                           ;master_main.c: 349: 
  1824  0EB6  0189               	clrf	9	;volatile
  1825                           
  1826                           ;master_main.c: 350:     CCPR1L = 0x0F;
  1827  0EB7  0186               	clrf	6	;volatile
  1828  0EB8                     l1998:
  1829                           
  1830                           ;master_main.c: 351:     CCPR2L = 0x0F;
  1831  0EB8  1087               	bcf	7,1	;volatile
  1832                           
  1833                           ;master_main.c: 353:     CCP2CONbits.DC2B1 = 0;
  1834  0EB9  1283               	bcf	3,5	;RP0=0, select bank0
  1835  0EBA  1303               	bcf	3,6	;RP1=0, select bank0
  1836  0EBB  0185               	clrf	5	;volatile
  1837                           
  1838                           ;master_main.c: 354:     CCP2CONbits.DC2B0 = 0;
  1839  0EBC  0186               	clrf	6	;volatile
  1840                           
  1841                           ;master_main.c: 355: 
  1842  0EBD  0188               	clrf	8	;volatile
  1843                           
  1844                           ;master_main.c: 356:     PIR1bits.TMR2IF = 0;
  1845  0EBE  0187               	clrf	7	;volatile
  1846                           
  1847                           ;master_main.c: 357:     T2CONbits.T2CKPS1 = 1;
  1848  0EBF  0188               	clrf	8	;volatile
  1849                           
  1850                           ;master_main.c: 358:     T2CONbits.T2CKPS0 = 1;
  1851  0EC0  0189               	clrf	9	;volatile
  1852  0EC1                     l2000:
  1853                           
  1854                           ;master_main.c: 361:     while (!PIR1bits.TMR2IF);
  1855  0EC1  178B               	bsf	11,7	;volatile
  1856  0EC2                     l2002:
  1857                           
  1858                           ;master_main.c: 362:     PIR1bits.TMR2IF = 0;
  1859  0EC2  170B               	bsf	11,6	;volatile
  1860  0EC3                     l2004:
  1861                           
  1862                           ;master_main.c: 364: 
  1863  0EC3  168B               	bsf	11,5	;volatile
  1864  0EC4                     l2006:
  1865                           
  1866                           ;master_main.c: 365: 
  1867  0EC4  110B               	bcf	11,2	;volatile
  1868  0EC5                     l2008:
  1869                           
  1870                           ;master_main.c: 369:     uint16_t valor;
  1871  0EC5  1683               	bsf	3,5	;RP0=1, select bank1
  1872  0EC6  1303               	bcf	3,6	;RP1=0, select bank1
  1873  0EC7  1218               	bcf	24,4	;volatile
  1874  0EC8                     l2010:
  1875                           
  1876                           ;master_main.c: 370:     valor = variable;
  1877  0EC8  1518               	bsf	24,2	;volatile
  1878  0EC9                     l2012:
  1879                           
  1880                           ;master_main.c: 372:     valor = (valor - (POS1*100));
  1881  0EC9  1683               	bsf	3,5	;RP0=1, select bank3
  1882  0ECA  1703               	bsf	3,6	;RP1=1, select bank3
  1883  0ECB  1587               	bsf	7,3	;volatile
  1884  0ECC                     l2014:
  1885                           
  1886                           ;master_main.c: 374:     valor = (valor - (POS2*10));
  1887  0ECC  30CF               	movlw	207
  1888  0ECD  1683               	bsf	3,5	;RP0=1, select bank1
  1889  0ECE  1303               	bcf	3,6	;RP1=0, select bank1
  1890  0ECF  0099               	movwf	25	;volatile
  1891  0ED0                     l2016:
  1892                           
  1893                           ;master_main.c: 375:     POS3 = (valor);
  1894  0ED0  019A               	clrf	26	;volatile
  1895  0ED1                     l2018:
  1896                           
  1897                           ;master_main.c: 377:     POS1 = POS1 + 48;
  1898  0ED1  1283               	bcf	3,5	;RP0=0, select bank0
  1899  0ED2  1303               	bcf	3,6	;RP1=0, select bank0
  1900  0ED3  1798               	bsf	24,7	;volatile
  1901  0ED4                     l2020:
  1902                           
  1903                           ;master_main.c: 378:     POS2 = POS2 + 48;
  1904  0ED4  1318               	bcf	24,6	;volatile
  1905  0ED5                     l2022:
  1906                           
  1907                           ;master_main.c: 379:     POS3 = POS3 + 48;
  1908  0ED5  1618               	bsf	24,4	;volatile
  1909  0ED6                     l2024:
  1910                           
  1911                           ;master_main.c: 381: }
  1912  0ED6  1683               	bsf	3,5	;RP0=1, select bank1
  1913  0ED7  1303               	bcf	3,6	;RP1=0, select bank1
  1914  0ED8  1698               	bsf	24,5	;volatile
  1915  0ED9                     l2026:
  1916                           
  1917                           ;master_main.c: 384:     if(T_byte1>0x19){
  1918  0ED9  1281               	bcf	1,5	;volatile
  1919  0EDA                     l2028:
  1920                           
  1921                           ;master_main.c: 385:         PORTAbits.RA0 = 1;
  1922  0EDA  1181               	bcf	1,3	;volatile
  1923  0EDB                     l2030:
  1924                           
  1925                           ;master_main.c: 386:     }else{
  1926  0EDB  3007               	movlw	7
  1927  0EDC  0481               	iorwf	1,f	;volatile
  1928  0EDD                     l2032:
  1929                           
  1930                           ;master_main.c: 387:          PORTAbits.RA0 = 0;
  1931  0EDD  300A               	movlw	10
  1932  0EDE  1283               	bcf	3,5	;RP0=0, select bank0
  1933  0EDF  1303               	bcf	3,6	;RP1=0, select bank0
  1934  0EE0  0081               	movwf	1	;volatile
  1935  0EE1                     l2034:
  1936                           
  1937                           ;master_main.c: 391: void alarmaBuzzer(){
  1938  0EE1  30FA               	movlw	250
  1939  0EE2  1683               	bsf	3,5	;RP0=1, select bank1
  1940  0EE3  1303               	bcf	3,6	;RP1=0, select bank1
  1941  0EE4  0092               	movwf	18	;volatile
  1942  0EE5                     l2036:
  1943                           
  1944                           ;master_main.c: 392: 
  1945  0EE5  303F               	movlw	-193
  1946  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  1947  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  1948  0EE8  0597               	andwf	23,f	;volatile
  1949  0EE9                     l2038:
  1950                           
  1951                           ;master_main.c: 393: 
  1952  0EE9  0817               	movf	23,w	;volatile
  1953  0EEA  39F0               	andlw	-16
  1954  0EEB  380C               	iorlw	12
  1955  0EEC  0097               	movwf	23	;volatile
  1956  0EED                     l2040:
  1957                           
  1958                           ;master_main.c: 394:     PORTAbits.RA1 = 1;
  1959  0EED  081D               	movf	29,w	;volatile
  1960  0EEE  39F0               	andlw	-16
  1961  0EEF  380C               	iorlw	12
  1962  0EF0  009D               	movwf	29	;volatile
  1963                           
  1964                           ;master_main.c: 396:     PORTAbits.RA1 = 0;
  1965  0EF1  300F               	movlw	15
  1966  0EF2  0095               	movwf	21	;volatile
  1967                           
  1968                           ;master_main.c: 397:     POS1_BZ = 83;
  1969  0EF3  300F               	movlw	15
  1970  0EF4  009B               	movwf	27	;volatile
  1971  0EF5                     l2042:
  1972                           
  1973                           ;master_main.c: 398:     POS2_BZ = 79;
  1974  0EF5  30CF               	movlw	-49
  1975  0EF6  0597               	andwf	23,f	;volatile
  1976  0EF7                     l2044:
  1977                           
  1978                           ;master_main.c: 399:     POS3_BZ = 83;
  1979  0EF7  129D               	bcf	29,5	;volatile
  1980  0EF8                     l2046:
  1981                           
  1982                           ;master_main.c: 400: 
  1983  0EF8  121D               	bcf	29,4	;volatile
  1984  0EF9                     l2048:
  1985                           
  1986                           ;master_main.c: 402: }
  1987  0EF9  108C               	bcf	12,1	;volatile
  1988  0EFA                     l2050:
  1989  0EFA  1492               	bsf	18,1	;volatile
  1990  0EFB                     l2052:
  1991  0EFB  1412               	bsf	18,0	;volatile
  1992  0EFC                     l2054:
  1993  0EFC  1512               	bsf	18,2	;volatile
  1994  0EFD                     l331:
  1995  0EFD  1C8C               	btfss	12,1	;volatile
  1996  0EFE  2F00               	goto	u1531
  1997  0EFF  2F01               	goto	u1530
  1998  0F00                     u1531:
  1999  0F00  2EFD               	goto	l331
  2000  0F01                     u1530:
  2001  0F01                     l333:
  2002  0F01  108C               	bcf	12,1	;volatile
  2003  0F02                     l2056:
  2004  0F02  3000               	movlw	0
  2005  0F03  00B1               	movwf	I2C_Master_Init@c+3
  2006  0F04  3001               	movlw	1
  2007  0F05  00B0               	movwf	I2C_Master_Init@c+2
  2008  0F06  3086               	movlw	134
  2009  0F07  00AF               	movwf	I2C_Master_Init@c+1
  2010  0F08  30A0               	movlw	160
  2011  0F09  00AE               	movwf	I2C_Master_Init@c
  2012  0F0A  120A  158A  251A  120A  158A  	fcall	_I2C_Master_Init
  2013  0F0F                     l334:
  2014  0F0F  0008               	return
  2015  0F10                     __end_of_setup:
  2016                           
  2017                           	psect	text2
  2018  0D1A                     __ptext2:	
  2019 ;; *************** function _I2C_Master_Init *****************
  2020 ;; Defined at:
  2021 ;;		line 16 in file "I2C.c"
  2022 ;; Parameters:    Size  Location     Type
  2023 ;;  c               4   14[BANK0 ] const unsigned long 
  2024 ;; Auto vars:     Size  Location     Type
  2025 ;;		None
  2026 ;; Return value:  Size  Location     Type
  2027 ;;                  1    wreg      void 
  2028 ;; Registers used:
  2029 ;;		wreg, status,2, status,0, pclath, cstack
  2030 ;; Tracked objects:
  2031 ;;		On entry : 0/0
  2032 ;;		On exit  : 0/0
  2033 ;;		Unchanged: 0/0
  2034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2035 ;;      Params:         0       4       0       0       0
  2036 ;;      Locals:         0       0       0       0       0
  2037 ;;      Temps:          0       4       0       0       0
  2038 ;;      Totals:         0       8       0       0       0
  2039 ;;Total ram usage:        8 bytes
  2040 ;; Hardware stack levels used:    1
  2041 ;; Hardware stack levels required when called:    3
  2042 ;; This function calls:
  2043 ;;		___lldiv
  2044 ;; This function is called by:
  2045 ;;		_setup
  2046 ;; This function uses a non-reentrant model
  2047 ;;
  2048                           
  2049                           
  2050                           ;psect for function _I2C_Master_Init
  2051  0D1A                     _I2C_Master_Init:
  2052  0D1A                     l1834:	
  2053                           ;incstack = 0
  2054                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2055                           
  2056                           
  2057                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  2058  0D1A  3028               	movlw	40
  2059  0D1B  1283               	bcf	3,5	;RP0=0, select bank0
  2060  0D1C  1303               	bcf	3,6	;RP1=0, select bank0
  2061  0D1D  0094               	movwf	20	;volatile
  2062  0D1E                     l1836:
  2063                           
  2064                           ;I2C.c: 19:     SSPCON2 = 0;
  2065  0D1E  1683               	bsf	3,5	;RP0=1, select bank1
  2066  0D1F  1303               	bcf	3,6	;RP1=0, select bank1
  2067  0D20  0191               	clrf	17	;volatile
  2068  0D21                     l1838:
  2069                           
  2070                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  2071  0D21  1283               	bcf	3,5	;RP0=0, select bank0
  2072  0D22  1303               	bcf	3,6	;RP1=0, select bank0
  2073  0D23  082E               	movf	I2C_Master_Init@c,w
  2074  0D24  00B2               	movwf	??_I2C_Master_Init
  2075  0D25  082F               	movf	I2C_Master_Init@c+1,w
  2076  0D26  00B3               	movwf	??_I2C_Master_Init+1
  2077  0D27  0830               	movf	I2C_Master_Init@c+2,w
  2078  0D28  00B4               	movwf	??_I2C_Master_Init+2
  2079  0D29  0831               	movf	I2C_Master_Init@c+3,w
  2080  0D2A  00B5               	movwf	??_I2C_Master_Init+3
  2081  0D2B  3002               	movlw	2
  2082  0D2C                     u1305:
  2083  0D2C  1003               	clrc
  2084  0D2D  0DB2               	rlf	??_I2C_Master_Init,f
  2085  0D2E  0DB3               	rlf	??_I2C_Master_Init+1,f
  2086  0D2F  0DB4               	rlf	??_I2C_Master_Init+2,f
  2087  0D30  0DB5               	rlf	??_I2C_Master_Init+3,f
  2088  0D31                     u1300:
  2089  0D31  3EFF               	addlw	-1
  2090  0D32  1D03               	skipz
  2091  0D33  2D2C               	goto	u1305
  2092  0D34  0835               	movf	??_I2C_Master_Init+3,w
  2093  0D35  00A3               	movwf	___lldiv@divisor+3
  2094  0D36  0834               	movf	??_I2C_Master_Init+2,w
  2095  0D37  00A2               	movwf	___lldiv@divisor+2
  2096  0D38  0833               	movf	??_I2C_Master_Init+1,w
  2097  0D39  00A1               	movwf	___lldiv@divisor+1
  2098  0D3A  0832               	movf	??_I2C_Master_Init,w
  2099  0D3B  00A0               	movwf	___lldiv@divisor
  2100  0D3C  3000               	movlw	0
  2101  0D3D  00A7               	movwf	___lldiv@dividend+3
  2102  0D3E  307A               	movlw	122
  2103  0D3F  00A6               	movwf	___lldiv@dividend+2
  2104  0D40  3012               	movlw	18
  2105  0D41  00A5               	movwf	___lldiv@dividend+1
  2106  0D42  3000               	movlw	0
  2107  0D43  00A4               	movwf	___lldiv@dividend
  2108  0D44  120A  158A  2640  120A  158A  	fcall	___lldiv
  2109  0D49  1283               	bcf	3,5	;RP0=0, select bank0
  2110  0D4A  1303               	bcf	3,6	;RP1=0, select bank0
  2111  0D4B  0820               	movf	?___lldiv,w
  2112  0D4C  3EFF               	addlw	255
  2113  0D4D  1683               	bsf	3,5	;RP0=1, select bank1
  2114  0D4E  1303               	bcf	3,6	;RP1=0, select bank1
  2115  0D4F  0093               	movwf	19	;volatile
  2116  0D50                     l1840:
  2117                           
  2118                           ;I2C.c: 21:     SSPSTAT = 0;
  2119  0D50  0194               	clrf	20	;volatile
  2120  0D51                     l1842:
  2121                           
  2122                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2123  0D51  1587               	bsf	7,3	;volatile
  2124  0D52                     l1844:
  2125                           
  2126                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2127  0D52  1607               	bsf	7,4	;volatile
  2128  0D53                     l29:
  2129  0D53  0008               	return
  2130  0D54                     __end_of_I2C_Master_Init:
  2131                           
  2132                           	psect	text3
  2133  0E40                     __ptext3:	
  2134 ;; *************** function ___lldiv *****************
  2135 ;; Defined at:
  2136 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  2137 ;; Parameters:    Size  Location     Type
  2138 ;;  divisor         4    0[BANK0 ] unsigned long 
  2139 ;;  dividend        4    4[BANK0 ] unsigned long 
  2140 ;; Auto vars:     Size  Location     Type
  2141 ;;  quotient        4    9[BANK0 ] unsigned long 
  2142 ;;  counter         1   13[BANK0 ] unsigned char 
  2143 ;; Return value:  Size  Location     Type
  2144 ;;                  4    0[BANK0 ] unsigned long 
  2145 ;; Registers used:
  2146 ;;		wreg, status,2, status,0
  2147 ;; Tracked objects:
  2148 ;;		On entry : 0/0
  2149 ;;		On exit  : 0/0
  2150 ;;		Unchanged: 0/0
  2151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2152 ;;      Params:         0       8       0       0       0
  2153 ;;      Locals:         0       5       0       0       0
  2154 ;;      Temps:          0       1       0       0       0
  2155 ;;      Totals:         0      14       0       0       0
  2156 ;;Total ram usage:       14 bytes
  2157 ;; Hardware stack levels used:    1
  2158 ;; Hardware stack levels required when called:    2
  2159 ;; This function calls:
  2160 ;;		Nothing
  2161 ;; This function is called by:
  2162 ;;		_I2C_Master_Init
  2163 ;; This function uses a non-reentrant model
  2164 ;;
  2165                           
  2166                           
  2167                           ;psect for function ___lldiv
  2168  0E40                     ___lldiv:
  2169  0E40                     l1810:	
  2170                           ;incstack = 0
  2171                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2172                           
  2173  0E40  3000               	movlw	0
  2174  0E41  1283               	bcf	3,5	;RP0=0, select bank0
  2175  0E42  1303               	bcf	3,6	;RP1=0, select bank0
  2176  0E43  00AC               	movwf	___lldiv@quotient+3
  2177  0E44  3000               	movlw	0
  2178  0E45  00AB               	movwf	___lldiv@quotient+2
  2179  0E46  3000               	movlw	0
  2180  0E47  00AA               	movwf	___lldiv@quotient+1
  2181  0E48  3000               	movlw	0
  2182  0E49  00A9               	movwf	___lldiv@quotient
  2183  0E4A  0823               	movf	___lldiv@divisor+3,w
  2184  0E4B  0422               	iorwf	___lldiv@divisor+2,w
  2185  0E4C  0421               	iorwf	___lldiv@divisor+1,w
  2186  0E4D  0420               	iorwf	___lldiv@divisor,w
  2187  0E4E  1903               	skipnz
  2188  0E4F  2E51               	goto	u1231
  2189  0E50  2E52               	goto	u1230
  2190  0E51                     u1231:
  2191  0E51  2E9F               	goto	l1830
  2192  0E52                     u1230:
  2193  0E52                     l1812:
  2194  0E52  01AD               	clrf	___lldiv@counter
  2195  0E53  0AAD               	incf	___lldiv@counter,f
  2196  0E54  2E62               	goto	l1816
  2197  0E55                     l1814:
  2198  0E55  3001               	movlw	1
  2199  0E56  00A8               	movwf	??___lldiv
  2200  0E57                     u1245:
  2201  0E57  1003               	clrc
  2202  0E58  0DA0               	rlf	___lldiv@divisor,f
  2203  0E59  0DA1               	rlf	___lldiv@divisor+1,f
  2204  0E5A  0DA2               	rlf	___lldiv@divisor+2,f
  2205  0E5B  0DA3               	rlf	___lldiv@divisor+3,f
  2206  0E5C  0BA8               	decfsz	??___lldiv,f
  2207  0E5D  2E57               	goto	u1245
  2208  0E5E  3001               	movlw	1
  2209  0E5F  00A8               	movwf	??___lldiv
  2210  0E60  0828               	movf	??___lldiv,w
  2211  0E61  07AD               	addwf	___lldiv@counter,f
  2212  0E62                     l1816:
  2213  0E62  1FA3               	btfss	___lldiv@divisor+3,7
  2214  0E63  2E65               	goto	u1251
  2215  0E64  2E66               	goto	u1250
  2216  0E65                     u1251:
  2217  0E65  2E55               	goto	l1814
  2218  0E66                     u1250:
  2219  0E66                     l1818:
  2220  0E66  3001               	movlw	1
  2221  0E67  00A8               	movwf	??___lldiv
  2222  0E68                     u1265:
  2223  0E68  1003               	clrc
  2224  0E69  0DA9               	rlf	___lldiv@quotient,f
  2225  0E6A  0DAA               	rlf	___lldiv@quotient+1,f
  2226  0E6B  0DAB               	rlf	___lldiv@quotient+2,f
  2227  0E6C  0DAC               	rlf	___lldiv@quotient+3,f
  2228  0E6D  0BA8               	decfsz	??___lldiv,f
  2229  0E6E  2E68               	goto	u1265
  2230  0E6F                     l1820:
  2231  0E6F  0823               	movf	___lldiv@divisor+3,w
  2232  0E70  0227               	subwf	___lldiv@dividend+3,w
  2233  0E71  1D03               	skipz
  2234  0E72  2E7D               	goto	u1275
  2235  0E73  0822               	movf	___lldiv@divisor+2,w
  2236  0E74  0226               	subwf	___lldiv@dividend+2,w
  2237  0E75  1D03               	skipz
  2238  0E76  2E7D               	goto	u1275
  2239  0E77  0821               	movf	___lldiv@divisor+1,w
  2240  0E78  0225               	subwf	___lldiv@dividend+1,w
  2241  0E79  1D03               	skipz
  2242  0E7A  2E7D               	goto	u1275
  2243  0E7B  0820               	movf	___lldiv@divisor,w
  2244  0E7C  0224               	subwf	___lldiv@dividend,w
  2245  0E7D                     u1275:
  2246  0E7D  1C03               	skipc
  2247  0E7E  2E80               	goto	u1271
  2248  0E7F  2E81               	goto	u1270
  2249  0E80                     u1271:
  2250  0E80  2E90               	goto	l1826
  2251  0E81                     u1270:
  2252  0E81                     l1822:
  2253  0E81  0820               	movf	___lldiv@divisor,w
  2254  0E82  02A4               	subwf	___lldiv@dividend,f
  2255  0E83  0821               	movf	___lldiv@divisor+1,w
  2256  0E84  1C03               	skipc
  2257  0E85  0F21               	incfsz	___lldiv@divisor+1,w
  2258  0E86  02A5               	subwf	___lldiv@dividend+1,f
  2259  0E87  0822               	movf	___lldiv@divisor+2,w
  2260  0E88  1C03               	skipc
  2261  0E89  0F22               	incfsz	___lldiv@divisor+2,w
  2262  0E8A  02A6               	subwf	___lldiv@dividend+2,f
  2263  0E8B  0823               	movf	___lldiv@divisor+3,w
  2264  0E8C  1C03               	skipc
  2265  0E8D  0F23               	incfsz	___lldiv@divisor+3,w
  2266  0E8E  02A7               	subwf	___lldiv@dividend+3,f
  2267  0E8F                     l1824:
  2268  0E8F  1429               	bsf	___lldiv@quotient,0
  2269  0E90                     l1826:
  2270  0E90  3001               	movlw	1
  2271  0E91                     u1285:
  2272  0E91  1003               	clrc
  2273  0E92  0CA3               	rrf	___lldiv@divisor+3,f
  2274  0E93  0CA2               	rrf	___lldiv@divisor+2,f
  2275  0E94  0CA1               	rrf	___lldiv@divisor+1,f
  2276  0E95  0CA0               	rrf	___lldiv@divisor,f
  2277  0E96  3EFF               	addlw	-1
  2278  0E97  1D03               	skipz
  2279  0E98  2E91               	goto	u1285
  2280  0E99                     l1828:
  2281  0E99  3001               	movlw	1
  2282  0E9A  02AD               	subwf	___lldiv@counter,f
  2283  0E9B  1D03               	btfss	3,2
  2284  0E9C  2E9E               	goto	u1291
  2285  0E9D  2E9F               	goto	u1290
  2286  0E9E                     u1291:
  2287  0E9E  2E66               	goto	l1818
  2288  0E9F                     u1290:
  2289  0E9F                     l1830:
  2290  0E9F  082C               	movf	___lldiv@quotient+3,w
  2291  0EA0  00A3               	movwf	?___lldiv+3
  2292  0EA1  082B               	movf	___lldiv@quotient+2,w
  2293  0EA2  00A2               	movwf	?___lldiv+2
  2294  0EA3  082A               	movf	___lldiv@quotient+1,w
  2295  0EA4  00A1               	movwf	?___lldiv+1
  2296  0EA5  0829               	movf	___lldiv@quotient,w
  2297  0EA6  00A0               	movwf	?___lldiv
  2298  0EA7                     l484:
  2299  0EA7  0008               	return
  2300  0EA8                     __end_of___lldiv:
  2301                           
  2302                           	psect	text4
  2303  0C1C                     __ptext4:	
  2304 ;; *************** function _moverVentilador *****************
  2305 ;; Defined at:
  2306 ;;		line 429 in file "master_main.c"
  2307 ;; Parameters:    Size  Location     Type
  2308 ;;		None
  2309 ;; Auto vars:     Size  Location     Type
  2310 ;;		None
  2311 ;; Return value:  Size  Location     Type
  2312 ;;                  1    wreg      void 
  2313 ;; Registers used:
  2314 ;;		wreg
  2315 ;; Tracked objects:
  2316 ;;		On entry : 0/0
  2317 ;;		On exit  : 0/0
  2318 ;;		Unchanged: 0/0
  2319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2320 ;;      Params:         0       0       0       0       0
  2321 ;;      Locals:         0       0       0       0       0
  2322 ;;      Temps:          0       0       0       0       0
  2323 ;;      Totals:         0       0       0       0       0
  2324 ;;Total ram usage:        0 bytes
  2325 ;; Hardware stack levels used:    1
  2326 ;; Hardware stack levels required when called:    2
  2327 ;; This function calls:
  2328 ;;		Nothing
  2329 ;; This function is called by:
  2330 ;;		_main
  2331 ;; This function uses a non-reentrant model
  2332 ;;
  2333                           
  2334                           
  2335                           ;psect for function _moverVentilador
  2336  0C1C                     _moverVentilador:
  2337  0C1C                     l2058:	
  2338                           ;incstack = 0
  2339                           ; Regs used in _moverVentilador: [wreg]
  2340                           
  2341  0C1C  3000               	movlw	0
  2342  0C1D  1683               	bsf	3,5	;RP0=1, select bank1
  2343  0C1E  1303               	bcf	3,6	;RP1=0, select bank1
  2344  0C1F  0221               	subwf	(_T_byte1+1)^(0+128),w
  2345  0C20  301A               	movlw	26
  2346  0C21  1903               	skipnz
  2347  0C22  0220               	subwf	_T_byte1^(0+128),w
  2348  0C23  1C03               	skipc
  2349  0C24  2C26               	goto	u1541
  2350  0C25  2C27               	goto	u1540
  2351  0C26                     u1541:
  2352  0C26  2C2B               	goto	l340
  2353  0C27                     u1540:
  2354  0C27                     l2060:
  2355  0C27  1283               	bcf	3,5	;RP0=0, select bank0
  2356  0C28  1303               	bcf	3,6	;RP1=0, select bank0
  2357  0C29  1405               	bsf	5,0	;volatile
  2358  0C2A  2C2E               	goto	l342
  2359  0C2B                     l340:
  2360  0C2B  1283               	bcf	3,5	;RP0=0, select bank0
  2361  0C2C  1303               	bcf	3,6	;RP1=0, select bank0
  2362  0C2D  1005               	bcf	5,0	;volatile
  2363  0C2E                     l342:
  2364  0C2E  0008               	return
  2365  0C2F                     __end_of_moverVentilador:
  2366                           
  2367                           	psect	text5
  2368  0C80                     __ptext5:	
  2369 ;; *************** function _alarmaBuzzer *****************
  2370 ;; Defined at:
  2371 ;;		line 437 in file "master_main.c"
  2372 ;; Parameters:    Size  Location     Type
  2373 ;;		None
  2374 ;; Auto vars:     Size  Location     Type
  2375 ;;		None
  2376 ;; Return value:  Size  Location     Type
  2377 ;;                  1    wreg      void 
  2378 ;; Registers used:
  2379 ;;		wreg
  2380 ;; Tracked objects:
  2381 ;;		On entry : 0/0
  2382 ;;		On exit  : 0/0
  2383 ;;		Unchanged: 0/0
  2384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2385 ;;      Params:         0       0       0       0       0
  2386 ;;      Locals:         0       0       0       0       0
  2387 ;;      Temps:          0       3       0       0       0
  2388 ;;      Totals:         0       3       0       0       0
  2389 ;;Total ram usage:        3 bytes
  2390 ;; Hardware stack levels used:    1
  2391 ;; Hardware stack levels required when called:    2
  2392 ;; This function calls:
  2393 ;;		Nothing
  2394 ;; This function is called by:
  2395 ;;		_main
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399                           
  2400                           ;psect for function _alarmaBuzzer
  2401  0C80                     _alarmaBuzzer:
  2402  0C80                     l2062:	
  2403                           ;incstack = 0
  2404                           ; Regs used in _alarmaBuzzer: [wreg]
  2405                           
  2406  0C80  1283               	bcf	3,5	;RP0=0, select bank0
  2407  0C81  1303               	bcf	3,6	;RP1=0, select bank0
  2408  0C82  1485               	bsf	5,1	;volatile
  2409  0C83                     l2064:
  2410  0C83  3006               	movlw	6
  2411  0C84  1283               	bcf	3,5	;RP0=0, select bank0
  2412  0C85  1303               	bcf	3,6	;RP1=0, select bank0
  2413  0C86  00A2               	movwf	??_alarmaBuzzer+2
  2414  0C87  3013               	movlw	19
  2415  0C88  00A1               	movwf	??_alarmaBuzzer+1
  2416  0C89  30AD               	movlw	173
  2417  0C8A  00A0               	movwf	??_alarmaBuzzer
  2418  0C8B                     u2487:
  2419  0C8B  0BA0               	decfsz	??_alarmaBuzzer,f
  2420  0C8C  2C8B               	goto	u2487
  2421  0C8D  0BA1               	decfsz	??_alarmaBuzzer+1,f
  2422  0C8E  2C8B               	goto	u2487
  2423  0C8F  0BA2               	decfsz	??_alarmaBuzzer+2,f
  2424  0C90  2C8B               	goto	u2487
  2425  0C91                     l2066:
  2426  0C91  1283               	bcf	3,5	;RP0=0, select bank0
  2427  0C92  1303               	bcf	3,6	;RP1=0, select bank0
  2428  0C93  1085               	bcf	5,1	;volatile
  2429  0C94  3053               	movlw	83
  2430  0C95  00A0               	movwf	??_alarmaBuzzer
  2431  0C96  0820               	movf	??_alarmaBuzzer,w
  2432  0C97  00E6               	movwf	_POS1_BZ
  2433  0C98  304F               	movlw	79
  2434  0C99  00A0               	movwf	??_alarmaBuzzer
  2435  0C9A  0820               	movf	??_alarmaBuzzer,w
  2436  0C9B  00E5               	movwf	_POS2_BZ
  2437  0C9C  3053               	movlw	83
  2438  0C9D  00A0               	movwf	??_alarmaBuzzer
  2439  0C9E  0820               	movf	??_alarmaBuzzer,w
  2440  0C9F  00E4               	movwf	_POS3_BZ
  2441  0CA0                     l345:
  2442  0CA0  0008               	return
  2443  0CA1                     __end_of_alarmaBuzzer:
  2444                           
  2445                           	psect	text6
  2446  0711                     __ptext6:	
  2447 ;; *************** function ___xxtofl *****************
  2448 ;; Defined at:
  2449 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  2450 ;; Parameters:    Size  Location     Type
  2451 ;;  sign            1    wreg     unsigned char 
  2452 ;;  val             4    0[BANK0 ] long 
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;  sign            1    8[BANK0 ] unsigned char 
  2455 ;;  arg             4   10[BANK0 ] unsigned long 
  2456 ;;  exp             1    9[BANK0 ] unsigned char 
  2457 ;; Return value:  Size  Location     Type
  2458 ;;                  4    0[BANK0 ] unsigned char 
  2459 ;; Registers used:
  2460 ;;		wreg, status,2, status,0
  2461 ;; Tracked objects:
  2462 ;;		On entry : 0/0
  2463 ;;		On exit  : 0/0
  2464 ;;		Unchanged: 0/0
  2465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2466 ;;      Params:         0       4       0       0       0
  2467 ;;      Locals:         0       6       0       0       0
  2468 ;;      Temps:          0       4       0       0       0
  2469 ;;      Totals:         0      14       0       0       0
  2470 ;;Total ram usage:       14 bytes
  2471 ;; Hardware stack levels used:    1
  2472 ;; Hardware stack levels required when called:    2
  2473 ;; This function calls:
  2474 ;;		Nothing
  2475 ;; This function is called by:
  2476 ;;		_main
  2477 ;; This function uses a non-reentrant model
  2478 ;;
  2479                           
  2480                           
  2481                           ;psect for function ___xxtofl
  2482  0711                     ___xxtofl:
  2483                           
  2484                           ;incstack = 0
  2485                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2486                           ;___xxtofl@sign stored from wreg
  2487  0711  1283               	bcf	3,5	;RP0=0, select bank0
  2488  0712  1303               	bcf	3,6	;RP1=0, select bank0
  2489  0713  00A8               	movwf	___xxtofl@sign
  2490  0714                     l2274:
  2491  0714  0828               	movf	___xxtofl@sign,w
  2492  0715  1903               	btfsc	3,2
  2493  0716  2F18               	goto	u2041
  2494  0717  2F19               	goto	u2040
  2495  0718                     u2041:
  2496  0718  2F2D               	goto	l2280
  2497  0719                     u2040:
  2498  0719                     l2276:
  2499  0719  1FA3               	btfss	___xxtofl@val+3,7
  2500  071A  2F1C               	goto	u2051
  2501  071B  2F1D               	goto	u2050
  2502  071C                     u2051:
  2503  071C  2F2D               	goto	l2280
  2504  071D                     u2050:
  2505  071D                     l2278:
  2506  071D  0920               	comf	___xxtofl@val,w
  2507  071E  00AA               	movwf	___xxtofl@arg
  2508  071F  0921               	comf	___xxtofl@val+1,w
  2509  0720  00AB               	movwf	___xxtofl@arg+1
  2510  0721  0922               	comf	___xxtofl@val+2,w
  2511  0722  00AC               	movwf	___xxtofl@arg+2
  2512  0723  0923               	comf	___xxtofl@val+3,w
  2513  0724  00AD               	movwf	___xxtofl@arg+3
  2514  0725  0AAA               	incf	___xxtofl@arg,f
  2515  0726  1903               	skipnz
  2516  0727  0AAB               	incf	___xxtofl@arg+1,f
  2517  0728  1903               	skipnz
  2518  0729  0AAC               	incf	___xxtofl@arg+2,f
  2519  072A  1903               	skipnz
  2520  072B  0AAD               	incf	___xxtofl@arg+3,f
  2521  072C  2F35               	goto	l881
  2522  072D                     l2280:
  2523  072D  0823               	movf	___xxtofl@val+3,w
  2524  072E  00AD               	movwf	___xxtofl@arg+3
  2525  072F  0822               	movf	___xxtofl@val+2,w
  2526  0730  00AC               	movwf	___xxtofl@arg+2
  2527  0731  0821               	movf	___xxtofl@val+1,w
  2528  0732  00AB               	movwf	___xxtofl@arg+1
  2529  0733  0820               	movf	___xxtofl@val,w
  2530  0734  00AA               	movwf	___xxtofl@arg
  2531  0735                     l881:
  2532  0735  0823               	movf	___xxtofl@val+3,w
  2533  0736  0422               	iorwf	___xxtofl@val+2,w
  2534  0737  0421               	iorwf	___xxtofl@val+1,w
  2535  0738  0420               	iorwf	___xxtofl@val,w
  2536  0739  1D03               	skipz
  2537  073A  2F3C               	goto	u2061
  2538  073B  2F3D               	goto	u2060
  2539  073C                     u2061:
  2540  073C  2F46               	goto	l2286
  2541  073D                     u2060:
  2542  073D                     l2282:
  2543  073D  3000               	movlw	0
  2544  073E  00A3               	movwf	?___xxtofl+3
  2545  073F  3000               	movlw	0
  2546  0740  00A2               	movwf	?___xxtofl+2
  2547  0741  3000               	movlw	0
  2548  0742  00A1               	movwf	?___xxtofl+1
  2549  0743  3000               	movlw	0
  2550  0744  00A0               	movwf	?___xxtofl
  2551  0745  2FCC               	goto	l883
  2552  0746                     l2286:
  2553  0746  3096               	movlw	150
  2554  0747  00A4               	movwf	??___xxtofl
  2555  0748  0824               	movf	??___xxtofl,w
  2556  0749  00A9               	movwf	___xxtofl@exp
  2557  074A  2F58               	goto	l2290
  2558  074B                     l2288:
  2559  074B  3001               	movlw	1
  2560  074C  00A4               	movwf	??___xxtofl
  2561  074D  0824               	movf	??___xxtofl,w
  2562  074E  07A9               	addwf	___xxtofl@exp,f
  2563  074F  3001               	movlw	1
  2564  0750                     u2075:
  2565  0750  1003               	clrc
  2566  0751  0CAD               	rrf	___xxtofl@arg+3,f
  2567  0752  0CAC               	rrf	___xxtofl@arg+2,f
  2568  0753  0CAB               	rrf	___xxtofl@arg+1,f
  2569  0754  0CAA               	rrf	___xxtofl@arg,f
  2570  0755  3EFF               	addlw	-1
  2571  0756  1D03               	skipz
  2572  0757  2F50               	goto	u2075
  2573  0758                     l2290:
  2574  0758  30FE               	movlw	254
  2575  0759  052D               	andwf	___xxtofl@arg+3,w
  2576  075A  1D03               	btfss	3,2
  2577  075B  2F5D               	goto	u2081
  2578  075C  2F5E               	goto	u2080
  2579  075D                     u2081:
  2580  075D  2F4B               	goto	l2288
  2581  075E                     u2080:
  2582  075E  2F7A               	goto	l887
  2583  075F                     l2292:
  2584  075F  3001               	movlw	1
  2585  0760  00A4               	movwf	??___xxtofl
  2586  0761  0824               	movf	??___xxtofl,w
  2587  0762  07A9               	addwf	___xxtofl@exp,f
  2588  0763                     l2294:
  2589  0763  3001               	movlw	1
  2590  0764  07AA               	addwf	___xxtofl@arg,f
  2591  0765  3000               	movlw	0
  2592  0766  1803               	skipnc
  2593  0767  3001               	movlw	1
  2594  0768  07AB               	addwf	___xxtofl@arg+1,f
  2595  0769  3000               	movlw	0
  2596  076A  1803               	skipnc
  2597  076B  3001               	movlw	1
  2598  076C  07AC               	addwf	___xxtofl@arg+2,f
  2599  076D  3000               	movlw	0
  2600  076E  1803               	skipnc
  2601  076F  3001               	movlw	1
  2602  0770  07AD               	addwf	___xxtofl@arg+3,f
  2603  0771                     l2296:
  2604  0771  3001               	movlw	1
  2605  0772                     u2095:
  2606  0772  1003               	clrc
  2607  0773  0CAD               	rrf	___xxtofl@arg+3,f
  2608  0774  0CAC               	rrf	___xxtofl@arg+2,f
  2609  0775  0CAB               	rrf	___xxtofl@arg+1,f
  2610  0776  0CAA               	rrf	___xxtofl@arg,f
  2611  0777  3EFF               	addlw	-1
  2612  0778  1D03               	skipz
  2613  0779  2F72               	goto	u2095
  2614  077A                     l887:
  2615  077A  30FF               	movlw	255
  2616  077B  052D               	andwf	___xxtofl@arg+3,w
  2617  077C  1D03               	btfss	3,2
  2618  077D  2F7F               	goto	u2101
  2619  077E  2F80               	goto	u2100
  2620  077F                     u2101:
  2621  077F  2F5F               	goto	l2292
  2622  0780                     u2100:
  2623  0780  2F8C               	goto	l2300
  2624  0781                     l2298:
  2625  0781  3001               	movlw	1
  2626  0782  02A9               	subwf	___xxtofl@exp,f
  2627  0783  3001               	movlw	1
  2628  0784  00A4               	movwf	??___xxtofl
  2629  0785                     u2115:
  2630  0785  1003               	clrc
  2631  0786  0DAA               	rlf	___xxtofl@arg,f
  2632  0787  0DAB               	rlf	___xxtofl@arg+1,f
  2633  0788  0DAC               	rlf	___xxtofl@arg+2,f
  2634  0789  0DAD               	rlf	___xxtofl@arg+3,f
  2635  078A  0BA4               	decfsz	??___xxtofl,f
  2636  078B  2F85               	goto	u2115
  2637  078C                     l2300:
  2638  078C  1BAC               	btfsc	___xxtofl@arg+2,7
  2639  078D  2F8F               	goto	u2121
  2640  078E  2F90               	goto	u2120
  2641  078F                     u2121:
  2642  078F  2F96               	goto	l894
  2643  0790                     u2120:
  2644  0790                     l2302:
  2645  0790  3002               	movlw	2
  2646  0791  0229               	subwf	___xxtofl@exp,w
  2647  0792  1803               	skipnc
  2648  0793  2F95               	goto	u2131
  2649  0794  2F96               	goto	u2130
  2650  0795                     u2131:
  2651  0795  2F81               	goto	l2298
  2652  0796                     u2130:
  2653  0796                     l894:
  2654  0796  1829               	btfsc	___xxtofl@exp,0
  2655  0797  2F99               	goto	u2141
  2656  0798  2F9A               	goto	u2140
  2657  0799                     u2141:
  2658  0799  2FA2               	goto	l895
  2659  079A                     u2140:
  2660  079A                     l2304:
  2661  079A  30FF               	movlw	255
  2662  079B  05AA               	andwf	___xxtofl@arg,f
  2663  079C  30FF               	movlw	255
  2664  079D  05AB               	andwf	___xxtofl@arg+1,f
  2665  079E  307F               	movlw	127
  2666  079F  05AC               	andwf	___xxtofl@arg+2,f
  2667  07A0  30FF               	movlw	255
  2668  07A1  05AD               	andwf	___xxtofl@arg+3,f
  2669  07A2                     l895:
  2670  07A2  1003               	clrc
  2671  07A3  0CA9               	rrf	___xxtofl@exp,f
  2672  07A4                     l2306:
  2673  07A4  0829               	movf	___xxtofl@exp,w
  2674  07A5  00A4               	movwf	??___xxtofl
  2675  07A6  01A5               	clrf	??___xxtofl+1
  2676  07A7  01A6               	clrf	??___xxtofl+2
  2677  07A8  01A7               	clrf	??___xxtofl+3
  2678  07A9  3018               	movlw	24
  2679  07AA                     u2155:
  2680  07AA  1003               	clrc
  2681  07AB  0DA4               	rlf	??___xxtofl,f
  2682  07AC  0DA5               	rlf	??___xxtofl+1,f
  2683  07AD  0DA6               	rlf	??___xxtofl+2,f
  2684  07AE  0DA7               	rlf	??___xxtofl+3,f
  2685  07AF                     u2150:
  2686  07AF  3EFF               	addlw	-1
  2687  07B0  1D03               	skipz
  2688  07B1  2FAA               	goto	u2155
  2689  07B2  0824               	movf	??___xxtofl,w
  2690  07B3  04AA               	iorwf	___xxtofl@arg,f
  2691  07B4  0825               	movf	??___xxtofl+1,w
  2692  07B5  04AB               	iorwf	___xxtofl@arg+1,f
  2693  07B6  0826               	movf	??___xxtofl+2,w
  2694  07B7  04AC               	iorwf	___xxtofl@arg+2,f
  2695  07B8  0827               	movf	??___xxtofl+3,w
  2696  07B9  04AD               	iorwf	___xxtofl@arg+3,f
  2697  07BA                     l2308:
  2698  07BA  0828               	movf	___xxtofl@sign,w
  2699  07BB  1903               	btfsc	3,2
  2700  07BC  2FBE               	goto	u2161
  2701  07BD  2FBF               	goto	u2160
  2702  07BE                     u2161:
  2703  07BE  2FC4               	goto	l2314
  2704  07BF                     u2160:
  2705  07BF                     l2310:
  2706  07BF  1FA3               	btfss	___xxtofl@val+3,7
  2707  07C0  2FC2               	goto	u2171
  2708  07C1  2FC3               	goto	u2170
  2709  07C2                     u2171:
  2710  07C2  2FC4               	goto	l2314
  2711  07C3                     u2170:
  2712  07C3                     l2312:
  2713  07C3  17AD               	bsf	___xxtofl@arg+3,7
  2714  07C4                     l2314:
  2715  07C4  082D               	movf	___xxtofl@arg+3,w
  2716  07C5  00A3               	movwf	?___xxtofl+3
  2717  07C6  082C               	movf	___xxtofl@arg+2,w
  2718  07C7  00A2               	movwf	?___xxtofl+2
  2719  07C8  082B               	movf	___xxtofl@arg+1,w
  2720  07C9  00A1               	movwf	?___xxtofl+1
  2721  07CA  082A               	movf	___xxtofl@arg,w
  2722  07CB  00A0               	movwf	?___xxtofl
  2723  07CC                     l883:
  2724  07CC  0008               	return
  2725  07CD                     __end_of___xxtofl:
  2726                           
  2727                           	psect	text7
  2728  0F84                     __ptext7:	
  2729 ;; *************** function ___fltol *****************
  2730 ;; Defined at:
  2731 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  2732 ;; Parameters:    Size  Location     Type
  2733 ;;  f1              4   40[BANK0 ] unsigned char 
  2734 ;; Auto vars:     Size  Location     Type
  2735 ;;  exp1            1   50[BANK0 ] unsigned char 
  2736 ;;  sign1           1   49[BANK0 ] unsigned char 
  2737 ;; Return value:  Size  Location     Type
  2738 ;;                  4   40[BANK0 ] long 
  2739 ;; Registers used:
  2740 ;;		wreg, status,2, status,0
  2741 ;; Tracked objects:
  2742 ;;		On entry : 0/0
  2743 ;;		On exit  : 0/0
  2744 ;;		Unchanged: 0/0
  2745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2746 ;;      Params:         0       4       0       0       0
  2747 ;;      Locals:         0       2       0       0       0
  2748 ;;      Temps:          0       5       0       0       0
  2749 ;;      Totals:         0      11       0       0       0
  2750 ;;Total ram usage:       11 bytes
  2751 ;; Hardware stack levels used:    1
  2752 ;; Hardware stack levels required when called:    2
  2753 ;; This function calls:
  2754 ;;		Nothing
  2755 ;; This function is called by:
  2756 ;;		_main
  2757 ;; This function uses a non-reentrant model
  2758 ;;
  2759                           
  2760                           
  2761                           ;psect for function ___fltol
  2762  0F84                     ___fltol:
  2763  0F84                     l2098:	
  2764                           ;incstack = 0
  2765                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2766                           
  2767  0F84  1003               	clrc
  2768  0F85  1283               	bcf	3,5	;RP0=0, select bank0
  2769  0F86  1303               	bcf	3,6	;RP1=0, select bank0
  2770  0F87  0D4A               	rlf	___fltol@f1+2,w
  2771  0F88  0D4B               	rlf	___fltol@f1+3,w
  2772  0F89  00CC               	movwf	??___fltol
  2773  0F8A  084C               	movf	??___fltol,w
  2774  0F8B  00D2               	movwf	___fltol@exp1
  2775  0F8C  0852               	movf	___fltol@exp1,w
  2776  0F8D  1D03               	btfss	3,2
  2777  0F8E  2F90               	goto	u1571
  2778  0F8F  2F91               	goto	u1570
  2779  0F90                     u1571:
  2780  0F90  2F9A               	goto	l2104
  2781  0F91                     u1570:
  2782  0F91                     l2100:
  2783  0F91  3000               	movlw	0
  2784  0F92  00CB               	movwf	?___fltol+3
  2785  0F93  3000               	movlw	0
  2786  0F94  00CA               	movwf	?___fltol+2
  2787  0F95  3000               	movlw	0
  2788  0F96  00C9               	movwf	?___fltol+1
  2789  0F97  3000               	movlw	0
  2790  0F98  00C8               	movwf	?___fltol
  2791  0F99  2FFF               	goto	l634
  2792  0F9A                     l2104:
  2793  0F9A  0848               	movf	___fltol@f1,w
  2794  0F9B  00CC               	movwf	??___fltol
  2795  0F9C  0849               	movf	___fltol@f1+1,w
  2796  0F9D  00CD               	movwf	??___fltol+1
  2797  0F9E  084A               	movf	___fltol@f1+2,w
  2798  0F9F  00CE               	movwf	??___fltol+2
  2799  0FA0  084B               	movf	___fltol@f1+3,w
  2800  0FA1  00CF               	movwf	??___fltol+3
  2801  0FA2  301F               	movlw	31
  2802  0FA3                     u1585:
  2803  0FA3  1003               	clrc
  2804  0FA4  0CCF               	rrf	??___fltol+3,f
  2805  0FA5  0CCE               	rrf	??___fltol+2,f
  2806  0FA6  0CCD               	rrf	??___fltol+1,f
  2807  0FA7  0CCC               	rrf	??___fltol,f
  2808  0FA8                     u1580:
  2809  0FA8  3EFF               	addlw	-1
  2810  0FA9  1D03               	skipz
  2811  0FAA  2FA3               	goto	u1585
  2812  0FAB  084C               	movf	??___fltol,w
  2813  0FAC  00D0               	movwf	??___fltol+4
  2814  0FAD  0850               	movf	??___fltol+4,w
  2815  0FAE  00D1               	movwf	___fltol@sign1
  2816  0FAF                     l2106:
  2817  0FAF  17CA               	bsf	___fltol@f1+2,7
  2818  0FB0                     l2108:
  2819  0FB0  30FF               	movlw	255
  2820  0FB1  05C8               	andwf	___fltol@f1,f
  2821  0FB2  30FF               	movlw	255
  2822  0FB3  05C9               	andwf	___fltol@f1+1,f
  2823  0FB4  30FF               	movlw	255
  2824  0FB5  05CA               	andwf	___fltol@f1+2,f
  2825  0FB6  3000               	movlw	0
  2826  0FB7  05CB               	andwf	___fltol@f1+3,f
  2827  0FB8                     l2110:
  2828  0FB8  3096               	movlw	150
  2829  0FB9  02D2               	subwf	___fltol@exp1,f
  2830  0FBA                     l2112:
  2831  0FBA  1FD2               	btfss	___fltol@exp1,7
  2832  0FBB  2FBD               	goto	u1591
  2833  0FBC  2FBE               	goto	u1590
  2834  0FBD                     u1591:
  2835  0FBD  2FD8               	goto	l2122
  2836  0FBE                     u1590:
  2837  0FBE                     l2114:
  2838  0FBE  0852               	movf	___fltol@exp1,w
  2839  0FBF  3A80               	xorlw	128
  2840  0FC0  3E97               	addlw	151
  2841  0FC1  1803               	skipnc
  2842  0FC2  2FC4               	goto	u1601
  2843  0FC3  2FC5               	goto	u1600
  2844  0FC4                     u1601:
  2845  0FC4  2FC6               	goto	l2120
  2846  0FC5                     u1600:
  2847  0FC5  2F91               	goto	l2100
  2848  0FC6                     l2120:
  2849  0FC6  3001               	movlw	1
  2850  0FC7                     u1615:
  2851  0FC7  1003               	clrc
  2852  0FC8  0CCB               	rrf	___fltol@f1+3,f
  2853  0FC9  0CCA               	rrf	___fltol@f1+2,f
  2854  0FCA  0CC9               	rrf	___fltol@f1+1,f
  2855  0FCB  0CC8               	rrf	___fltol@f1,f
  2856  0FCC  3EFF               	addlw	-1
  2857  0FCD  1D03               	skipz
  2858  0FCE  2FC7               	goto	u1615
  2859  0FCF  3001               	movlw	1
  2860  0FD0  00CC               	movwf	??___fltol
  2861  0FD1  084C               	movf	??___fltol,w
  2862  0FD2  07D2               	addwf	___fltol@exp1,f
  2863  0FD3  1D03               	btfss	3,2
  2864  0FD4  2FD6               	goto	u1621
  2865  0FD5  2FD7               	goto	u1620
  2866  0FD6                     u1621:
  2867  0FD6  2FC6               	goto	l2120
  2868  0FD7                     u1620:
  2869  0FD7  2FEF               	goto	l2130
  2870  0FD8                     l2122:
  2871  0FD8  3020               	movlw	32
  2872  0FD9  0252               	subwf	___fltol@exp1,w
  2873  0FDA  1C03               	skipc
  2874  0FDB  2FDD               	goto	u1631
  2875  0FDC  2FDE               	goto	u1630
  2876  0FDD                     u1631:
  2877  0FDD  2FEA               	goto	l641
  2878  0FDE                     u1630:
  2879  0FDE  2F91               	goto	l2100
  2880  0FDF                     l2128:
  2881  0FDF  3001               	movlw	1
  2882  0FE0  00CC               	movwf	??___fltol
  2883  0FE1                     u1645:
  2884  0FE1  1003               	clrc
  2885  0FE2  0DC8               	rlf	___fltol@f1,f
  2886  0FE3  0DC9               	rlf	___fltol@f1+1,f
  2887  0FE4  0DCA               	rlf	___fltol@f1+2,f
  2888  0FE5  0DCB               	rlf	___fltol@f1+3,f
  2889  0FE6  0BCC               	decfsz	??___fltol,f
  2890  0FE7  2FE1               	goto	u1645
  2891  0FE8  3001               	movlw	1
  2892  0FE9  02D2               	subwf	___fltol@exp1,f
  2893  0FEA                     l641:
  2894  0FEA  0852               	movf	___fltol@exp1,w
  2895  0FEB  1D03               	btfss	3,2
  2896  0FEC  2FEE               	goto	u1651
  2897  0FED  2FEF               	goto	u1650
  2898  0FEE                     u1651:
  2899  0FEE  2FDF               	goto	l2128
  2900  0FEF                     u1650:
  2901  0FEF                     l2130:
  2902  0FEF  0851               	movf	___fltol@sign1,w
  2903  0FF0  1903               	btfsc	3,2
  2904  0FF1  2FF3               	goto	u1661
  2905  0FF2  2FF4               	goto	u1660
  2906  0FF3                     u1661:
  2907  0FF3  2FFF               	goto	l644
  2908  0FF4                     u1660:
  2909  0FF4                     l2132:
  2910  0FF4  09C8               	comf	___fltol@f1,f
  2911  0FF5  09C9               	comf	___fltol@f1+1,f
  2912  0FF6  09CA               	comf	___fltol@f1+2,f
  2913  0FF7  09CB               	comf	___fltol@f1+3,f
  2914  0FF8  0AC8               	incf	___fltol@f1,f
  2915  0FF9  1903               	skipnz
  2916  0FFA  0AC9               	incf	___fltol@f1+1,f
  2917  0FFB  1903               	skipnz
  2918  0FFC  0ACA               	incf	___fltol@f1+2,f
  2919  0FFD  1903               	skipnz
  2920  0FFE  0ACB               	incf	___fltol@f1+3,f
  2921  0FFF                     l644:
  2922  0FFF                     l634:
  2923  0FFF  0008               	return
  2924  1000                     __end_of___fltol:
  2925                           
  2926                           	psect	text8
  2927  002F                     __ptext8:	
  2928 ;; *************** function ___flmul *****************
  2929 ;; Defined at:
  2930 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  2931 ;; Parameters:    Size  Location     Type
  2932 ;;  b               4   14[BANK0 ] long 
  2933 ;;  a               4   18[BANK0 ] long 
  2934 ;; Auto vars:     Size  Location     Type
  2935 ;;  prod            4   34[BANK0 ] struct .
  2936 ;;  grs             4   28[BANK0 ] unsigned long 
  2937 ;;  temp            2   38[BANK0 ] struct .
  2938 ;;  bexp            1   33[BANK0 ] unsigned char 
  2939 ;;  aexp            1   32[BANK0 ] unsigned char 
  2940 ;;  sign            1   27[BANK0 ] unsigned char 
  2941 ;; Return value:  Size  Location     Type
  2942 ;;                  4   14[BANK0 ] unsigned char 
  2943 ;; Registers used:
  2944 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2945 ;; Tracked objects:
  2946 ;;		On entry : 0/0
  2947 ;;		On exit  : 0/0
  2948 ;;		Unchanged: 0/0
  2949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2950 ;;      Params:         0       8       0       0       0
  2951 ;;      Locals:         0      13       0       0       0
  2952 ;;      Temps:          0       5       0       0       0
  2953 ;;      Totals:         0      26       0       0       0
  2954 ;;Total ram usage:       26 bytes
  2955 ;; Hardware stack levels used:    1
  2956 ;; Hardware stack levels required when called:    3
  2957 ;; This function calls:
  2958 ;;		__Umul8_16
  2959 ;; This function is called by:
  2960 ;;		_main
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964                           
  2965                           ;psect for function ___flmul
  2966  002F                     ___flmul:
  2967  002F                     l2134:	
  2968                           ;incstack = 0
  2969                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2970                           
  2971  002F  1283               	bcf	3,5	;RP0=0, select bank0
  2972  0030  1303               	bcf	3,6	;RP1=0, select bank0
  2973  0031  0831               	movf	___flmul@b+3,w
  2974  0032  3980               	andlw	128
  2975  0033  00B6               	movwf	??___flmul
  2976  0034  0836               	movf	??___flmul,w
  2977  0035  00BB               	movwf	___flmul@sign
  2978  0036                     l2136:
  2979  0036  0831               	movf	___flmul@b+3,w
  2980  0037  00B6               	movwf	??___flmul
  2981  0038  0736               	addwf	??___flmul,w
  2982  0039  00B7               	movwf	??___flmul+1
  2983  003A  0837               	movf	??___flmul+1,w
  2984  003B  00C1               	movwf	___flmul@bexp
  2985  003C                     l2138:
  2986  003C  1FB0               	btfss	___flmul@b+2,7
  2987  003D  283F               	goto	u1671
  2988  003E  2840               	goto	u1670
  2989  003F                     u1671:
  2990  003F  2841               	goto	l2142
  2991  0040                     u1670:
  2992  0040                     l2140:
  2993  0040  1441               	bsf	___flmul@bexp,0
  2994  0041                     l2142:
  2995  0041  0841               	movf	___flmul@bexp,w
  2996  0042  1903               	btfsc	3,2
  2997  0043  2845               	goto	u1681
  2998  0044  2846               	goto	u1680
  2999  0045                     u1681:
  3000  0045  2855               	goto	l2150
  3001  0046                     u1680:
  3002  0046                     l2144:
  3003  0046  0A41               	incf	___flmul@bexp,w
  3004  0047  1D03               	btfss	3,2
  3005  0048  284A               	goto	u1691
  3006  0049  284B               	goto	u1690
  3007  004A                     u1691:
  3008  004A  2853               	goto	l2148
  3009  004B                     u1690:
  3010  004B                     l2146:
  3011  004B  3000               	movlw	0
  3012  004C  00B1               	movwf	___flmul@b+3
  3013  004D  3000               	movlw	0
  3014  004E  00B0               	movwf	___flmul@b+2
  3015  004F  3000               	movlw	0
  3016  0050  00AF               	movwf	___flmul@b+1
  3017  0051  3000               	movlw	0
  3018  0052  00AE               	movwf	___flmul@b
  3019  0053                     l2148:
  3020  0053  17B0               	bsf	___flmul@b+2,7
  3021  0054  285D               	goto	l2152
  3022  0055                     l2150:
  3023  0055  3000               	movlw	0
  3024  0056  00B1               	movwf	___flmul@b+3
  3025  0057  3000               	movlw	0
  3026  0058  00B0               	movwf	___flmul@b+2
  3027  0059  3000               	movlw	0
  3028  005A  00AF               	movwf	___flmul@b+1
  3029  005B  3000               	movlw	0
  3030  005C  00AE               	movwf	___flmul@b
  3031  005D                     l2152:
  3032  005D  0835               	movf	___flmul@a+3,w
  3033  005E  3980               	andlw	128
  3034  005F  00B6               	movwf	??___flmul
  3035  0060  0836               	movf	??___flmul,w
  3036  0061  06BB               	xorwf	___flmul@sign,f
  3037  0062                     l2154:
  3038  0062  0835               	movf	___flmul@a+3,w
  3039  0063  00B6               	movwf	??___flmul
  3040  0064  0736               	addwf	??___flmul,w
  3041  0065  00B7               	movwf	??___flmul+1
  3042  0066  0837               	movf	??___flmul+1,w
  3043  0067  00C0               	movwf	___flmul@aexp
  3044  0068                     l2156:
  3045  0068  1FB4               	btfss	___flmul@a+2,7
  3046  0069  286B               	goto	u1701
  3047  006A  286C               	goto	u1700
  3048  006B                     u1701:
  3049  006B  286D               	goto	l2160
  3050  006C                     u1700:
  3051  006C                     l2158:
  3052  006C  1440               	bsf	___flmul@aexp,0
  3053  006D                     l2160:
  3054  006D  0840               	movf	___flmul@aexp,w
  3055  006E  1903               	btfsc	3,2
  3056  006F  2871               	goto	u1711
  3057  0070  2872               	goto	u1710
  3058  0071                     u1711:
  3059  0071  2881               	goto	l2168
  3060  0072                     u1710:
  3061  0072                     l2162:
  3062  0072  0A40               	incf	___flmul@aexp,w
  3063  0073  1D03               	btfss	3,2
  3064  0074  2876               	goto	u1721
  3065  0075  2877               	goto	u1720
  3066  0076                     u1721:
  3067  0076  287F               	goto	l2166
  3068  0077                     u1720:
  3069  0077                     l2164:
  3070  0077  3000               	movlw	0
  3071  0078  00B5               	movwf	___flmul@a+3
  3072  0079  3000               	movlw	0
  3073  007A  00B4               	movwf	___flmul@a+2
  3074  007B  3000               	movlw	0
  3075  007C  00B3               	movwf	___flmul@a+1
  3076  007D  3000               	movlw	0
  3077  007E  00B2               	movwf	___flmul@a
  3078  007F                     l2166:
  3079  007F  17B4               	bsf	___flmul@a+2,7
  3080  0080  2889               	goto	l2170
  3081  0081                     l2168:
  3082  0081  3000               	movlw	0
  3083  0082  00B5               	movwf	___flmul@a+3
  3084  0083  3000               	movlw	0
  3085  0084  00B4               	movwf	___flmul@a+2
  3086  0085  3000               	movlw	0
  3087  0086  00B3               	movwf	___flmul@a+1
  3088  0087  3000               	movlw	0
  3089  0088  00B2               	movwf	___flmul@a
  3090  0089                     l2170:
  3091  0089  0840               	movf	___flmul@aexp,w
  3092  008A  1903               	btfsc	3,2
  3093  008B  288D               	goto	u1731
  3094  008C  288E               	goto	u1730
  3095  008D                     u1731:
  3096  008D  2893               	goto	l2174
  3097  008E                     u1730:
  3098  008E                     l2172:
  3099  008E  0841               	movf	___flmul@bexp,w
  3100  008F  1D03               	btfss	3,2
  3101  0090  2892               	goto	u1741
  3102  0091  2893               	goto	u1740
  3103  0092                     u1741:
  3104  0092  289C               	goto	l2178
  3105  0093                     u1740:
  3106  0093                     l2174:
  3107  0093  3000               	movlw	0
  3108  0094  00B1               	movwf	?___flmul+3
  3109  0095  3000               	movlw	0
  3110  0096  00B0               	movwf	?___flmul+2
  3111  0097  3000               	movlw	0
  3112  0098  00AF               	movwf	?___flmul+1
  3113  0099  3000               	movlw	0
  3114  009A  00AE               	movwf	?___flmul
  3115  009B  2B8F               	goto	l837
  3116  009C                     l2178:
  3117  009C  082E               	movf	___flmul@b,w
  3118  009D  00B6               	movwf	??___flmul
  3119  009E  0836               	movf	??___flmul,w
  3120  009F  00A0               	movwf	__Umul8_16@multiplicand
  3121  00A0  0834               	movf	___flmul@a+2,w
  3122  00A1  120A  158A  24F1  120A  118A  	fcall	__Umul8_16
  3123  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  3124  00A7  1303               	bcf	3,6	;RP1=0, select bank0
  3125  00A8  0821               	movf	?__Umul8_16+1,w
  3126  00A9  00C7               	movwf	___flmul@temp+1
  3127  00AA  0820               	movf	?__Umul8_16,w
  3128  00AB  00C6               	movwf	___flmul@temp
  3129  00AC                     l2180:
  3130  00AC  0846               	movf	___flmul@temp,w
  3131  00AD  00B6               	movwf	??___flmul
  3132  00AE  01B7               	clrf	??___flmul+1
  3133  00AF  01B8               	clrf	??___flmul+2
  3134  00B0  01B9               	clrf	??___flmul+3
  3135  00B1  0839               	movf	??___flmul+3,w
  3136  00B2  00BF               	movwf	___flmul@grs+3
  3137  00B3  0838               	movf	??___flmul+2,w
  3138  00B4  00BE               	movwf	___flmul@grs+2
  3139  00B5  0837               	movf	??___flmul+1,w
  3140  00B6  00BD               	movwf	___flmul@grs+1
  3141  00B7  0836               	movf	??___flmul,w
  3142  00B8  00BC               	movwf	___flmul@grs
  3143  00B9                     l2182:
  3144  00B9  0847               	movf	___flmul@temp+1,w
  3145  00BA  00B6               	movwf	??___flmul
  3146  00BB  01B7               	clrf	??___flmul+1
  3147  00BC  01B8               	clrf	??___flmul+2
  3148  00BD  01B9               	clrf	??___flmul+3
  3149  00BE  0839               	movf	??___flmul+3,w
  3150  00BF  00C5               	movwf	___flmul@prod+3
  3151  00C0  0838               	movf	??___flmul+2,w
  3152  00C1  00C4               	movwf	___flmul@prod+2
  3153  00C2  0837               	movf	??___flmul+1,w
  3154  00C3  00C3               	movwf	___flmul@prod+1
  3155  00C4  0836               	movf	??___flmul,w
  3156  00C5  00C2               	movwf	___flmul@prod
  3157  00C6  082F               	movf	___flmul@b+1,w
  3158  00C7  00B6               	movwf	??___flmul
  3159  00C8  0836               	movf	??___flmul,w
  3160  00C9  00A0               	movwf	__Umul8_16@multiplicand
  3161  00CA  0833               	movf	___flmul@a+1,w
  3162  00CB  120A  158A  24F1  120A  118A  	fcall	__Umul8_16
  3163  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  3164  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  3165  00D2  0821               	movf	?__Umul8_16+1,w
  3166  00D3  00C7               	movwf	___flmul@temp+1
  3167  00D4  0820               	movf	?__Umul8_16,w
  3168  00D5  00C6               	movwf	___flmul@temp
  3169  00D6                     l2184:
  3170  00D6  0846               	movf	___flmul@temp,w
  3171  00D7  00B6               	movwf	??___flmul
  3172  00D8  01B7               	clrf	??___flmul+1
  3173  00D9  01B8               	clrf	??___flmul+2
  3174  00DA  01B9               	clrf	??___flmul+3
  3175  00DB  0836               	movf	??___flmul,w
  3176  00DC  07BC               	addwf	___flmul@grs,f
  3177  00DD  0837               	movf	??___flmul+1,w
  3178  00DE  1103               	clrz
  3179  00DF  1803               	skipnc
  3180  00E0  3E01               	addlw	1
  3181  00E1  1903               	skipnz
  3182  00E2  28E4               	goto	u1751
  3183  00E3  07BD               	addwf	___flmul@grs+1,f
  3184  00E4                     u1751:
  3185  00E4  0838               	movf	??___flmul+2,w
  3186  00E5  1103               	clrz
  3187  00E6  1803               	skipnc
  3188  00E7  3E01               	addlw	1
  3189  00E8  1903               	skipnz
  3190  00E9  28EB               	goto	u1752
  3191  00EA  07BE               	addwf	___flmul@grs+2,f
  3192  00EB                     u1752:
  3193  00EB  0839               	movf	??___flmul+3,w
  3194  00EC  1103               	clrz
  3195  00ED  1803               	skipnc
  3196  00EE  3E01               	addlw	1
  3197  00EF  1903               	skipnz
  3198  00F0  28F2               	goto	u1753
  3199  00F1  07BF               	addwf	___flmul@grs+3,f
  3200  00F2                     u1753:
  3201  00F2                     l2186:
  3202  00F2  0847               	movf	___flmul@temp+1,w
  3203  00F3  00B6               	movwf	??___flmul
  3204  00F4  01B7               	clrf	??___flmul+1
  3205  00F5  01B8               	clrf	??___flmul+2
  3206  00F6  01B9               	clrf	??___flmul+3
  3207  00F7  0836               	movf	??___flmul,w
  3208  00F8  07C2               	addwf	___flmul@prod,f
  3209  00F9  0837               	movf	??___flmul+1,w
  3210  00FA  1103               	clrz
  3211  00FB  1803               	skipnc
  3212  00FC  3E01               	addlw	1
  3213  00FD  1903               	skipnz
  3214  00FE  2900               	goto	u1761
  3215  00FF  07C3               	addwf	___flmul@prod+1,f
  3216  0100                     u1761:
  3217  0100  0838               	movf	??___flmul+2,w
  3218  0101  1103               	clrz
  3219  0102  1803               	skipnc
  3220  0103  3E01               	addlw	1
  3221  0104  1903               	skipnz
  3222  0105  2907               	goto	u1762
  3223  0106  07C4               	addwf	___flmul@prod+2,f
  3224  0107                     u1762:
  3225  0107  0839               	movf	??___flmul+3,w
  3226  0108  1103               	clrz
  3227  0109  1803               	skipnc
  3228  010A  3E01               	addlw	1
  3229  010B  1903               	skipnz
  3230  010C  290E               	goto	u1763
  3231  010D  07C5               	addwf	___flmul@prod+3,f
  3232  010E                     u1763:
  3233  010E  0830               	movf	___flmul@b+2,w
  3234  010F  00B6               	movwf	??___flmul
  3235  0110  0836               	movf	??___flmul,w
  3236  0111  00A0               	movwf	__Umul8_16@multiplicand
  3237  0112  0832               	movf	___flmul@a,w
  3238  0113  120A  158A  24F1  120A  118A  	fcall	__Umul8_16
  3239  0118  1283               	bcf	3,5	;RP0=0, select bank0
  3240  0119  1303               	bcf	3,6	;RP1=0, select bank0
  3241  011A  0821               	movf	?__Umul8_16+1,w
  3242  011B  00C7               	movwf	___flmul@temp+1
  3243  011C  0820               	movf	?__Umul8_16,w
  3244  011D  00C6               	movwf	___flmul@temp
  3245  011E                     l2188:
  3246  011E  0846               	movf	___flmul@temp,w
  3247  011F  00B6               	movwf	??___flmul
  3248  0120  01B7               	clrf	??___flmul+1
  3249  0121  01B8               	clrf	??___flmul+2
  3250  0122  01B9               	clrf	??___flmul+3
  3251  0123  0836               	movf	??___flmul,w
  3252  0124  07BC               	addwf	___flmul@grs,f
  3253  0125  0837               	movf	??___flmul+1,w
  3254  0126  1103               	clrz
  3255  0127  1803               	skipnc
  3256  0128  3E01               	addlw	1
  3257  0129  1903               	skipnz
  3258  012A  292C               	goto	u1771
  3259  012B  07BD               	addwf	___flmul@grs+1,f
  3260  012C                     u1771:
  3261  012C  0838               	movf	??___flmul+2,w
  3262  012D  1103               	clrz
  3263  012E  1803               	skipnc
  3264  012F  3E01               	addlw	1
  3265  0130  1903               	skipnz
  3266  0131  2933               	goto	u1772
  3267  0132  07BE               	addwf	___flmul@grs+2,f
  3268  0133                     u1772:
  3269  0133  0839               	movf	??___flmul+3,w
  3270  0134  1103               	clrz
  3271  0135  1803               	skipnc
  3272  0136  3E01               	addlw	1
  3273  0137  1903               	skipnz
  3274  0138  293A               	goto	u1773
  3275  0139  07BF               	addwf	___flmul@grs+3,f
  3276  013A                     u1773:
  3277  013A                     l2190:
  3278  013A  0847               	movf	___flmul@temp+1,w
  3279  013B  00B6               	movwf	??___flmul
  3280  013C  01B7               	clrf	??___flmul+1
  3281  013D  01B8               	clrf	??___flmul+2
  3282  013E  01B9               	clrf	??___flmul+3
  3283  013F  0836               	movf	??___flmul,w
  3284  0140  07C2               	addwf	___flmul@prod,f
  3285  0141  0837               	movf	??___flmul+1,w
  3286  0142  1103               	clrz
  3287  0143  1803               	skipnc
  3288  0144  3E01               	addlw	1
  3289  0145  1903               	skipnz
  3290  0146  2948               	goto	u1781
  3291  0147  07C3               	addwf	___flmul@prod+1,f
  3292  0148                     u1781:
  3293  0148  0838               	movf	??___flmul+2,w
  3294  0149  1103               	clrz
  3295  014A  1803               	skipnc
  3296  014B  3E01               	addlw	1
  3297  014C  1903               	skipnz
  3298  014D  294F               	goto	u1782
  3299  014E  07C4               	addwf	___flmul@prod+2,f
  3300  014F                     u1782:
  3301  014F  0839               	movf	??___flmul+3,w
  3302  0150  1103               	clrz
  3303  0151  1803               	skipnc
  3304  0152  3E01               	addlw	1
  3305  0153  1903               	skipnz
  3306  0154  2956               	goto	u1783
  3307  0155  07C5               	addwf	___flmul@prod+3,f
  3308  0156                     u1783:
  3309  0156                     l2192:
  3310  0156  3008               	movlw	8
  3311  0157  00B6               	movwf	??___flmul
  3312  0158                     u1795:
  3313  0158  1003               	clrc
  3314  0159  0DBC               	rlf	___flmul@grs,f
  3315  015A  0DBD               	rlf	___flmul@grs+1,f
  3316  015B  0DBE               	rlf	___flmul@grs+2,f
  3317  015C  0DBF               	rlf	___flmul@grs+3,f
  3318  015D  0BB6               	decfsz	??___flmul,f
  3319  015E  2958               	goto	u1795
  3320  015F                     l2194:
  3321  015F  082F               	movf	___flmul@b+1,w
  3322  0160  00B6               	movwf	??___flmul
  3323  0161  0836               	movf	??___flmul,w
  3324  0162  00A0               	movwf	__Umul8_16@multiplicand
  3325  0163  0832               	movf	___flmul@a,w
  3326  0164  120A  158A  24F1  120A  118A  	fcall	__Umul8_16
  3327  0169  1283               	bcf	3,5	;RP0=0, select bank0
  3328  016A  1303               	bcf	3,6	;RP1=0, select bank0
  3329  016B  0821               	movf	?__Umul8_16+1,w
  3330  016C  00C7               	movwf	___flmul@temp+1
  3331  016D  0820               	movf	?__Umul8_16,w
  3332  016E  00C6               	movwf	___flmul@temp
  3333  016F                     l2196:
  3334  016F  0846               	movf	___flmul@temp,w
  3335  0170  00B6               	movwf	??___flmul
  3336  0171  0847               	movf	___flmul@temp+1,w
  3337  0172  00B7               	movwf	??___flmul+1
  3338  0173  01B8               	clrf	??___flmul+2
  3339  0174  01B9               	clrf	??___flmul+3
  3340  0175  0836               	movf	??___flmul,w
  3341  0176  07BC               	addwf	___flmul@grs,f
  3342  0177  0837               	movf	??___flmul+1,w
  3343  0178  1103               	clrz
  3344  0179  1803               	skipnc
  3345  017A  3E01               	addlw	1
  3346  017B  1903               	skipnz
  3347  017C  297E               	goto	u1801
  3348  017D  07BD               	addwf	___flmul@grs+1,f
  3349  017E                     u1801:
  3350  017E  0838               	movf	??___flmul+2,w
  3351  017F  1103               	clrz
  3352  0180  1803               	skipnc
  3353  0181  3E01               	addlw	1
  3354  0182  1903               	skipnz
  3355  0183  2985               	goto	u1802
  3356  0184  07BE               	addwf	___flmul@grs+2,f
  3357  0185                     u1802:
  3358  0185  0839               	movf	??___flmul+3,w
  3359  0186  1103               	clrz
  3360  0187  1803               	skipnc
  3361  0188  3E01               	addlw	1
  3362  0189  1903               	skipnz
  3363  018A  298C               	goto	u1803
  3364  018B  07BF               	addwf	___flmul@grs+3,f
  3365  018C                     u1803:
  3366  018C                     l2198:
  3367  018C  082E               	movf	___flmul@b,w
  3368  018D  00B6               	movwf	??___flmul
  3369  018E  0836               	movf	??___flmul,w
  3370  018F  00A0               	movwf	__Umul8_16@multiplicand
  3371  0190  0833               	movf	___flmul@a+1,w
  3372  0191  120A  158A  24F1  120A  118A  	fcall	__Umul8_16
  3373  0196  1283               	bcf	3,5	;RP0=0, select bank0
  3374  0197  1303               	bcf	3,6	;RP1=0, select bank0
  3375  0198  0821               	movf	?__Umul8_16+1,w
  3376  0199  00C7               	movwf	___flmul@temp+1
  3377  019A  0820               	movf	?__Umul8_16,w
  3378  019B  00C6               	movwf	___flmul@temp
  3379  019C                     l2200:
  3380  019C  0846               	movf	___flmul@temp,w
  3381  019D  00B6               	movwf	??___flmul
  3382  019E  0847               	movf	___flmul@temp+1,w
  3383  019F  00B7               	movwf	??___flmul+1
  3384  01A0  01B8               	clrf	??___flmul+2
  3385  01A1  01B9               	clrf	??___flmul+3
  3386  01A2  0836               	movf	??___flmul,w
  3387  01A3  07BC               	addwf	___flmul@grs,f
  3388  01A4  0837               	movf	??___flmul+1,w
  3389  01A5  1103               	clrz
  3390  01A6  1803               	skipnc
  3391  01A7  3E01               	addlw	1
  3392  01A8  1903               	skipnz
  3393  01A9  29AB               	goto	u1811
  3394  01AA  07BD               	addwf	___flmul@grs+1,f
  3395  01AB                     u1811:
  3396  01AB  0838               	movf	??___flmul+2,w
  3397  01AC  1103               	clrz
  3398  01AD  1803               	skipnc
  3399  01AE  3E01               	addlw	1
  3400  01AF  1903               	skipnz
  3401  01B0  29B2               	goto	u1812
  3402  01B1  07BE               	addwf	___flmul@grs+2,f
  3403  01B2                     u1812:
  3404  01B2  0839               	movf	??___flmul+3,w
  3405  01B3  1103               	clrz
  3406  01B4  1803               	skipnc
  3407  01B5  3E01               	addlw	1
  3408  01B6  1903               	skipnz
  3409  01B7  29B9               	goto	u1813
  3410  01B8  07BF               	addwf	___flmul@grs+3,f
  3411  01B9                     u1813:
  3412  01B9                     l2202:
  3413  01B9  3008               	movlw	8
  3414  01BA  00B6               	movwf	??___flmul
  3415  01BB                     u1825:
  3416  01BB  1003               	clrc
  3417  01BC  0DBC               	rlf	___flmul@grs,f
  3418  01BD  0DBD               	rlf	___flmul@grs+1,f
  3419  01BE  0DBE               	rlf	___flmul@grs+2,f
  3420  01BF  0DBF               	rlf	___flmul@grs+3,f
  3421  01C0  0BB6               	decfsz	??___flmul,f
  3422  01C1  29BB               	goto	u1825
  3423  01C2  082E               	movf	___flmul@b,w
  3424  01C3  00B6               	movwf	??___flmul
  3425  01C4  0836               	movf	??___flmul,w
  3426  01C5  00A0               	movwf	__Umul8_16@multiplicand
  3427  01C6  0832               	movf	___flmul@a,w
  3428  01C7  120A  158A  24F1  120A  118A  	fcall	__Umul8_16
  3429  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  3430  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  3431  01CE  0821               	movf	?__Umul8_16+1,w
  3432  01CF  00C7               	movwf	___flmul@temp+1
  3433  01D0  0820               	movf	?__Umul8_16,w
  3434  01D1  00C6               	movwf	___flmul@temp
  3435  01D2                     l2204:
  3436  01D2  0846               	movf	___flmul@temp,w
  3437  01D3  00B6               	movwf	??___flmul
  3438  01D4  0847               	movf	___flmul@temp+1,w
  3439  01D5  00B7               	movwf	??___flmul+1
  3440  01D6  01B8               	clrf	??___flmul+2
  3441  01D7  01B9               	clrf	??___flmul+3
  3442  01D8  0836               	movf	??___flmul,w
  3443  01D9  07BC               	addwf	___flmul@grs,f
  3444  01DA  0837               	movf	??___flmul+1,w
  3445  01DB  1103               	clrz
  3446  01DC  1803               	skipnc
  3447  01DD  3E01               	addlw	1
  3448  01DE  1903               	skipnz
  3449  01DF  29E1               	goto	u1831
  3450  01E0  07BD               	addwf	___flmul@grs+1,f
  3451  01E1                     u1831:
  3452  01E1  0838               	movf	??___flmul+2,w
  3453  01E2  1103               	clrz
  3454  01E3  1803               	skipnc
  3455  01E4  3E01               	addlw	1
  3456  01E5  1903               	skipnz
  3457  01E6  29E8               	goto	u1832
  3458  01E7  07BE               	addwf	___flmul@grs+2,f
  3459  01E8                     u1832:
  3460  01E8  0839               	movf	??___flmul+3,w
  3461  01E9  1103               	clrz
  3462  01EA  1803               	skipnc
  3463  01EB  3E01               	addlw	1
  3464  01EC  1903               	skipnz
  3465  01ED  29EF               	goto	u1833
  3466  01EE  07BF               	addwf	___flmul@grs+3,f
  3467  01EF                     u1833:
  3468  01EF                     l2206:
  3469  01EF  082F               	movf	___flmul@b+1,w
  3470  01F0  00B6               	movwf	??___flmul
  3471  01F1  0836               	movf	??___flmul,w
  3472  01F2  00A0               	movwf	__Umul8_16@multiplicand
  3473  01F3  0834               	movf	___flmul@a+2,w
  3474  01F4  120A  158A  24F1  120A  118A  	fcall	__Umul8_16
  3475  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  3476  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  3477  01FB  0821               	movf	?__Umul8_16+1,w
  3478  01FC  00C7               	movwf	___flmul@temp+1
  3479  01FD  0820               	movf	?__Umul8_16,w
  3480  01FE  00C6               	movwf	___flmul@temp
  3481  01FF  0846               	movf	___flmul@temp,w
  3482  0200  00B6               	movwf	??___flmul
  3483  0201  0847               	movf	___flmul@temp+1,w
  3484  0202  00B7               	movwf	??___flmul+1
  3485  0203  01B8               	clrf	??___flmul+2
  3486  0204  01B9               	clrf	??___flmul+3
  3487  0205  0836               	movf	??___flmul,w
  3488  0206  07C2               	addwf	___flmul@prod,f
  3489  0207  0837               	movf	??___flmul+1,w
  3490  0208  1103               	clrz
  3491  0209  1803               	skipnc
  3492  020A  3E01               	addlw	1
  3493  020B  1903               	skipnz
  3494  020C  2A0E               	goto	u1841
  3495  020D  07C3               	addwf	___flmul@prod+1,f
  3496  020E                     u1841:
  3497  020E  0838               	movf	??___flmul+2,w
  3498  020F  1103               	clrz
  3499  0210  1803               	skipnc
  3500  0211  3E01               	addlw	1
  3501  0212  1903               	skipnz
  3502  0213  2A15               	goto	u1842
  3503  0214  07C4               	addwf	___flmul@prod+2,f
  3504  0215                     u1842:
  3505  0215  0839               	movf	??___flmul+3,w
  3506  0216  1103               	clrz
  3507  0217  1803               	skipnc
  3508  0218  3E01               	addlw	1
  3509  0219  1903               	skipnz
  3510  021A  2A1C               	goto	u1843
  3511  021B  07C5               	addwf	___flmul@prod+3,f
  3512  021C                     u1843:
  3513  021C                     l2208:
  3514  021C  0830               	movf	___flmul@b+2,w
  3515  021D  00B6               	movwf	??___flmul
  3516  021E  0836               	movf	??___flmul,w
  3517  021F  00A0               	movwf	__Umul8_16@multiplicand
  3518  0220  0833               	movf	___flmul@a+1,w
  3519  0221  120A  158A  24F1  120A  118A  	fcall	__Umul8_16
  3520  0226  1283               	bcf	3,5	;RP0=0, select bank0
  3521  0227  1303               	bcf	3,6	;RP1=0, select bank0
  3522  0228  0821               	movf	?__Umul8_16+1,w
  3523  0229  00C7               	movwf	___flmul@temp+1
  3524  022A  0820               	movf	?__Umul8_16,w
  3525  022B  00C6               	movwf	___flmul@temp
  3526  022C                     l2210:
  3527  022C  0846               	movf	___flmul@temp,w
  3528  022D  00B6               	movwf	??___flmul
  3529  022E  0847               	movf	___flmul@temp+1,w
  3530  022F  00B7               	movwf	??___flmul+1
  3531  0230  01B8               	clrf	??___flmul+2
  3532  0231  01B9               	clrf	??___flmul+3
  3533  0232  0836               	movf	??___flmul,w
  3534  0233  07C2               	addwf	___flmul@prod,f
  3535  0234  0837               	movf	??___flmul+1,w
  3536  0235  1103               	clrz
  3537  0236  1803               	skipnc
  3538  0237  3E01               	addlw	1
  3539  0238  1903               	skipnz
  3540  0239  2A3B               	goto	u1851
  3541  023A  07C3               	addwf	___flmul@prod+1,f
  3542  023B                     u1851:
  3543  023B  0838               	movf	??___flmul+2,w
  3544  023C  1103               	clrz
  3545  023D  1803               	skipnc
  3546  023E  3E01               	addlw	1
  3547  023F  1903               	skipnz
  3548  0240  2A42               	goto	u1852
  3549  0241  07C4               	addwf	___flmul@prod+2,f
  3550  0242                     u1852:
  3551  0242  0839               	movf	??___flmul+3,w
  3552  0243  1103               	clrz
  3553  0244  1803               	skipnc
  3554  0245  3E01               	addlw	1
  3555  0246  1903               	skipnz
  3556  0247  2A49               	goto	u1853
  3557  0248  07C5               	addwf	___flmul@prod+3,f
  3558  0249                     u1853:
  3559  0249  0830               	movf	___flmul@b+2,w
  3560  024A  00B6               	movwf	??___flmul
  3561  024B  0836               	movf	??___flmul,w
  3562  024C  00A0               	movwf	__Umul8_16@multiplicand
  3563  024D  0834               	movf	___flmul@a+2,w
  3564  024E  120A  158A  24F1  120A  118A  	fcall	__Umul8_16
  3565  0253  1283               	bcf	3,5	;RP0=0, select bank0
  3566  0254  1303               	bcf	3,6	;RP1=0, select bank0
  3567  0255  0821               	movf	?__Umul8_16+1,w
  3568  0256  00C7               	movwf	___flmul@temp+1
  3569  0257  0820               	movf	?__Umul8_16,w
  3570  0258  00C6               	movwf	___flmul@temp
  3571  0259                     l2212:
  3572  0259  0846               	movf	___flmul@temp,w
  3573  025A  00B6               	movwf	??___flmul
  3574  025B  0847               	movf	___flmul@temp+1,w
  3575  025C  00B7               	movwf	??___flmul+1
  3576  025D  01B8               	clrf	??___flmul+2
  3577  025E  01B9               	clrf	??___flmul+3
  3578  025F  3008               	movlw	8
  3579  0260                     u1865:
  3580  0260  1003               	clrc
  3581  0261  0DB6               	rlf	??___flmul,f
  3582  0262  0DB7               	rlf	??___flmul+1,f
  3583  0263  0DB8               	rlf	??___flmul+2,f
  3584  0264  0DB9               	rlf	??___flmul+3,f
  3585  0265                     u1860:
  3586  0265  3EFF               	addlw	-1
  3587  0266  1D03               	skipz
  3588  0267  2A60               	goto	u1865
  3589  0268  0836               	movf	??___flmul,w
  3590  0269  07C2               	addwf	___flmul@prod,f
  3591  026A  0837               	movf	??___flmul+1,w
  3592  026B  1103               	clrz
  3593  026C  1803               	skipnc
  3594  026D  3E01               	addlw	1
  3595  026E  1903               	skipnz
  3596  026F  2A71               	goto	u1871
  3597  0270  07C3               	addwf	___flmul@prod+1,f
  3598  0271                     u1871:
  3599  0271  0838               	movf	??___flmul+2,w
  3600  0272  1103               	clrz
  3601  0273  1803               	skipnc
  3602  0274  3E01               	addlw	1
  3603  0275  1903               	skipnz
  3604  0276  2A78               	goto	u1872
  3605  0277  07C4               	addwf	___flmul@prod+2,f
  3606  0278                     u1872:
  3607  0278  0839               	movf	??___flmul+3,w
  3608  0279  1103               	clrz
  3609  027A  1803               	skipnc
  3610  027B  3E01               	addlw	1
  3611  027C  1903               	skipnz
  3612  027D  2A7F               	goto	u1873
  3613  027E  07C5               	addwf	___flmul@prod+3,f
  3614  027F                     u1873:
  3615  027F                     l2214:
  3616  027F  083C               	movf	___flmul@grs,w
  3617  0280  00B6               	movwf	??___flmul
  3618  0281  083D               	movf	___flmul@grs+1,w
  3619  0282  00B7               	movwf	??___flmul+1
  3620  0283  083E               	movf	___flmul@grs+2,w
  3621  0284  00B8               	movwf	??___flmul+2
  3622  0285  083F               	movf	___flmul@grs+3,w
  3623  0286  00B9               	movwf	??___flmul+3
  3624  0287  3018               	movlw	24
  3625  0288                     u1885:
  3626  0288  1003               	clrc
  3627  0289  0CB9               	rrf	??___flmul+3,f
  3628  028A  0CB8               	rrf	??___flmul+2,f
  3629  028B  0CB7               	rrf	??___flmul+1,f
  3630  028C  0CB6               	rrf	??___flmul,f
  3631  028D                     u1880:
  3632  028D  3EFF               	addlw	-1
  3633  028E  1D03               	skipz
  3634  028F  2A88               	goto	u1885
  3635  0290  0836               	movf	??___flmul,w
  3636  0291  07C2               	addwf	___flmul@prod,f
  3637  0292  0837               	movf	??___flmul+1,w
  3638  0293  1103               	clrz
  3639  0294  1803               	skipnc
  3640  0295  3E01               	addlw	1
  3641  0296  1903               	skipnz
  3642  0297  2A99               	goto	u1891
  3643  0298  07C3               	addwf	___flmul@prod+1,f
  3644  0299                     u1891:
  3645  0299  0838               	movf	??___flmul+2,w
  3646  029A  1103               	clrz
  3647  029B  1803               	skipnc
  3648  029C  3E01               	addlw	1
  3649  029D  1903               	skipnz
  3650  029E  2AA0               	goto	u1892
  3651  029F  07C4               	addwf	___flmul@prod+2,f
  3652  02A0                     u1892:
  3653  02A0  0839               	movf	??___flmul+3,w
  3654  02A1  1103               	clrz
  3655  02A2  1803               	skipnc
  3656  02A3  3E01               	addlw	1
  3657  02A4  1903               	skipnz
  3658  02A5  2AA7               	goto	u1893
  3659  02A6  07C5               	addwf	___flmul@prod+3,f
  3660  02A7                     u1893:
  3661  02A7                     l2216:
  3662  02A7  3008               	movlw	8
  3663  02A8  00B6               	movwf	??___flmul
  3664  02A9                     u1905:
  3665  02A9  1003               	clrc
  3666  02AA  0DBC               	rlf	___flmul@grs,f
  3667  02AB  0DBD               	rlf	___flmul@grs+1,f
  3668  02AC  0DBE               	rlf	___flmul@grs+2,f
  3669  02AD  0DBF               	rlf	___flmul@grs+3,f
  3670  02AE  0BB6               	decfsz	??___flmul,f
  3671  02AF  2AA9               	goto	u1905
  3672  02B0                     l2218:
  3673  02B0  0841               	movf	___flmul@bexp,w
  3674  02B1  0740               	addwf	___flmul@aexp,w
  3675  02B2  00B6               	movwf	??___flmul
  3676  02B3  01B7               	clrf	??___flmul+1
  3677  02B4  0DB7               	rlf	??___flmul+1,f
  3678  02B5  0836               	movf	??___flmul,w
  3679  02B6  3E82               	addlw	130
  3680  02B7  00C6               	movwf	___flmul@temp
  3681  02B8  0837               	movf	??___flmul+1,w
  3682  02B9  1803               	skipnc
  3683  02BA  3E01               	addlw	1
  3684  02BB  3EFF               	addlw	255
  3685  02BC  00C7               	movwf	___flmul@temp+1
  3686  02BD  2ADB               	goto	l2230
  3687  02BE                     l2220:
  3688  02BE  3001               	movlw	1
  3689  02BF  00B6               	movwf	??___flmul
  3690  02C0                     u1915:
  3691  02C0  1003               	clrc
  3692  02C1  0DC2               	rlf	___flmul@prod,f
  3693  02C2  0DC3               	rlf	___flmul@prod+1,f
  3694  02C3  0DC4               	rlf	___flmul@prod+2,f
  3695  02C4  0DC5               	rlf	___flmul@prod+3,f
  3696  02C5  0BB6               	decfsz	??___flmul,f
  3697  02C6  2AC0               	goto	u1915
  3698  02C7                     l2222:
  3699  02C7  1FBF               	btfss	___flmul@grs+3,7
  3700  02C8  2ACA               	goto	u1921
  3701  02C9  2ACB               	goto	u1920
  3702  02CA                     u1921:
  3703  02CA  2ACC               	goto	l2226
  3704  02CB                     u1920:
  3705  02CB                     l2224:
  3706  02CB  1442               	bsf	___flmul@prod,0
  3707  02CC                     l2226:
  3708  02CC  3001               	movlw	1
  3709  02CD  00B6               	movwf	??___flmul
  3710  02CE                     u1935:
  3711  02CE  1003               	clrc
  3712  02CF  0DBC               	rlf	___flmul@grs,f
  3713  02D0  0DBD               	rlf	___flmul@grs+1,f
  3714  02D1  0DBE               	rlf	___flmul@grs+2,f
  3715  02D2  0DBF               	rlf	___flmul@grs+3,f
  3716  02D3  0BB6               	decfsz	??___flmul,f
  3717  02D4  2ACE               	goto	u1935
  3718  02D5                     l2228:
  3719  02D5  30FF               	movlw	255
  3720  02D6  07C6               	addwf	___flmul@temp,f
  3721  02D7  1803               	skipnc
  3722  02D8  0AC7               	incf	___flmul@temp+1,f
  3723  02D9  30FF               	movlw	255
  3724  02DA  07C7               	addwf	___flmul@temp+1,f
  3725  02DB                     l2230:
  3726  02DB  1FC4               	btfss	___flmul@prod+2,7
  3727  02DC  2ADE               	goto	u1941
  3728  02DD  2ADF               	goto	u1940
  3729  02DE                     u1941:
  3730  02DE  2ABE               	goto	l2220
  3731  02DF                     u1940:
  3732  02DF                     l2232:
  3733  02DF  01C0               	clrf	___flmul@aexp
  3734  02E0                     l2234:
  3735  02E0  1FBF               	btfss	___flmul@grs+3,7
  3736  02E1  2AE3               	goto	u1951
  3737  02E2  2AE4               	goto	u1950
  3738  02E3                     u1951:
  3739  02E3  2B00               	goto	l2242
  3740  02E4                     u1950:
  3741  02E4                     l2236:
  3742  02E4  30FF               	movlw	255
  3743  02E5  053C               	andwf	___flmul@grs,w
  3744  02E6  00B6               	movwf	??___flmul
  3745  02E7  30FF               	movlw	255
  3746  02E8  053D               	andwf	___flmul@grs+1,w
  3747  02E9  00B7               	movwf	??___flmul+1
  3748  02EA  30FF               	movlw	255
  3749  02EB  053E               	andwf	___flmul@grs+2,w
  3750  02EC  00B8               	movwf	??___flmul+2
  3751  02ED  307F               	movlw	127
  3752  02EE  053F               	andwf	___flmul@grs+3,w
  3753  02EF  00B9               	movwf	??___flmul+3
  3754  02F0  0839               	movf	??___flmul+3,w
  3755  02F1  0438               	iorwf	??___flmul+2,w
  3756  02F2  0437               	iorwf	??___flmul+1,w
  3757  02F3  0436               	iorwf	??___flmul,w
  3758  02F4  1903               	skipnz
  3759  02F5  2AF7               	goto	u1961
  3760  02F6  2AF8               	goto	u1960
  3761  02F7                     u1961:
  3762  02F7  2AFB               	goto	l843
  3763  02F8                     u1960:
  3764  02F8                     l2238:
  3765  02F8  01C0               	clrf	___flmul@aexp
  3766  02F9  0AC0               	incf	___flmul@aexp,f
  3767  02FA  2B00               	goto	l2242
  3768  02FB                     l843:
  3769  02FB  1C42               	btfss	___flmul@prod,0
  3770  02FC  2AFE               	goto	u1971
  3771  02FD  2AFF               	goto	u1970
  3772  02FE                     u1971:
  3773  02FE  2B00               	goto	l2242
  3774  02FF                     u1970:
  3775  02FF  2AF8               	goto	l2238
  3776  0300                     l2242:
  3777  0300  0840               	movf	___flmul@aexp,w
  3778  0301  1903               	btfsc	3,2
  3779  0302  2B04               	goto	u1981
  3780  0303  2B05               	goto	u1980
  3781  0304                     u1981:
  3782  0304  2B36               	goto	l2252
  3783  0305                     u1980:
  3784  0305                     l2244:
  3785  0305  3001               	movlw	1
  3786  0306  07C2               	addwf	___flmul@prod,f
  3787  0307  3000               	movlw	0
  3788  0308  1803               	skipnc
  3789  0309  3001               	movlw	1
  3790  030A  07C3               	addwf	___flmul@prod+1,f
  3791  030B  3000               	movlw	0
  3792  030C  1803               	skipnc
  3793  030D  3001               	movlw	1
  3794  030E  07C4               	addwf	___flmul@prod+2,f
  3795  030F  3000               	movlw	0
  3796  0310  1803               	skipnc
  3797  0311  3001               	movlw	1
  3798  0312  07C5               	addwf	___flmul@prod+3,f
  3799  0313                     l2246:
  3800  0313  1C45               	btfss	___flmul@prod+3,0
  3801  0314  2B16               	goto	u1991
  3802  0315  2B17               	goto	u1990
  3803  0316                     u1991:
  3804  0316  2B36               	goto	l2252
  3805  0317                     u1990:
  3806  0317                     l2248:
  3807  0317  0842               	movf	___flmul@prod,w
  3808  0318  00B6               	movwf	??___flmul
  3809  0319  0843               	movf	___flmul@prod+1,w
  3810  031A  00B7               	movwf	??___flmul+1
  3811  031B  0844               	movf	___flmul@prod+2,w
  3812  031C  00B8               	movwf	??___flmul+2
  3813  031D  0845               	movf	___flmul@prod+3,w
  3814  031E  00B9               	movwf	??___flmul+3
  3815  031F  3001               	movlw	1
  3816  0320  00BA               	movwf	??___flmul+4
  3817  0321                     u2005:
  3818  0321  0D39               	rlf	??___flmul+3,w
  3819  0322  0CB9               	rrf	??___flmul+3,f
  3820  0323  0CB8               	rrf	??___flmul+2,f
  3821  0324  0CB7               	rrf	??___flmul+1,f
  3822  0325  0CB6               	rrf	??___flmul,f
  3823  0326                     u2000:
  3824  0326  0BBA               	decfsz	??___flmul+4,f
  3825  0327  2B21               	goto	u2005
  3826  0328  0839               	movf	??___flmul+3,w
  3827  0329  00C5               	movwf	___flmul@prod+3
  3828  032A  0838               	movf	??___flmul+2,w
  3829  032B  00C4               	movwf	___flmul@prod+2
  3830  032C  0837               	movf	??___flmul+1,w
  3831  032D  00C3               	movwf	___flmul@prod+1
  3832  032E  0836               	movf	??___flmul,w
  3833  032F  00C2               	movwf	___flmul@prod
  3834  0330                     l2250:
  3835  0330  3001               	movlw	1
  3836  0331  07C6               	addwf	___flmul@temp,f
  3837  0332  1803               	skipnc
  3838  0333  0AC7               	incf	___flmul@temp+1,f
  3839  0334  3000               	movlw	0
  3840  0335  07C7               	addwf	___flmul@temp+1,f
  3841  0336                     l2252:
  3842  0336  0847               	movf	___flmul@temp+1,w
  3843  0337  3A80               	xorlw	128
  3844  0338  00FF               	movwf	btemp+1
  3845  0339  3080               	movlw	128
  3846  033A  027F               	subwf	btemp+1,w
  3847  033B  1D03               	skipz
  3848  033C  2B3F               	goto	u2015
  3849  033D  30FF               	movlw	255
  3850  033E  0246               	subwf	___flmul@temp,w
  3851  033F                     u2015:
  3852  033F  1C03               	skipc
  3853  0340  2B42               	goto	u2011
  3854  0341  2B43               	goto	u2010
  3855  0342                     u2011:
  3856  0342  2B4E               	goto	l2256
  3857  0343                     u2010:
  3858  0343                     l2254:
  3859  0343  307F               	movlw	127
  3860  0344  1283               	bcf	3,5	;RP0=0, select bank0
  3861  0345  1303               	bcf	3,6	;RP1=0, select bank0
  3862  0346  00C5               	movwf	___flmul@prod+3
  3863  0347  3080               	movlw	128
  3864  0348  00C4               	movwf	___flmul@prod+2
  3865  0349  3000               	movlw	0
  3866  034A  00C3               	movwf	___flmul@prod+1
  3867  034B  3000               	movlw	0
  3868  034C  00C2               	movwf	___flmul@prod
  3869  034D  2B83               	goto	l849
  3870  034E                     l2256:
  3871  034E  1283               	bcf	3,5	;RP0=0, select bank0
  3872  034F  1303               	bcf	3,6	;RP1=0, select bank0
  3873  0350  0847               	movf	___flmul@temp+1,w
  3874  0351  3A80               	xorlw	128
  3875  0352  00FF               	movwf	btemp+1
  3876  0353  3080               	movlw	128
  3877  0354  027F               	subwf	btemp+1,w
  3878  0355  1D03               	skipz
  3879  0356  2B59               	goto	u2025
  3880  0357  3001               	movlw	1
  3881  0358  0246               	subwf	___flmul@temp,w
  3882  0359                     u2025:
  3883  0359  1803               	skipnc
  3884  035A  2B5C               	goto	u2021
  3885  035B  2B5D               	goto	u2020
  3886  035C                     u2021:
  3887  035C  2B69               	goto	l2262
  3888  035D                     u2020:
  3889  035D                     l2258:
  3890  035D  3000               	movlw	0
  3891  035E  1283               	bcf	3,5	;RP0=0, select bank0
  3892  035F  1303               	bcf	3,6	;RP1=0, select bank0
  3893  0360  00C5               	movwf	___flmul@prod+3
  3894  0361  3000               	movlw	0
  3895  0362  00C4               	movwf	___flmul@prod+2
  3896  0363  3000               	movlw	0
  3897  0364  00C3               	movwf	___flmul@prod+1
  3898  0365  3000               	movlw	0
  3899  0366  00C2               	movwf	___flmul@prod
  3900  0367                     l2260:
  3901  0367  01BB               	clrf	___flmul@sign
  3902  0368  2B83               	goto	l849
  3903  0369                     l2262:
  3904  0369  1283               	bcf	3,5	;RP0=0, select bank0
  3905  036A  1303               	bcf	3,6	;RP1=0, select bank0
  3906  036B  0846               	movf	___flmul@temp,w
  3907  036C  00B6               	movwf	??___flmul
  3908  036D  0836               	movf	??___flmul,w
  3909  036E  00C1               	movwf	___flmul@bexp
  3910  036F  30FF               	movlw	255
  3911  0370  05C2               	andwf	___flmul@prod,f
  3912  0371  30FF               	movlw	255
  3913  0372  05C3               	andwf	___flmul@prod+1,f
  3914  0373  307F               	movlw	127
  3915  0374  05C4               	andwf	___flmul@prod+2,f
  3916  0375  3000               	movlw	0
  3917  0376  05C5               	andwf	___flmul@prod+3,f
  3918  0377                     l2264:
  3919  0377  1C41               	btfss	___flmul@bexp,0
  3920  0378  2B7A               	goto	u2031
  3921  0379  2B7B               	goto	u2030
  3922  037A                     u2031:
  3923  037A  2B7C               	goto	l2268
  3924  037B                     u2030:
  3925  037B                     l2266:
  3926  037B  17C4               	bsf	___flmul@prod+2,7
  3927  037C                     l2268:
  3928  037C  0841               	movf	___flmul@bexp,w
  3929  037D  00B6               	movwf	??___flmul
  3930  037E  1003               	clrc
  3931  037F  0C36               	rrf	??___flmul,w
  3932  0380  00B7               	movwf	??___flmul+1
  3933  0381  0837               	movf	??___flmul+1,w
  3934  0382  00C5               	movwf	___flmul@prod+3
  3935  0383                     l849:
  3936  0383  083B               	movf	___flmul@sign,w
  3937  0384  00B6               	movwf	??___flmul
  3938  0385  0836               	movf	??___flmul,w
  3939  0386  04C5               	iorwf	___flmul@prod+3,f
  3940  0387                     l2270:
  3941  0387  0845               	movf	___flmul@prod+3,w
  3942  0388  00B1               	movwf	?___flmul+3
  3943  0389  0844               	movf	___flmul@prod+2,w
  3944  038A  00B0               	movwf	?___flmul+2
  3945  038B  0843               	movf	___flmul@prod+1,w
  3946  038C  00AF               	movwf	?___flmul+1
  3947  038D  0842               	movf	___flmul@prod,w
  3948  038E  00AE               	movwf	?___flmul
  3949  038F                     l837:
  3950  038F  0008               	return
  3951  0390                     __end_of___flmul:
  3952                           
  3953                           	psect	text9
  3954  0CF1                     __ptext9:	
  3955 ;; *************** function __Umul8_16 *****************
  3956 ;; Defined at:
  3957 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;  multiplier      1    wreg     unsigned char 
  3960 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  3961 ;; Auto vars:     Size  Location     Type
  3962 ;;  multiplier      1    8[BANK0 ] unsigned char 
  3963 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  3964 ;;  product         2    4[BANK0 ] unsigned int 
  3965 ;; Return value:  Size  Location     Type
  3966 ;;                  2    0[BANK0 ] unsigned int 
  3967 ;; Registers used:
  3968 ;;		wreg, status,2, status,0
  3969 ;; Tracked objects:
  3970 ;;		On entry : 0/0
  3971 ;;		On exit  : 0/0
  3972 ;;		Unchanged: 0/0
  3973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3974 ;;      Params:         0       2       0       0       0
  3975 ;;      Locals:         0       5       0       0       0
  3976 ;;      Temps:          0       2       0       0       0
  3977 ;;      Totals:         0       9       0       0       0
  3978 ;;Total ram usage:        9 bytes
  3979 ;; Hardware stack levels used:    1
  3980 ;; Hardware stack levels required when called:    2
  3981 ;; This function calls:
  3982 ;;		Nothing
  3983 ;; This function is called by:
  3984 ;;		___flmul
  3985 ;; This function uses a non-reentrant model
  3986 ;;
  3987                           
  3988                           
  3989                           ;psect for function __Umul8_16
  3990  0CF1                     __Umul8_16:
  3991                           
  3992                           ;incstack = 0
  3993                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3994                           ;__Umul8_16@multiplier stored from wreg
  3995  0CF1  1283               	bcf	3,5	;RP0=0, select bank0
  3996  0CF2  1303               	bcf	3,6	;RP1=0, select bank0
  3997  0CF3  00A8               	movwf	__Umul8_16@multiplier
  3998  0CF4                     l1912:
  3999  0CF4  01A4               	clrf	__Umul8_16@product
  4000  0CF5  01A5               	clrf	__Umul8_16@product+1
  4001  0CF6                     l1914:
  4002  0CF6  0820               	movf	__Umul8_16@multiplicand,w
  4003  0CF7  00A2               	movwf	??__Umul8_16
  4004  0CF8  01A3               	clrf	??__Umul8_16+1
  4005  0CF9  0822               	movf	??__Umul8_16,w
  4006  0CFA  00A6               	movwf	__Umul8_16@word_mpld
  4007  0CFB  0823               	movf	??__Umul8_16+1,w
  4008  0CFC  00A7               	movwf	__Umul8_16@word_mpld+1
  4009  0CFD                     l1916:
  4010  0CFD  1C28               	btfss	__Umul8_16@multiplier,0
  4011  0CFE  2D00               	goto	u1441
  4012  0CFF  2D01               	goto	u1440
  4013  0D00                     u1441:
  4014  0D00  2D07               	goto	l856
  4015  0D01                     u1440:
  4016  0D01                     l1918:
  4017  0D01  0826               	movf	__Umul8_16@word_mpld,w
  4018  0D02  07A4               	addwf	__Umul8_16@product,f
  4019  0D03  1803               	skipnc
  4020  0D04  0AA5               	incf	__Umul8_16@product+1,f
  4021  0D05  0827               	movf	__Umul8_16@word_mpld+1,w
  4022  0D06  07A5               	addwf	__Umul8_16@product+1,f
  4023  0D07                     l856:
  4024  0D07  3001               	movlw	1
  4025  0D08                     u1455:
  4026  0D08  1003               	clrc
  4027  0D09  0DA6               	rlf	__Umul8_16@word_mpld,f
  4028  0D0A  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  4029  0D0B  3EFF               	addlw	-1
  4030  0D0C  1D03               	skipz
  4031  0D0D  2D08               	goto	u1455
  4032  0D0E  1003               	clrc
  4033  0D0F  0CA8               	rrf	__Umul8_16@multiplier,f
  4034  0D10                     l1920:
  4035  0D10  0828               	movf	__Umul8_16@multiplier,w
  4036  0D11  1D03               	btfss	3,2
  4037  0D12  2D14               	goto	u1461
  4038  0D13  2D15               	goto	u1460
  4039  0D14                     u1461:
  4040  0D14  2CFD               	goto	l1916
  4041  0D15                     u1460:
  4042  0D15                     l1922:
  4043  0D15  0825               	movf	__Umul8_16@product+1,w
  4044  0D16  00A1               	movwf	?__Umul8_16+1
  4045  0D17  0824               	movf	__Umul8_16@product,w
  4046  0D18  00A0               	movwf	?__Umul8_16
  4047  0D19                     l858:
  4048  0D19  0008               	return
  4049  0D1A                     __end_of__Umul8_16:
  4050                           
  4051                           	psect	text10
  4052  0F10                     __ptext10:	
  4053 ;; *************** function _VAL *****************
  4054 ;; Defined at:
  4055 ;;		line 414 in file "master_main.c"
  4056 ;; Parameters:    Size  Location     Type
  4057 ;;  variable        2    8[BANK0 ] unsigned int 
  4058 ;; Auto vars:     Size  Location     Type
  4059 ;;  valor           2   12[BANK0 ] unsigned int 
  4060 ;; Return value:  Size  Location     Type
  4061 ;;                  1    wreg      void 
  4062 ;; Registers used:
  4063 ;;		wreg, status,2, status,0, pclath, cstack
  4064 ;; Tracked objects:
  4065 ;;		On entry : 0/0
  4066 ;;		On exit  : 0/0
  4067 ;;		Unchanged: 0/0
  4068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4069 ;;      Params:         0       2       0       0       0
  4070 ;;      Locals:         0       2       0       0       0
  4071 ;;      Temps:          0       2       0       0       0
  4072 ;;      Totals:         0       6       0       0       0
  4073 ;;Total ram usage:        6 bytes
  4074 ;; Hardware stack levels used:    1
  4075 ;; Hardware stack levels required when called:    3
  4076 ;; This function calls:
  4077 ;;		___lwdiv
  4078 ;;		___wmul
  4079 ;; This function is called by:
  4080 ;;		_main
  4081 ;; This function uses a non-reentrant model
  4082 ;;
  4083                           
  4084                           
  4085                           ;psect for function _VAL
  4086  0F10                     _VAL:
  4087  0F10                     l2068:	
  4088                           ;incstack = 0
  4089                           ; Regs used in _VAL: [wreg+status,2+status,0+pclath+cstack]
  4090                           
  4091  0F10  1283               	bcf	3,5	;RP0=0, select bank0
  4092  0F11  1303               	bcf	3,6	;RP1=0, select bank0
  4093  0F12  0829               	movf	VAL@variable+1,w
  4094  0F13  00AD               	movwf	VAL@valor+1
  4095  0F14  0828               	movf	VAL@variable,w
  4096  0F15  00AC               	movwf	VAL@valor
  4097  0F16                     l2070:
  4098  0F16  3064               	movlw	100
  4099  0F17  00A0               	movwf	___lwdiv@divisor
  4100  0F18  3000               	movlw	0
  4101  0F19  00A1               	movwf	___lwdiv@divisor+1
  4102  0F1A  082D               	movf	VAL@valor+1,w
  4103  0F1B  00A3               	movwf	___lwdiv@dividend+1
  4104  0F1C  082C               	movf	VAL@valor,w
  4105  0F1D  00A2               	movwf	___lwdiv@dividend
  4106  0F1E  120A  158A  2554  120A  158A  	fcall	___lwdiv
  4107  0F23  1283               	bcf	3,5	;RP0=0, select bank0
  4108  0F24  1303               	bcf	3,6	;RP1=0, select bank0
  4109  0F25  0820               	movf	?___lwdiv,w
  4110  0F26  00AA               	movwf	??_VAL
  4111  0F27  082A               	movf	??_VAL,w
  4112  0F28  00EE               	movwf	_POS1
  4113  0F29                     l2072:
  4114  0F29  086E               	movf	_POS1,w
  4115  0F2A  00AA               	movwf	??_VAL
  4116  0F2B  01AB               	clrf	??_VAL+1
  4117  0F2C  082A               	movf	??_VAL,w
  4118  0F2D  00A0               	movwf	___wmul@multiplier
  4119  0F2E  082B               	movf	??_VAL+1,w
  4120  0F2F  00A1               	movwf	___wmul@multiplier+1
  4121  0F30  309C               	movlw	156
  4122  0F31  00A2               	movwf	___wmul@multiplicand
  4123  0F32  30FF               	movlw	255
  4124  0F33  00A3               	movwf	___wmul@multiplicand+1
  4125  0F34  120A  158A  24A1  120A  158A  	fcall	___wmul
  4126  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  4127  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  4128  0F3B  082C               	movf	VAL@valor,w
  4129  0F3C  0720               	addwf	?___wmul,w
  4130  0F3D  00AC               	movwf	VAL@valor
  4131  0F3E  082D               	movf	VAL@valor+1,w
  4132  0F3F  1803               	skipnc
  4133  0F40  0A2D               	incf	VAL@valor+1,w
  4134  0F41  0721               	addwf	?___wmul+1,w
  4135  0F42  00AD               	movwf	VAL@valor+1
  4136  0F43                     l2074:
  4137  0F43  300A               	movlw	10
  4138  0F44  00A0               	movwf	___lwdiv@divisor
  4139  0F45  3000               	movlw	0
  4140  0F46  00A1               	movwf	___lwdiv@divisor+1
  4141  0F47  082D               	movf	VAL@valor+1,w
  4142  0F48  00A3               	movwf	___lwdiv@dividend+1
  4143  0F49  082C               	movf	VAL@valor,w
  4144  0F4A  00A2               	movwf	___lwdiv@dividend
  4145  0F4B  120A  158A  2554  120A  158A  	fcall	___lwdiv
  4146  0F50  1283               	bcf	3,5	;RP0=0, select bank0
  4147  0F51  1303               	bcf	3,6	;RP1=0, select bank0
  4148  0F52  0820               	movf	?___lwdiv,w
  4149  0F53  00AA               	movwf	??_VAL
  4150  0F54  082A               	movf	??_VAL,w
  4151  0F55  00ED               	movwf	_POS2
  4152  0F56                     l2076:
  4153  0F56  086D               	movf	_POS2,w
  4154  0F57  00AA               	movwf	??_VAL
  4155  0F58  01AB               	clrf	??_VAL+1
  4156  0F59  082A               	movf	??_VAL,w
  4157  0F5A  00A0               	movwf	___wmul@multiplier
  4158  0F5B  082B               	movf	??_VAL+1,w
  4159  0F5C  00A1               	movwf	___wmul@multiplier+1
  4160  0F5D  30F6               	movlw	246
  4161  0F5E  00A2               	movwf	___wmul@multiplicand
  4162  0F5F  30FF               	movlw	255
  4163  0F60  00A3               	movwf	___wmul@multiplicand+1
  4164  0F61  120A  158A  24A1  120A  158A  	fcall	___wmul
  4165  0F66  1283               	bcf	3,5	;RP0=0, select bank0
  4166  0F67  1303               	bcf	3,6	;RP1=0, select bank0
  4167  0F68  082C               	movf	VAL@valor,w
  4168  0F69  0720               	addwf	?___wmul,w
  4169  0F6A  00AC               	movwf	VAL@valor
  4170  0F6B  082D               	movf	VAL@valor+1,w
  4171  0F6C  1803               	skipnc
  4172  0F6D  0A2D               	incf	VAL@valor+1,w
  4173  0F6E  0721               	addwf	?___wmul+1,w
  4174  0F6F  00AD               	movwf	VAL@valor+1
  4175  0F70  082C               	movf	VAL@valor,w
  4176  0F71  00AA               	movwf	??_VAL
  4177  0F72  082A               	movf	??_VAL,w
  4178  0F73  00EC               	movwf	_POS3
  4179  0F74                     l2078:
  4180  0F74  086E               	movf	_POS1,w
  4181  0F75  3E30               	addlw	48
  4182  0F76  00AA               	movwf	??_VAL
  4183  0F77  082A               	movf	??_VAL,w
  4184  0F78  00EE               	movwf	_POS1
  4185  0F79                     l2080:
  4186  0F79  086D               	movf	_POS2,w
  4187  0F7A  3E30               	addlw	48
  4188  0F7B  00AA               	movwf	??_VAL
  4189  0F7C  082A               	movf	??_VAL,w
  4190  0F7D  00ED               	movwf	_POS2
  4191  0F7E                     l2082:
  4192  0F7E  086C               	movf	_POS3,w
  4193  0F7F  3E30               	addlw	48
  4194  0F80  00AA               	movwf	??_VAL
  4195  0F81  082A               	movf	??_VAL,w
  4196  0F82  00EC               	movwf	_POS3
  4197  0F83                     l337:
  4198  0F83  0008               	return
  4199  0F84                     __end_of_VAL:
  4200                           
  4201                           	psect	text11
  4202  0CA1                     __ptext11:	
  4203 ;; *************** function ___wmul *****************
  4204 ;; Defined at:
  4205 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  4206 ;; Parameters:    Size  Location     Type
  4207 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4208 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4209 ;; Auto vars:     Size  Location     Type
  4210 ;;  product         2    4[BANK0 ] unsigned int 
  4211 ;; Return value:  Size  Location     Type
  4212 ;;                  2    0[BANK0 ] unsigned int 
  4213 ;; Registers used:
  4214 ;;		wreg, status,2, status,0
  4215 ;; Tracked objects:
  4216 ;;		On entry : 0/0
  4217 ;;		On exit  : 0/0
  4218 ;;		Unchanged: 0/0
  4219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4220 ;;      Params:         0       4       0       0       0
  4221 ;;      Locals:         0       2       0       0       0
  4222 ;;      Temps:          0       0       0       0       0
  4223 ;;      Totals:         0       6       0       0       0
  4224 ;;Total ram usage:        6 bytes
  4225 ;; Hardware stack levels used:    1
  4226 ;; Hardware stack levels required when called:    2
  4227 ;; This function calls:
  4228 ;;		Nothing
  4229 ;; This function is called by:
  4230 ;;		_VAL
  4231 ;; This function uses a non-reentrant model
  4232 ;;
  4233                           
  4234                           
  4235                           ;psect for function ___wmul
  4236  0CA1                     ___wmul:
  4237  0CA1                     l1872:	
  4238                           ;incstack = 0
  4239                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4240                           
  4241  0CA1  1283               	bcf	3,5	;RP0=0, select bank0
  4242  0CA2  1303               	bcf	3,6	;RP1=0, select bank0
  4243  0CA3  01A4               	clrf	___wmul@product
  4244  0CA4  01A5               	clrf	___wmul@product+1
  4245  0CA5                     l1874:
  4246  0CA5  1C20               	btfss	___wmul@multiplier,0
  4247  0CA6  2CA8               	goto	u1331
  4248  0CA7  2CA9               	goto	u1330
  4249  0CA8                     u1331:
  4250  0CA8  2CAF               	goto	l448
  4251  0CA9                     u1330:
  4252  0CA9                     l1876:
  4253  0CA9  0822               	movf	___wmul@multiplicand,w
  4254  0CAA  07A4               	addwf	___wmul@product,f
  4255  0CAB  1803               	skipnc
  4256  0CAC  0AA5               	incf	___wmul@product+1,f
  4257  0CAD  0823               	movf	___wmul@multiplicand+1,w
  4258  0CAE  07A5               	addwf	___wmul@product+1,f
  4259  0CAF                     l448:
  4260  0CAF  3001               	movlw	1
  4261  0CB0                     u1345:
  4262  0CB0  1003               	clrc
  4263  0CB1  0DA2               	rlf	___wmul@multiplicand,f
  4264  0CB2  0DA3               	rlf	___wmul@multiplicand+1,f
  4265  0CB3  3EFF               	addlw	-1
  4266  0CB4  1D03               	skipz
  4267  0CB5  2CB0               	goto	u1345
  4268  0CB6                     l1878:
  4269  0CB6  3001               	movlw	1
  4270  0CB7                     u1355:
  4271  0CB7  1003               	clrc
  4272  0CB8  0CA1               	rrf	___wmul@multiplier+1,f
  4273  0CB9  0CA0               	rrf	___wmul@multiplier,f
  4274  0CBA  3EFF               	addlw	-1
  4275  0CBB  1D03               	skipz
  4276  0CBC  2CB7               	goto	u1355
  4277  0CBD                     l1880:
  4278  0CBD  0820               	movf	___wmul@multiplier,w
  4279  0CBE  0421               	iorwf	___wmul@multiplier+1,w
  4280  0CBF  1D03               	btfss	3,2
  4281  0CC0  2CC2               	goto	u1361
  4282  0CC1  2CC3               	goto	u1360
  4283  0CC2                     u1361:
  4284  0CC2  2CA5               	goto	l1874
  4285  0CC3                     u1360:
  4286  0CC3                     l1882:
  4287  0CC3  0825               	movf	___wmul@product+1,w
  4288  0CC4  00A1               	movwf	?___wmul+1
  4289  0CC5  0824               	movf	___wmul@product,w
  4290  0CC6  00A0               	movwf	?___wmul
  4291  0CC7                     l450:
  4292  0CC7  0008               	return
  4293  0CC8                     __end_of___wmul:
  4294                           
  4295                           	psect	text12
  4296  0D54                     __ptext12:	
  4297 ;; *************** function ___lwdiv *****************
  4298 ;; Defined at:
  4299 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4300 ;; Parameters:    Size  Location     Type
  4301 ;;  divisor         2    0[BANK0 ] unsigned int 
  4302 ;;  dividend        2    2[BANK0 ] unsigned int 
  4303 ;; Auto vars:     Size  Location     Type
  4304 ;;  quotient        2    5[BANK0 ] unsigned int 
  4305 ;;  counter         1    7[BANK0 ] unsigned char 
  4306 ;; Return value:  Size  Location     Type
  4307 ;;                  2    0[BANK0 ] unsigned int 
  4308 ;; Registers used:
  4309 ;;		wreg, status,2, status,0
  4310 ;; Tracked objects:
  4311 ;;		On entry : 0/0
  4312 ;;		On exit  : 0/0
  4313 ;;		Unchanged: 0/0
  4314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4315 ;;      Params:         0       4       0       0       0
  4316 ;;      Locals:         0       3       0       0       0
  4317 ;;      Temps:          0       1       0       0       0
  4318 ;;      Totals:         0       8       0       0       0
  4319 ;;Total ram usage:        8 bytes
  4320 ;; Hardware stack levels used:    1
  4321 ;; Hardware stack levels required when called:    2
  4322 ;; This function calls:
  4323 ;;		Nothing
  4324 ;; This function is called by:
  4325 ;;		_VAL
  4326 ;; This function uses a non-reentrant model
  4327 ;;
  4328                           
  4329                           
  4330                           ;psect for function ___lwdiv
  4331  0D54                     ___lwdiv:
  4332  0D54                     l1886:	
  4333                           ;incstack = 0
  4334                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4335                           
  4336  0D54  1283               	bcf	3,5	;RP0=0, select bank0
  4337  0D55  1303               	bcf	3,6	;RP1=0, select bank0
  4338  0D56  01A5               	clrf	___lwdiv@quotient
  4339  0D57  01A6               	clrf	___lwdiv@quotient+1
  4340  0D58                     l1888:
  4341  0D58  0820               	movf	___lwdiv@divisor,w
  4342  0D59  0421               	iorwf	___lwdiv@divisor+1,w
  4343  0D5A  1903               	btfsc	3,2
  4344  0D5B  2D5D               	goto	u1371
  4345  0D5C  2D5E               	goto	u1370
  4346  0D5D                     u1371:
  4347  0D5D  2D95               	goto	l1908
  4348  0D5E                     u1370:
  4349  0D5E                     l1890:
  4350  0D5E  01A7               	clrf	___lwdiv@counter
  4351  0D5F  0AA7               	incf	___lwdiv@counter,f
  4352  0D60  2D6C               	goto	l1896
  4353  0D61                     l1892:
  4354  0D61  3001               	movlw	1
  4355  0D62                     u1385:
  4356  0D62  1003               	clrc
  4357  0D63  0DA0               	rlf	___lwdiv@divisor,f
  4358  0D64  0DA1               	rlf	___lwdiv@divisor+1,f
  4359  0D65  3EFF               	addlw	-1
  4360  0D66  1D03               	skipz
  4361  0D67  2D62               	goto	u1385
  4362  0D68                     l1894:
  4363  0D68  3001               	movlw	1
  4364  0D69  00A4               	movwf	??___lwdiv
  4365  0D6A  0824               	movf	??___lwdiv,w
  4366  0D6B  07A7               	addwf	___lwdiv@counter,f
  4367  0D6C                     l1896:
  4368  0D6C  1FA1               	btfss	___lwdiv@divisor+1,7
  4369  0D6D  2D6F               	goto	u1391
  4370  0D6E  2D70               	goto	u1390
  4371  0D6F                     u1391:
  4372  0D6F  2D61               	goto	l1892
  4373  0D70                     u1390:
  4374  0D70                     l1898:
  4375  0D70  3001               	movlw	1
  4376  0D71                     u1405:
  4377  0D71  1003               	clrc
  4378  0D72  0DA5               	rlf	___lwdiv@quotient,f
  4379  0D73  0DA6               	rlf	___lwdiv@quotient+1,f
  4380  0D74  3EFF               	addlw	-1
  4381  0D75  1D03               	skipz
  4382  0D76  2D71               	goto	u1405
  4383  0D77  0821               	movf	___lwdiv@divisor+1,w
  4384  0D78  0223               	subwf	___lwdiv@dividend+1,w
  4385  0D79  1D03               	skipz
  4386  0D7A  2D7D               	goto	u1415
  4387  0D7B  0820               	movf	___lwdiv@divisor,w
  4388  0D7C  0222               	subwf	___lwdiv@dividend,w
  4389  0D7D                     u1415:
  4390  0D7D  1C03               	skipc
  4391  0D7E  2D80               	goto	u1411
  4392  0D7F  2D81               	goto	u1410
  4393  0D80                     u1411:
  4394  0D80  2D88               	goto	l1904
  4395  0D81                     u1410:
  4396  0D81                     l1900:
  4397  0D81  0820               	movf	___lwdiv@divisor,w
  4398  0D82  02A2               	subwf	___lwdiv@dividend,f
  4399  0D83  0821               	movf	___lwdiv@divisor+1,w
  4400  0D84  1C03               	skipc
  4401  0D85  03A3               	decf	___lwdiv@dividend+1,f
  4402  0D86  02A3               	subwf	___lwdiv@dividend+1,f
  4403  0D87                     l1902:
  4404  0D87  1425               	bsf	___lwdiv@quotient,0
  4405  0D88                     l1904:
  4406  0D88  3001               	movlw	1
  4407  0D89                     u1425:
  4408  0D89  1003               	clrc
  4409  0D8A  0CA1               	rrf	___lwdiv@divisor+1,f
  4410  0D8B  0CA0               	rrf	___lwdiv@divisor,f
  4411  0D8C  3EFF               	addlw	-1
  4412  0D8D  1D03               	skipz
  4413  0D8E  2D89               	goto	u1425
  4414  0D8F                     l1906:
  4415  0D8F  3001               	movlw	1
  4416  0D90  02A7               	subwf	___lwdiv@counter,f
  4417  0D91  1D03               	btfss	3,2
  4418  0D92  2D94               	goto	u1431
  4419  0D93  2D95               	goto	u1430
  4420  0D94                     u1431:
  4421  0D94  2D70               	goto	l1898
  4422  0D95                     u1430:
  4423  0D95                     l1908:
  4424  0D95  0826               	movf	___lwdiv@quotient+1,w
  4425  0D96  00A1               	movwf	?___lwdiv+1
  4426  0D97  0825               	movf	___lwdiv@quotient,w
  4427  0D98  00A0               	movwf	?___lwdiv
  4428  0D99                     l720:
  4429  0D99  0008               	return
  4430  0D9A                     __end_of___lwdiv:
  4431                           
  4432                           	psect	text13
  4433  0CC8                     __ptext13:	
  4434 ;; *************** function _Lcd_Write_String *****************
  4435 ;; Defined at:
  4436 ;;		line 77 in file "LCD.c"
  4437 ;; Parameters:    Size  Location     Type
  4438 ;;  a               1    wreg     PTR unsigned char 
  4439 ;;		 -> STR_4(1), STR_3(5), STR_2(3), STR_1(17), 
  4440 ;; Auto vars:     Size  Location     Type
  4441 ;;  a               1    7[BANK0 ] PTR unsigned char 
  4442 ;;		 -> STR_4(1), STR_3(5), STR_2(3), STR_1(17), 
  4443 ;;  i               2    5[BANK0 ] int 
  4444 ;; Return value:  Size  Location     Type
  4445 ;;                  1    wreg      void 
  4446 ;; Registers used:
  4447 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4448 ;; Tracked objects:
  4449 ;;		On entry : 0/0
  4450 ;;		On exit  : 0/0
  4451 ;;		Unchanged: 0/0
  4452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4453 ;;      Params:         0       0       0       0       0
  4454 ;;      Locals:         0       3       0       0       0
  4455 ;;      Temps:          0       0       0       0       0
  4456 ;;      Totals:         0       3       0       0       0
  4457 ;;Total ram usage:        3 bytes
  4458 ;; Hardware stack levels used:    1
  4459 ;; Hardware stack levels required when called:    4
  4460 ;; This function calls:
  4461 ;;		_Lcd_Write_Char
  4462 ;; This function is called by:
  4463 ;;		_main
  4464 ;; This function uses a non-reentrant model
  4465 ;;
  4466                           
  4467                           
  4468                           ;psect for function _Lcd_Write_String
  4469  0CC8                     _Lcd_Write_String:
  4470                           
  4471                           ;incstack = 0
  4472                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4473                           ;Lcd_Write_String@a stored from wreg
  4474  0CC8  1283               	bcf	3,5	;RP0=0, select bank0
  4475  0CC9  1303               	bcf	3,6	;RP1=0, select bank0
  4476  0CCA  00A7               	movwf	Lcd_Write_String@a
  4477  0CCB                     l1986:
  4478                           
  4479                           ;LCD.c: 78:     int i;;LCD.c: 79:     for (i = 0; a[i] != '\0'; i++)
  4480  0CCB  01A5               	clrf	Lcd_Write_String@i
  4481  0CCC  01A6               	clrf	Lcd_Write_String@i+1
  4482  0CCD  2CE3               	goto	l1992
  4483  0CCE                     l1988:
  4484                           
  4485                           ;LCD.c: 80:         Lcd_Write_Char(a[i]);
  4486  0CCE  0825               	movf	Lcd_Write_String@i,w
  4487  0CCF  0727               	addwf	Lcd_Write_String@a,w
  4488  0CD0  0084               	movwf	4
  4489  0CD1  120A  158A  2000  120A  158A  	fcall	stringdir
  4490  0CD6  120A  158A  2460  120A  158A  	fcall	_Lcd_Write_Char
  4491  0CDB                     l1990:
  4492  0CDB  3001               	movlw	1
  4493  0CDC  1283               	bcf	3,5	;RP0=0, select bank0
  4494  0CDD  1303               	bcf	3,6	;RP1=0, select bank0
  4495  0CDE  07A5               	addwf	Lcd_Write_String@i,f
  4496  0CDF  1803               	skipnc
  4497  0CE0  0AA6               	incf	Lcd_Write_String@i+1,f
  4498  0CE1  3000               	movlw	0
  4499  0CE2  07A6               	addwf	Lcd_Write_String@i+1,f
  4500  0CE3                     l1992:
  4501  0CE3  0825               	movf	Lcd_Write_String@i,w
  4502  0CE4  0727               	addwf	Lcd_Write_String@a,w
  4503  0CE5  0084               	movwf	4
  4504  0CE6  120A  158A  2000  120A  158A  	fcall	stringdir
  4505  0CEB  3A00               	xorlw	0
  4506  0CEC  1D03               	skipz
  4507  0CED  2CEF               	goto	u1521
  4508  0CEE  2CF0               	goto	u1520
  4509  0CEF                     u1521:
  4510  0CEF  2CCE               	goto	l1988
  4511  0CF0                     u1520:
  4512  0CF0                     l90:
  4513  0CF0  0008               	return
  4514  0CF1                     __end_of_Lcd_Write_String:
  4515                           
  4516                           	psect	text14
  4517  0C60                     __ptext14:	
  4518 ;; *************** function _Lcd_Write_Char *****************
  4519 ;; Defined at:
  4520 ;;		line 65 in file "LCD.c"
  4521 ;; Parameters:    Size  Location     Type
  4522 ;;  a               1    wreg     unsigned char 
  4523 ;; Auto vars:     Size  Location     Type
  4524 ;;  a               1    2[BANK0 ] unsigned char 
  4525 ;;  y               1    4[BANK0 ] unsigned char 
  4526 ;;  temp            1    3[BANK0 ] unsigned char 
  4527 ;; Return value:  Size  Location     Type
  4528 ;;                  1    wreg      void 
  4529 ;; Registers used:
  4530 ;;		wreg, status,2, status,0, pclath, cstack
  4531 ;; Tracked objects:
  4532 ;;		On entry : 0/0
  4533 ;;		On exit  : 0/0
  4534 ;;		Unchanged: 0/0
  4535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4536 ;;      Params:         0       0       0       0       0
  4537 ;;      Locals:         0       3       0       0       0
  4538 ;;      Temps:          0       1       0       0       0
  4539 ;;      Totals:         0       4       0       0       0
  4540 ;;Total ram usage:        4 bytes
  4541 ;; Hardware stack levels used:    1
  4542 ;; Hardware stack levels required when called:    3
  4543 ;; This function calls:
  4544 ;;		_Lcd_Port
  4545 ;; This function is called by:
  4546 ;;		_Lcd_Write_String
  4547 ;;		_main
  4548 ;; This function uses a non-reentrant model
  4549 ;;
  4550                           
  4551                           
  4552                           ;psect for function _Lcd_Write_Char
  4553  0C60                     _Lcd_Write_Char:
  4554                           
  4555                           ;incstack = 0
  4556                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4557                           ;Lcd_Write_Char@a stored from wreg
  4558  0C60  1283               	bcf	3,5	;RP0=0, select bank0
  4559  0C61  1303               	bcf	3,6	;RP1=0, select bank0
  4560  0C62  00A2               	movwf	Lcd_Write_Char@a
  4561  0C63                     l1860:
  4562                           
  4563                           ;LCD.c: 66:     char temp, y;;LCD.c: 67:     temp = a;
  4564  0C63  0822               	movf	Lcd_Write_Char@a,w
  4565  0C64  00A1               	movwf	??_Lcd_Write_Char
  4566  0C65  0821               	movf	??_Lcd_Write_Char,w
  4567  0C66  00A3               	movwf	Lcd_Write_Char@temp
  4568                           
  4569                           ;LCD.c: 68:     y = temp;
  4570  0C67  0823               	movf	Lcd_Write_Char@temp,w
  4571  0C68  00A1               	movwf	??_Lcd_Write_Char
  4572  0C69  0821               	movf	??_Lcd_Write_Char,w
  4573  0C6A  00A4               	movwf	Lcd_Write_Char@y
  4574  0C6B                     l1862:
  4575                           
  4576                           ;LCD.c: 69:     RE0 = 1;
  4577  0C6B  1409               	bsf	9,0	;volatile
  4578  0C6C                     l1864:
  4579                           
  4580                           ;LCD.c: 70:     Lcd_Port(y);
  4581  0C6C  0824               	movf	Lcd_Write_Char@y,w
  4582  0C6D  120A  158A  23D8  120A  158A  	fcall	_Lcd_Port
  4583  0C72                     l1866:
  4584                           
  4585                           ;LCD.c: 71:     RE1 = 1;
  4586  0C72  1283               	bcf	3,5	;RP0=0, select bank0
  4587  0C73  1303               	bcf	3,6	;RP1=0, select bank0
  4588  0C74  1489               	bsf	9,1	;volatile
  4589  0C75                     l1868:
  4590                           
  4591                           ;LCD.c: 72:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4592  0C75  300C               	movlw	12
  4593  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  4594  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  4595  0C78  00A1               	movwf	??_Lcd_Write_Char
  4596  0C79                     u2497:
  4597  0C79  0BA1               	decfsz	??_Lcd_Write_Char,f
  4598  0C7A  2C79               	goto	u2497
  4599  0C7B  0000               	nop
  4600  0C7C                     l1870:
  4601                           
  4602                           ;LCD.c: 73:     RE1 = 0;
  4603  0C7C  1283               	bcf	3,5	;RP0=0, select bank0
  4604  0C7D  1303               	bcf	3,6	;RP1=0, select bank0
  4605  0C7E  1089               	bcf	9,1	;volatile
  4606  0C7F                     l84:
  4607  0C7F  0008               	return
  4608  0C80                     __end_of_Lcd_Write_Char:
  4609                           
  4610                           	psect	text15
  4611  0DE8                     __ptext15:	
  4612 ;; *************** function _Lcd_Set_Cursor *****************
  4613 ;; Defined at:
  4614 ;;		line 30 in file "LCD.c"
  4615 ;; Parameters:    Size  Location     Type
  4616 ;;  a               1    wreg     unsigned char 
  4617 ;;  b               1    4[BANK0 ] unsigned char 
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;  a               1    7[BANK0 ] unsigned char 
  4620 ;;  temp            1   10[BANK0 ] unsigned char 
  4621 ;;  y               1    9[BANK0 ] unsigned char 
  4622 ;;  z               1    8[BANK0 ] unsigned char 
  4623 ;; Return value:  Size  Location     Type
  4624 ;;                  1    wreg      void 
  4625 ;; Registers used:
  4626 ;;		wreg, status,2, status,0, pclath, cstack
  4627 ;; Tracked objects:
  4628 ;;		On entry : 0/0
  4629 ;;		On exit  : 0/0
  4630 ;;		Unchanged: 0/0
  4631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4632 ;;      Params:         0       1       0       0       0
  4633 ;;      Locals:         0       4       0       0       0
  4634 ;;      Temps:          0       2       0       0       0
  4635 ;;      Totals:         0       7       0       0       0
  4636 ;;Total ram usage:        7 bytes
  4637 ;; Hardware stack levels used:    1
  4638 ;; Hardware stack levels required when called:    4
  4639 ;; This function calls:
  4640 ;;		_Lcd_Cmd
  4641 ;; This function is called by:
  4642 ;;		_main
  4643 ;; This function uses a non-reentrant model
  4644 ;;
  4645                           
  4646                           
  4647                           ;psect for function _Lcd_Set_Cursor
  4648  0DE8                     _Lcd_Set_Cursor:
  4649                           
  4650                           ;incstack = 0
  4651                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4652                           ;Lcd_Set_Cursor@a stored from wreg
  4653  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  4654  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  4655  0DEA  00A7               	movwf	Lcd_Set_Cursor@a
  4656  0DEB                     l1956:
  4657                           
  4658                           ;LCD.c: 31:     char temp, z, y;;LCD.c: 32:     if (a == 1) {
  4659  0DEB  0327               	decf	Lcd_Set_Cursor@a,w
  4660  0DEC  1D03               	btfss	3,2
  4661  0DED  2DEF               	goto	u1481
  4662  0DEE  2DF0               	goto	u1480
  4663  0DEF                     u1481:
  4664  0DEF  2E15               	goto	l1966
  4665  0DF0                     u1480:
  4666  0DF0                     l1958:
  4667                           
  4668                           ;LCD.c: 33:         temp = 0x80 + b - 1;
  4669  0DF0  0824               	movf	Lcd_Set_Cursor@b,w
  4670  0DF1  3E7F               	addlw	127
  4671  0DF2  00A5               	movwf	??_Lcd_Set_Cursor
  4672  0DF3  0825               	movf	??_Lcd_Set_Cursor,w
  4673  0DF4  00AA               	movwf	Lcd_Set_Cursor@temp
  4674                           
  4675                           ;LCD.c: 34:         z = temp >> 4;
  4676  0DF5  082A               	movf	Lcd_Set_Cursor@temp,w
  4677  0DF6  00A5               	movwf	??_Lcd_Set_Cursor
  4678  0DF7  3004               	movlw	4
  4679  0DF8                     u1495:
  4680  0DF8  1003               	clrc
  4681  0DF9  0CA5               	rrf	??_Lcd_Set_Cursor,f
  4682  0DFA  3EFF               	addlw	-1
  4683  0DFB  1D03               	skipz
  4684  0DFC  2DF8               	goto	u1495
  4685  0DFD  0825               	movf	??_Lcd_Set_Cursor,w
  4686  0DFE  00A6               	movwf	??_Lcd_Set_Cursor+1
  4687  0DFF  0826               	movf	??_Lcd_Set_Cursor+1,w
  4688  0E00  00A8               	movwf	Lcd_Set_Cursor@z
  4689  0E01                     l1960:
  4690                           
  4691                           ;LCD.c: 35:         y = temp & 0x0F;
  4692  0E01  082A               	movf	Lcd_Set_Cursor@temp,w
  4693  0E02  390F               	andlw	15
  4694  0E03  00A5               	movwf	??_Lcd_Set_Cursor
  4695  0E04  0825               	movf	??_Lcd_Set_Cursor,w
  4696  0E05  00A9               	movwf	Lcd_Set_Cursor@y
  4697  0E06                     l1962:
  4698                           
  4699                           ;LCD.c: 36:         Lcd_Cmd(z);
  4700  0E06  0828               	movf	Lcd_Set_Cursor@z,w
  4701  0E07  120A  158A  2444  120A  158A  	fcall	_Lcd_Cmd
  4702  0E0C                     l1964:
  4703                           
  4704                           ;LCD.c: 37:         Lcd_Cmd(y);
  4705  0E0C  1283               	bcf	3,5	;RP0=0, select bank0
  4706  0E0D  1303               	bcf	3,6	;RP1=0, select bank0
  4707  0E0E  0829               	movf	Lcd_Set_Cursor@y,w
  4708  0E0F  120A  158A  2444  120A  158A  	fcall	_Lcd_Cmd
  4709                           
  4710                           ;LCD.c: 38:     } else if (a == 2) {
  4711  0E14  2E3F               	goto	l78
  4712  0E15                     l1966:
  4713  0E15  3002               	movlw	2
  4714  0E16  0627               	xorwf	Lcd_Set_Cursor@a,w
  4715  0E17  1D03               	btfss	3,2
  4716  0E18  2E1A               	goto	u1501
  4717  0E19  2E1B               	goto	u1500
  4718  0E1A                     u1501:
  4719  0E1A  2E3F               	goto	l78
  4720  0E1B                     u1500:
  4721  0E1B                     l1968:
  4722                           
  4723                           ;LCD.c: 39:         temp = 0xC0 + b - 1;
  4724  0E1B  0824               	movf	Lcd_Set_Cursor@b,w
  4725  0E1C  3EBF               	addlw	191
  4726  0E1D  00A5               	movwf	??_Lcd_Set_Cursor
  4727  0E1E  0825               	movf	??_Lcd_Set_Cursor,w
  4728  0E1F  00AA               	movwf	Lcd_Set_Cursor@temp
  4729                           
  4730                           ;LCD.c: 40:         z = temp >> 4;
  4731  0E20  082A               	movf	Lcd_Set_Cursor@temp,w
  4732  0E21  00A5               	movwf	??_Lcd_Set_Cursor
  4733  0E22  3004               	movlw	4
  4734  0E23                     u1515:
  4735  0E23  1003               	clrc
  4736  0E24  0CA5               	rrf	??_Lcd_Set_Cursor,f
  4737  0E25  3EFF               	addlw	-1
  4738  0E26  1D03               	skipz
  4739  0E27  2E23               	goto	u1515
  4740  0E28  0825               	movf	??_Lcd_Set_Cursor,w
  4741  0E29  00A6               	movwf	??_Lcd_Set_Cursor+1
  4742  0E2A  0826               	movf	??_Lcd_Set_Cursor+1,w
  4743  0E2B  00A8               	movwf	Lcd_Set_Cursor@z
  4744  0E2C                     l1970:
  4745                           
  4746                           ;LCD.c: 41:         y = temp & 0xF0;
  4747  0E2C  082A               	movf	Lcd_Set_Cursor@temp,w
  4748  0E2D  39F0               	andlw	240
  4749  0E2E  00A5               	movwf	??_Lcd_Set_Cursor
  4750  0E2F  0825               	movf	??_Lcd_Set_Cursor,w
  4751  0E30  00A9               	movwf	Lcd_Set_Cursor@y
  4752  0E31                     l1972:
  4753                           
  4754                           ;LCD.c: 42:         Lcd_Cmd(z);
  4755  0E31  0828               	movf	Lcd_Set_Cursor@z,w
  4756  0E32  120A  158A  2444  120A  158A  	fcall	_Lcd_Cmd
  4757  0E37                     l1974:
  4758                           
  4759                           ;LCD.c: 43:         Lcd_Cmd(y);
  4760  0E37  1283               	bcf	3,5	;RP0=0, select bank0
  4761  0E38  1303               	bcf	3,6	;RP1=0, select bank0
  4762  0E39  0829               	movf	Lcd_Set_Cursor@y,w
  4763  0E3A  120A  158A  2444  120A  158A  	fcall	_Lcd_Cmd
  4764  0E3F                     l78:
  4765  0E3F  0008               	return
  4766  0E40                     __end_of_Lcd_Set_Cursor:
  4767                           
  4768                           	psect	text16
  4769  0D9A                     __ptext16:	
  4770 ;; *************** function _Lcd_Init *****************
  4771 ;; Defined at:
  4772 ;;		line 47 in file "LCD.c"
  4773 ;; Parameters:    Size  Location     Type
  4774 ;;		None
  4775 ;; Auto vars:     Size  Location     Type
  4776 ;;		None
  4777 ;; Return value:  Size  Location     Type
  4778 ;;                  1    wreg      void 
  4779 ;; Registers used:
  4780 ;;		wreg, status,2, status,0, pclath, cstack
  4781 ;; Tracked objects:
  4782 ;;		On entry : 0/0
  4783 ;;		On exit  : 0/0
  4784 ;;		Unchanged: 0/0
  4785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4786 ;;      Params:         0       0       0       0       0
  4787 ;;      Locals:         0       0       0       0       0
  4788 ;;      Temps:          0       2       0       0       0
  4789 ;;      Totals:         0       2       0       0       0
  4790 ;;Total ram usage:        2 bytes
  4791 ;; Hardware stack levels used:    1
  4792 ;; Hardware stack levels required when called:    4
  4793 ;; This function calls:
  4794 ;;		_Lcd_Cmd
  4795 ;;		_Lcd_Port
  4796 ;; This function is called by:
  4797 ;;		_main
  4798 ;; This function uses a non-reentrant model
  4799 ;;
  4800                           
  4801                           
  4802                           ;psect for function _Lcd_Init
  4803  0D9A                     _Lcd_Init:
  4804  0D9A                     l1976:	
  4805                           ;incstack = 0
  4806                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4807                           
  4808                           
  4809                           ;LCD.c: 48:     Lcd_Port(0x00);
  4810  0D9A  3000               	movlw	0
  4811  0D9B  120A  158A  23D8  120A  158A  	fcall	_Lcd_Port
  4812  0DA0                     l1978:
  4813                           
  4814                           ;LCD.c: 49:     _delay((unsigned long)((20)*(4000000/4000.0)));
  4815  0DA0  301A               	movlw	26
  4816  0DA1  1283               	bcf	3,5	;RP0=0, select bank0
  4817  0DA2  1303               	bcf	3,6	;RP1=0, select bank0
  4818  0DA3  00A5               	movwf	??_Lcd_Init+1
  4819  0DA4  30F7               	movlw	247
  4820  0DA5  00A4               	movwf	??_Lcd_Init
  4821  0DA6                     u2507:
  4822  0DA6  0BA4               	decfsz	??_Lcd_Init,f
  4823  0DA7  2DA6               	goto	u2507
  4824  0DA8  0BA5               	decfsz	??_Lcd_Init+1,f
  4825  0DA9  2DA6               	goto	u2507
  4826  0DAA  2DAB               	nop2
  4827  0DAB                     l1980:
  4828                           
  4829                           ;LCD.c: 50:     Lcd_Cmd(0x30);
  4830  0DAB  3030               	movlw	48
  4831  0DAC  120A  158A  2444  120A  158A  	fcall	_Lcd_Cmd
  4832                           
  4833                           ;LCD.c: 51:     _delay((unsigned long)((5)*(4000000/4000.0)));
  4834  0DB1  3007               	movlw	7
  4835  0DB2  1283               	bcf	3,5	;RP0=0, select bank0
  4836  0DB3  1303               	bcf	3,6	;RP1=0, select bank0
  4837  0DB4  00A5               	movwf	??_Lcd_Init+1
  4838  0DB5  307C               	movlw	124
  4839  0DB6  00A4               	movwf	??_Lcd_Init
  4840  0DB7                     u2517:
  4841  0DB7  0BA4               	decfsz	??_Lcd_Init,f
  4842  0DB8  2DB7               	goto	u2517
  4843  0DB9  0BA5               	decfsz	??_Lcd_Init+1,f
  4844  0DBA  2DB7               	goto	u2517
  4845  0DBB  0000               	nop
  4846  0DBC                     l1982:
  4847                           
  4848                           ;LCD.c: 52:     Lcd_Cmd(0x30);
  4849  0DBC  3030               	movlw	48
  4850  0DBD  120A  158A  2444  120A  158A  	fcall	_Lcd_Cmd
  4851  0DC2                     l1984:
  4852                           
  4853                           ;LCD.c: 53:     _delay((unsigned long)((200)*(4000000/4000000.0)));
  4854  0DC2  3041               	movlw	65
  4855  0DC3  1283               	bcf	3,5	;RP0=0, select bank0
  4856  0DC4  1303               	bcf	3,6	;RP1=0, select bank0
  4857  0DC5  00A4               	movwf	??_Lcd_Init
  4858  0DC6                     u2527:
  4859  0DC6  0BA4               	decfsz	??_Lcd_Init,f
  4860  0DC7  2DC6               	goto	u2527
  4861  0DC8  2DC9               	nop2
  4862                           
  4863                           ;LCD.c: 54:     Lcd_Cmd(0x30);
  4864  0DC9  3030               	movlw	48
  4865  0DCA  120A  158A  2444  120A  158A  	fcall	_Lcd_Cmd
  4866                           
  4867                           ;LCD.c: 56:     Lcd_Cmd(0x3C);
  4868  0DCF  303C               	movlw	60
  4869  0DD0  120A  158A  2444  120A  158A  	fcall	_Lcd_Cmd
  4870                           
  4871                           ;LCD.c: 58:     Lcd_Cmd(0x08);
  4872  0DD5  3008               	movlw	8
  4873  0DD6  120A  158A  2444  120A  158A  	fcall	_Lcd_Cmd
  4874                           
  4875                           ;LCD.c: 60:     Lcd_Cmd(0x01);
  4876  0DDB  3001               	movlw	1
  4877  0DDC  120A  158A  2444  120A  158A  	fcall	_Lcd_Cmd
  4878                           
  4879                           ;LCD.c: 62:     Lcd_Cmd(0x06);
  4880  0DE1  3006               	movlw	6
  4881  0DE2  120A  158A  2444  120A  158A  	fcall	_Lcd_Cmd
  4882  0DE7                     l81:
  4883  0DE7  0008               	return
  4884  0DE8                     __end_of_Lcd_Init:
  4885                           
  4886                           	psect	text17
  4887  0C0F                     __ptext17:	
  4888 ;; *************** function _Lcd_Clear *****************
  4889 ;; Defined at:
  4890 ;;		line 25 in file "LCD.c"
  4891 ;; Parameters:    Size  Location     Type
  4892 ;;		None
  4893 ;; Auto vars:     Size  Location     Type
  4894 ;;		None
  4895 ;; Return value:  Size  Location     Type
  4896 ;;                  1    wreg      void 
  4897 ;; Registers used:
  4898 ;;		wreg, status,2, status,0, pclath, cstack
  4899 ;; Tracked objects:
  4900 ;;		On entry : 0/0
  4901 ;;		On exit  : 0/0
  4902 ;;		Unchanged: 0/0
  4903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4904 ;;      Params:         0       0       0       0       0
  4905 ;;      Locals:         0       0       0       0       0
  4906 ;;      Temps:          0       0       0       0       0
  4907 ;;      Totals:         0       0       0       0       0
  4908 ;;Total ram usage:        0 bytes
  4909 ;; Hardware stack levels used:    1
  4910 ;; Hardware stack levels required when called:    4
  4911 ;; This function calls:
  4912 ;;		_Lcd_Cmd
  4913 ;; This function is called by:
  4914 ;;		_main
  4915 ;; This function uses a non-reentrant model
  4916 ;;
  4917                           
  4918                           
  4919                           ;psect for function _Lcd_Clear
  4920  0C0F                     _Lcd_Clear:
  4921  0C0F                     l1954:	
  4922                           ;incstack = 0
  4923                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4924                           
  4925                           
  4926                           ;LCD.c: 26:     Lcd_Cmd(0);
  4927  0C0F  3000               	movlw	0
  4928  0C10  120A  158A  2444  120A  158A  	fcall	_Lcd_Cmd
  4929                           
  4930                           ;LCD.c: 27:     Lcd_Cmd(1);
  4931  0C15  3001               	movlw	1
  4932  0C16  120A  158A  2444  120A  158A  	fcall	_Lcd_Cmd
  4933  0C1B                     l72:
  4934  0C1B  0008               	return
  4935  0C1C                     __end_of_Lcd_Clear:
  4936                           
  4937                           	psect	text18
  4938  0C44                     __ptext18:	
  4939 ;; *************** function _Lcd_Cmd *****************
  4940 ;; Defined at:
  4941 ;;		line 17 in file "LCD.c"
  4942 ;; Parameters:    Size  Location     Type
  4943 ;;  a               1    wreg     unsigned char 
  4944 ;; Auto vars:     Size  Location     Type
  4945 ;;  a               1    3[BANK0 ] unsigned char 
  4946 ;; Return value:  Size  Location     Type
  4947 ;;                  1    wreg      void 
  4948 ;; Registers used:
  4949 ;;		wreg, status,2, status,0, pclath, cstack
  4950 ;; Tracked objects:
  4951 ;;		On entry : 0/0
  4952 ;;		On exit  : 0/0
  4953 ;;		Unchanged: 0/0
  4954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4955 ;;      Params:         0       0       0       0       0
  4956 ;;      Locals:         0       1       0       0       0
  4957 ;;      Temps:          0       2       0       0       0
  4958 ;;      Totals:         0       3       0       0       0
  4959 ;;Total ram usage:        3 bytes
  4960 ;; Hardware stack levels used:    1
  4961 ;; Hardware stack levels required when called:    3
  4962 ;; This function calls:
  4963 ;;		_Lcd_Port
  4964 ;; This function is called by:
  4965 ;;		_Lcd_Clear
  4966 ;;		_Lcd_Set_Cursor
  4967 ;;		_Lcd_Init
  4968 ;;		_Lcd_Shift_Right
  4969 ;;		_Lcd_Shift_Left
  4970 ;; This function uses a non-reentrant model
  4971 ;;
  4972                           
  4973                           
  4974                           ;psect for function _Lcd_Cmd
  4975  0C44                     _Lcd_Cmd:
  4976                           
  4977                           ;incstack = 0
  4978                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4979                           ;Lcd_Cmd@a stored from wreg
  4980  0C44  1283               	bcf	3,5	;RP0=0, select bank0
  4981  0C45  1303               	bcf	3,6	;RP1=0, select bank0
  4982  0C46  00A3               	movwf	Lcd_Cmd@a
  4983  0C47                     l1850:
  4984                           
  4985                           ;LCD.c: 18:     RE0 = 0;
  4986  0C47  1009               	bcf	9,0	;volatile
  4987  0C48                     l1852:
  4988                           
  4989                           ;LCD.c: 19:     Lcd_Port(a);
  4990  0C48  0823               	movf	Lcd_Cmd@a,w
  4991  0C49  120A  158A  23D8  120A  158A  	fcall	_Lcd_Port
  4992  0C4E                     l1854:
  4993                           
  4994                           ;LCD.c: 20:     RE1 = 1;
  4995  0C4E  1283               	bcf	3,5	;RP0=0, select bank0
  4996  0C4F  1303               	bcf	3,6	;RP1=0, select bank0
  4997  0C50  1489               	bsf	9,1	;volatile
  4998  0C51                     l1856:
  4999                           
  5000                           ;LCD.c: 21:     _delay((unsigned long)((4)*(4000000/4000.0)));
  5001  0C51  3006               	movlw	6
  5002  0C52  1283               	bcf	3,5	;RP0=0, select bank0
  5003  0C53  1303               	bcf	3,6	;RP1=0, select bank0
  5004  0C54  00A2               	movwf	??_Lcd_Cmd+1
  5005  0C55  302F               	movlw	47
  5006  0C56  00A1               	movwf	??_Lcd_Cmd
  5007  0C57                     u2537:
  5008  0C57  0BA1               	decfsz	??_Lcd_Cmd,f
  5009  0C58  2C57               	goto	u2537
  5010  0C59  0BA2               	decfsz	??_Lcd_Cmd+1,f
  5011  0C5A  2C57               	goto	u2537
  5012  0C5B  2C5C               	nop2
  5013  0C5C                     l1858:
  5014                           
  5015                           ;LCD.c: 22:     RE1 = 0;
  5016  0C5C  1283               	bcf	3,5	;RP0=0, select bank0
  5017  0C5D  1303               	bcf	3,6	;RP1=0, select bank0
  5018  0C5E  1089               	bcf	9,1	;volatile
  5019  0C5F                     l69:
  5020  0C5F  0008               	return
  5021  0C60                     __end_of_Lcd_Cmd:
  5022                           
  5023                           	psect	text19
  5024  0BD8                     __ptext19:	
  5025 ;; *************** function _Lcd_Port *****************
  5026 ;; Defined at:
  5027 ;;		line 12 in file "LCD.c"
  5028 ;; Parameters:    Size  Location     Type
  5029 ;;  a               1    wreg     unsigned char 
  5030 ;; Auto vars:     Size  Location     Type
  5031 ;;  a               1    0[BANK0 ] unsigned char 
  5032 ;; Return value:  Size  Location     Type
  5033 ;;                  1    wreg      void 
  5034 ;; Registers used:
  5035 ;;		wreg
  5036 ;; Tracked objects:
  5037 ;;		On entry : 0/0
  5038 ;;		On exit  : 0/0
  5039 ;;		Unchanged: 0/0
  5040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5041 ;;      Params:         0       0       0       0       0
  5042 ;;      Locals:         0       1       0       0       0
  5043 ;;      Temps:          0       0       0       0       0
  5044 ;;      Totals:         0       1       0       0       0
  5045 ;;Total ram usage:        1 bytes
  5046 ;; Hardware stack levels used:    1
  5047 ;; Hardware stack levels required when called:    2
  5048 ;; This function calls:
  5049 ;;		Nothing
  5050 ;; This function is called by:
  5051 ;;		_Lcd_Cmd
  5052 ;;		_Lcd_Init
  5053 ;;		_Lcd_Write_Char
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057                           
  5058                           ;psect for function _Lcd_Port
  5059  0BD8                     _Lcd_Port:
  5060                           
  5061                           ;incstack = 0
  5062                           ; Regs used in _Lcd_Port: [wreg]
  5063                           ;Lcd_Port@a stored from wreg
  5064  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  5065  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  5066  0BDA  00A0               	movwf	Lcd_Port@a
  5067  0BDB                     l1808:
  5068                           
  5069                           ;LCD.c: 13:     PORTD = a;
  5070  0BDB  0820               	movf	Lcd_Port@a,w
  5071  0BDC  0088               	movwf	8	;volatile
  5072  0BDD                     l66:
  5073  0BDD  0008               	return
  5074  0BDE                     __end_of_Lcd_Port:
  5075                           
  5076                           	psect	text20
  5077  0BF8                     __ptext20:	
  5078 ;; *************** function _I2C_Master_Write *****************
  5079 ;; Defined at:
  5080 ;;		line 65 in file "I2C.c"
  5081 ;; Parameters:    Size  Location     Type
  5082 ;;  d               2    0[BANK0 ] unsigned int 
  5083 ;; Auto vars:     Size  Location     Type
  5084 ;;		None
  5085 ;; Return value:  Size  Location     Type
  5086 ;;                  1    wreg      void 
  5087 ;; Registers used:
  5088 ;;		wreg, status,2, status,0, pclath, cstack
  5089 ;; Tracked objects:
  5090 ;;		On entry : 0/0
  5091 ;;		On exit  : 0/0
  5092 ;;		Unchanged: 0/0
  5093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5094 ;;      Params:         0       2       0       0       0
  5095 ;;      Locals:         0       0       0       0       0
  5096 ;;      Temps:          0       0       0       0       0
  5097 ;;      Totals:         0       2       0       0       0
  5098 ;;Total ram usage:        2 bytes
  5099 ;; Hardware stack levels used:    1
  5100 ;; Hardware stack levels required when called:    3
  5101 ;; This function calls:
  5102 ;;		_I2C_Master_Wait
  5103 ;; This function is called by:
  5104 ;;		_main
  5105 ;; This function uses a non-reentrant model
  5106 ;;
  5107                           
  5108                           
  5109                           ;psect for function _I2C_Master_Write
  5110  0BF8                     _I2C_Master_Write:
  5111  0BF8                     l1934:	
  5112                           ;incstack = 0
  5113                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  5114                           
  5115                           
  5116                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  5117  0BF8  120A  158A  2402  120A  158A  	fcall	_I2C_Master_Wait
  5118  0BFD                     l1936:
  5119                           
  5120                           ;I2C.c: 68:     SSPBUF = d;
  5121  0BFD  1283               	bcf	3,5	;RP0=0, select bank0
  5122  0BFE  1303               	bcf	3,6	;RP1=0, select bank0
  5123  0BFF  0820               	movf	I2C_Master_Write@d,w
  5124  0C00  0093               	movwf	19	;volatile
  5125  0C01                     l47:
  5126  0C01  0008               	return
  5127  0C02                     __end_of_I2C_Master_Write:
  5128                           
  5129                           	psect	text21
  5130  0BEF                     __ptext21:	
  5131 ;; *************** function _I2C_Master_Stop *****************
  5132 ;; Defined at:
  5133 ;;		line 55 in file "I2C.c"
  5134 ;; Parameters:    Size  Location     Type
  5135 ;;		None
  5136 ;; Auto vars:     Size  Location     Type
  5137 ;;		None
  5138 ;; Return value:  Size  Location     Type
  5139 ;;                  1    wreg      void 
  5140 ;; Registers used:
  5141 ;;		wreg, status,2, status,0, pclath, cstack
  5142 ;; Tracked objects:
  5143 ;;		On entry : 0/0
  5144 ;;		On exit  : 0/0
  5145 ;;		Unchanged: 0/0
  5146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5147 ;;      Params:         0       0       0       0       0
  5148 ;;      Locals:         0       0       0       0       0
  5149 ;;      Temps:          0       0       0       0       0
  5150 ;;      Totals:         0       0       0       0       0
  5151 ;;Total ram usage:        0 bytes
  5152 ;; Hardware stack levels used:    1
  5153 ;; Hardware stack levels required when called:    3
  5154 ;; This function calls:
  5155 ;;		_I2C_Master_Wait
  5156 ;; This function is called by:
  5157 ;;		_main
  5158 ;; This function uses a non-reentrant model
  5159 ;;
  5160                           
  5161                           
  5162                           ;psect for function _I2C_Master_Stop
  5163  0BEF                     _I2C_Master_Stop:
  5164  0BEF                     l1930:	
  5165                           ;incstack = 0
  5166                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  5167                           
  5168                           
  5169                           ;I2C.c: 57:     I2C_Master_Wait();
  5170  0BEF  120A  158A  2402  120A  158A  	fcall	_I2C_Master_Wait
  5171  0BF4                     l1932:
  5172                           
  5173                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  5174  0BF4  1683               	bsf	3,5	;RP0=1, select bank1
  5175  0BF5  1303               	bcf	3,6	;RP1=0, select bank1
  5176  0BF6  1511               	bsf	17,2	;volatile
  5177  0BF7                     l44:
  5178  0BF7  0008               	return
  5179  0BF8                     __end_of_I2C_Master_Stop:
  5180                           
  5181                           	psect	text22
  5182  0BE6                     __ptext22:	
  5183 ;; *************** function _I2C_Master_Start *****************
  5184 ;; Defined at:
  5185 ;;		line 39 in file "I2C.c"
  5186 ;; Parameters:    Size  Location     Type
  5187 ;;		None
  5188 ;; Auto vars:     Size  Location     Type
  5189 ;;		None
  5190 ;; Return value:  Size  Location     Type
  5191 ;;                  1    wreg      void 
  5192 ;; Registers used:
  5193 ;;		wreg, status,2, status,0, pclath, cstack
  5194 ;; Tracked objects:
  5195 ;;		On entry : 0/0
  5196 ;;		On exit  : 0/0
  5197 ;;		Unchanged: 0/0
  5198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5199 ;;      Params:         0       0       0       0       0
  5200 ;;      Locals:         0       0       0       0       0
  5201 ;;      Temps:          0       0       0       0       0
  5202 ;;      Totals:         0       0       0       0       0
  5203 ;;Total ram usage:        0 bytes
  5204 ;; Hardware stack levels used:    1
  5205 ;; Hardware stack levels required when called:    3
  5206 ;; This function calls:
  5207 ;;		_I2C_Master_Wait
  5208 ;; This function is called by:
  5209 ;;		_main
  5210 ;; This function uses a non-reentrant model
  5211 ;;
  5212                           
  5213                           
  5214                           ;psect for function _I2C_Master_Start
  5215  0BE6                     _I2C_Master_Start:
  5216  0BE6                     l1926:	
  5217                           ;incstack = 0
  5218                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  5219                           
  5220                           
  5221                           ;I2C.c: 41:     I2C_Master_Wait();
  5222  0BE6  120A  158A  2402  120A  158A  	fcall	_I2C_Master_Wait
  5223  0BEB                     l1928:
  5224                           
  5225                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  5226  0BEB  1683               	bsf	3,5	;RP0=1, select bank1
  5227  0BEC  1303               	bcf	3,6	;RP1=0, select bank1
  5228  0BED  1411               	bsf	17,0	;volatile
  5229  0BEE                     l38:
  5230  0BEE  0008               	return
  5231  0BEF                     __end_of_I2C_Master_Start:
  5232                           
  5233                           	psect	text23
  5234  07CD                     __ptext23:	
  5235 ;; *************** function _I2C_Master_Read *****************
  5236 ;; Defined at:
  5237 ;;		line 74 in file "I2C.c"
  5238 ;; Parameters:    Size  Location     Type
  5239 ;;  a               2    0[BANK0 ] unsigned short 
  5240 ;; Auto vars:     Size  Location     Type
  5241 ;;  temp            2    4[BANK0 ] unsigned short 
  5242 ;; Return value:  Size  Location     Type
  5243 ;;                  2    0[BANK0 ] unsigned short 
  5244 ;; Registers used:
  5245 ;;		wreg, status,2, status,0, pclath, cstack
  5246 ;; Tracked objects:
  5247 ;;		On entry : 0/0
  5248 ;;		On exit  : 0/0
  5249 ;;		Unchanged: 0/0
  5250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5251 ;;      Params:         0       2       0       0       0
  5252 ;;      Locals:         0       2       0       0       0
  5253 ;;      Temps:          0       2       0       0       0
  5254 ;;      Totals:         0       6       0       0       0
  5255 ;;Total ram usage:        6 bytes
  5256 ;; Hardware stack levels used:    1
  5257 ;; Hardware stack levels required when called:    3
  5258 ;; This function calls:
  5259 ;;		_I2C_Master_Wait
  5260 ;; This function is called by:
  5261 ;;		_main
  5262 ;; This function uses a non-reentrant model
  5263 ;;
  5264                           
  5265                           
  5266                           ;psect for function _I2C_Master_Read
  5267  07CD                     _I2C_Master_Read:
  5268  07CD                     l1938:	
  5269                           ;incstack = 0
  5270                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  5271                           
  5272                           
  5273                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  5274  07CD  120A  158A  2402  120A  118A  	fcall	_I2C_Master_Wait
  5275  07D2                     l1940:
  5276                           
  5277                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  5278  07D2  1683               	bsf	3,5	;RP0=1, select bank1
  5279  07D3  1303               	bcf	3,6	;RP1=0, select bank1
  5280  07D4  1591               	bsf	17,3	;volatile
  5281                           
  5282                           ;I2C.c: 79:     I2C_Master_Wait();
  5283  07D5  120A  158A  2402  120A  118A  	fcall	_I2C_Master_Wait
  5284  07DA                     l1942:
  5285                           
  5286                           ;I2C.c: 80:     temp = SSPBUF;
  5287  07DA  1283               	bcf	3,5	;RP0=0, select bank0
  5288  07DB  1303               	bcf	3,6	;RP1=0, select bank0
  5289  07DC  0813               	movf	19,w	;volatile
  5290  07DD  00A2               	movwf	??_I2C_Master_Read
  5291  07DE  01A3               	clrf	??_I2C_Master_Read+1
  5292  07DF  0822               	movf	??_I2C_Master_Read,w
  5293  07E0  00A4               	movwf	I2C_Master_Read@temp
  5294  07E1  0823               	movf	??_I2C_Master_Read+1,w
  5295  07E2  00A5               	movwf	I2C_Master_Read@temp+1
  5296  07E3                     l1944:
  5297                           
  5298                           ;I2C.c: 81:     I2C_Master_Wait();
  5299  07E3  120A  158A  2402  120A  118A  	fcall	_I2C_Master_Wait
  5300  07E8                     l1946:
  5301                           
  5302                           ;I2C.c: 82:     if(a == 1){
  5303  07E8  1283               	bcf	3,5	;RP0=0, select bank0
  5304  07E9  1303               	bcf	3,6	;RP1=0, select bank0
  5305  07EA  0320               	decf	I2C_Master_Read@a,w
  5306  07EB  0421               	iorwf	I2C_Master_Read@a+1,w
  5307  07EC  1D03               	btfss	3,2
  5308  07ED  2FEF               	goto	u1471
  5309  07EE  2FF0               	goto	u1470
  5310  07EF                     u1471:
  5311  07EF  2FF4               	goto	l50
  5312  07F0                     u1470:
  5313  07F0                     l1948:
  5314                           
  5315                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  5316  07F0  1683               	bsf	3,5	;RP0=1, select bank1
  5317  07F1  1303               	bcf	3,6	;RP1=0, select bank1
  5318  07F2  1291               	bcf	17,5	;volatile
  5319                           
  5320                           ;I2C.c: 84:     }else{
  5321  07F3  2FF7               	goto	l51
  5322  07F4                     l50:
  5323                           
  5324                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  5325  07F4  1683               	bsf	3,5	;RP0=1, select bank1
  5326  07F5  1303               	bcf	3,6	;RP1=0, select bank1
  5327  07F6  1691               	bsf	17,5	;volatile
  5328  07F7                     l51:	
  5329                           ;I2C.c: 86:     }
  5330                           
  5331                           
  5332                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  5333  07F7  1611               	bsf	17,4	;volatile
  5334  07F8                     l1950:
  5335                           
  5336                           ;I2C.c: 88:     return temp;
  5337  07F8  1283               	bcf	3,5	;RP0=0, select bank0
  5338  07F9  1303               	bcf	3,6	;RP1=0, select bank0
  5339  07FA  0825               	movf	I2C_Master_Read@temp+1,w
  5340  07FB  00A1               	movwf	?_I2C_Master_Read+1
  5341  07FC  0824               	movf	I2C_Master_Read@temp,w
  5342  07FD  00A0               	movwf	?_I2C_Master_Read
  5343  07FE                     l52:
  5344  07FE  0008               	return
  5345  07FF                     __end_of_I2C_Master_Read:
  5346                           
  5347                           	psect	text24
  5348  0C02                     __ptext24:	
  5349 ;; *************** function _I2C_Master_Wait *****************
  5350 ;; Defined at:
  5351 ;;		line 32 in file "I2C.c"
  5352 ;; Parameters:    Size  Location     Type
  5353 ;;		None
  5354 ;; Auto vars:     Size  Location     Type
  5355 ;;		None
  5356 ;; Return value:  Size  Location     Type
  5357 ;;                  1    wreg      void 
  5358 ;; Registers used:
  5359 ;;		wreg, status,2
  5360 ;; Tracked objects:
  5361 ;;		On entry : 0/0
  5362 ;;		On exit  : 0/0
  5363 ;;		Unchanged: 0/0
  5364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5365 ;;      Params:         0       0       0       0       0
  5366 ;;      Locals:         0       0       0       0       0
  5367 ;;      Temps:          0       0       0       0       0
  5368 ;;      Totals:         0       0       0       0       0
  5369 ;;Total ram usage:        0 bytes
  5370 ;; Hardware stack levels used:    1
  5371 ;; Hardware stack levels required when called:    2
  5372 ;; This function calls:
  5373 ;;		Nothing
  5374 ;; This function is called by:
  5375 ;;		_I2C_Master_Start
  5376 ;;		_I2C_Master_Stop
  5377 ;;		_I2C_Master_Write
  5378 ;;		_I2C_Master_Read
  5379 ;;		_I2C_Master_RepeatedStart
  5380 ;; This function uses a non-reentrant model
  5381 ;;
  5382                           
  5383                           
  5384                           ;psect for function _I2C_Master_Wait
  5385  0C02                     _I2C_Master_Wait:
  5386  0C02                     l1846:	
  5387                           ;incstack = 0
  5388                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  5389                           
  5390  0C02                     l32:	
  5391                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  5392                           
  5393  0C02  1683               	bsf	3,5	;RP0=1, select bank1
  5394  0C03  1303               	bcf	3,6	;RP1=0, select bank1
  5395  0C04  1914               	btfsc	20,2	;volatile
  5396  0C05  2C07               	goto	u1311
  5397  0C06  2C08               	goto	u1310
  5398  0C07                     u1311:
  5399  0C07  2C02               	goto	l32
  5400  0C08                     u1310:
  5401  0C08                     l1848:
  5402  0C08  0811               	movf	17,w	;volatile
  5403  0C09  391F               	andlw	31
  5404  0C0A  1D03               	btfss	3,2
  5405  0C0B  2C0D               	goto	u1321
  5406  0C0C  2C0E               	goto	u1320
  5407  0C0D                     u1321:
  5408  0C0D  2C02               	goto	l32
  5409  0C0E                     u1320:
  5410  0C0E                     l35:
  5411  0C0E  0008               	return
  5412  0C0F                     __end_of_I2C_Master_Wait:
  5413                           
  5414                           	psect	text25
  5415  05AB                     __ptext25:	
  5416 ;; *************** function _isr *****************
  5417 ;; Defined at:
  5418 ;;		line 102 in file "master_main.c"
  5419 ;; Parameters:    Size  Location     Type
  5420 ;;		None
  5421 ;; Auto vars:     Size  Location     Type
  5422 ;;		None
  5423 ;; Return value:  Size  Location     Type
  5424 ;;                  1    wreg      void 
  5425 ;; Registers used:
  5426 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5427 ;; Tracked objects:
  5428 ;;		On entry : 0/0
  5429 ;;		On exit  : 0/0
  5430 ;;		Unchanged: 0/0
  5431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5432 ;;      Params:         0       0       0       0       0
  5433 ;;      Locals:         0       0       0       0       0
  5434 ;;      Temps:          7       0       0       0       0
  5435 ;;      Totals:         7       0       0       0       0
  5436 ;;Total ram usage:        7 bytes
  5437 ;; Hardware stack levels used:    1
  5438 ;; Hardware stack levels required when called:    1
  5439 ;; This function calls:
  5440 ;;		___bmul
  5441 ;; This function is called by:
  5442 ;;		Interrupt level 1
  5443 ;; This function uses a non-reentrant model
  5444 ;;
  5445                           
  5446                           
  5447                           ;psect for function _isr
  5448  05AB                     _isr:
  5449  05AB                     i1l2326:
  5450                           
  5451                           ;master_main.c: 104:                     break;
  5452  05AB  1D0B               	btfss	11,2	;volatile
  5453  05AC  2DAE               	goto	u218_21
  5454  05AD  2DAF               	goto	u218_20
  5455  05AE                     u218_21:
  5456  05AE  2DB6               	goto	i1l2332
  5457  05AF                     u218_20:
  5458  05AF                     i1l2328:
  5459                           
  5460                           ;master_main.c: 105:             }
  5461  05AF  3001               	movlw	1
  5462  05B0  00F4               	movwf	??_isr
  5463  05B1  0874               	movf	??_isr,w
  5464  05B2  1283               	bcf	3,5	;RP0=0, select bank0
  5465  05B3  1303               	bcf	3,6	;RP1=0, select bank0
  5466  05B4  07DE               	addwf	_cont,f
  5467  05B5                     i1l2330:
  5468                           
  5469                           ;master_main.c: 106: 
  5470  05B5  110B               	bcf	11,2	;volatile
  5471  05B6                     i1l2332:
  5472                           
  5473                           ;master_main.c: 109:                 unidad = val_USART;
  5474  05B6  1283               	bcf	3,5	;RP0=0, select bank0
  5475  05B7  1303               	bcf	3,6	;RP1=0, select bank0
  5476  05B8  1E8C               	btfss	12,5	;volatile
  5477  05B9  2DBB               	goto	u219_21
  5478  05BA  2DBC               	goto	u219_20
  5479  05BB                     u219_21:
  5480  05BB  2E7A               	goto	i1l2390
  5481  05BC                     u219_20:
  5482  05BC                     i1l2334:
  5483                           
  5484                           ;master_main.c: 111:                 d_flag = 1;
  5485  05BC  300D               	movlw	13
  5486  05BD  061A               	xorwf	26,w	;volatile
  5487  05BE  1D03               	btfss	3,2
  5488  05BF  2DC1               	goto	u220_21
  5489  05C0  2DC2               	goto	u220_20
  5490  05C1                     u220_21:
  5491  05C1  2DC8               	goto	i1l2338
  5492  05C2                     u220_20:
  5493  05C2                     i1l2336:
  5494                           
  5495                           ;master_main.c: 113:             else if (d_flag == 1){
  5496  05C2  0860               	movf	_contador,w
  5497  05C3  00F4               	movwf	??_isr
  5498  05C4  0874               	movf	??_isr,w
  5499  05C5  00E1               	movwf	_bandera
  5500                           
  5501                           ;master_main.c: 114:                 contador = (unidad*10)+val_USART;
  5502  05C6  3002               	movlw	2
  5503  05C7  0086               	movwf	6	;volatile
  5504  05C8                     i1l2338:
  5505                           
  5506                           ;master_main.c: 117:                 c_flag = 1;
  5507  05C8  300D               	movlw	13
  5508  05C9  061A               	xorwf	26,w	;volatile
  5509  05CA  1903               	btfsc	3,2
  5510  05CB  2DCD               	goto	u221_21
  5511  05CC  2DCE               	goto	u221_20
  5512  05CD                     u221_21:
  5513  05CD  2E7A               	goto	i1l2390
  5514  05CE                     u221_20:
  5515  05CE                     i1l2340:
  5516                           
  5517                           ;master_main.c: 118:             }
  5518  05CE  081A               	movf	26,w	;volatile
  5519  05CF  00F4               	movwf	??_isr
  5520  05D0  0874               	movf	??_isr,w
  5521  05D1  00E2               	movwf	_RC_temp
  5522                           
  5523                           ;master_main.c: 120:                 contador = (unidad*100)+(decena*10)+val_USART;
  5524  05D2  2E00               	goto	i1l2362
  5525  05D3                     i1l2342:
  5526                           
  5527                           ;master_main.c: 122:                 c_flag = 1;
  5528  05D3  01FB               	clrf	_val_USART
  5529                           
  5530                           ;master_main.c: 123:             }
  5531  05D4  2E28               	goto	i1l2364
  5532  05D5                     i1l272:	
  5533                           ;master_main.c: 124:         }
  5534                           
  5535                           
  5536                           ;master_main.c: 125:     }
  5537  05D5  01FB               	clrf	_val_USART
  5538  05D6  0AFB               	incf	_val_USART,f
  5539                           
  5540                           ;master_main.c: 126: 
  5541  05D7  2E28               	goto	i1l2364
  5542  05D8                     i1l2344:
  5543                           
  5544                           ;master_main.c: 128: 
  5545  05D8  3002               	movlw	2
  5546  05D9  00F4               	movwf	??_isr
  5547  05DA  0874               	movf	??_isr,w
  5548  05DB  00FB               	movwf	_val_USART
  5549                           
  5550                           ;master_main.c: 129:         if(guia==0x00){
  5551  05DC  2E28               	goto	i1l2364
  5552  05DD                     i1l2346:
  5553                           
  5554                           ;master_main.c: 131:             guia = 0x01;
  5555  05DD  3003               	movlw	3
  5556  05DE  00F4               	movwf	??_isr
  5557  05DF  0874               	movf	??_isr,w
  5558  05E0  00FB               	movwf	_val_USART
  5559                           
  5560                           ;master_main.c: 132:         }else if(guia==0x01){
  5561  05E1  2E28               	goto	i1l2364
  5562  05E2                     i1l2348:
  5563                           
  5564                           ;master_main.c: 134:             guia =0x02;
  5565  05E2  3004               	movlw	4
  5566  05E3  00F4               	movwf	??_isr
  5567  05E4  0874               	movf	??_isr,w
  5568  05E5  00FB               	movwf	_val_USART
  5569                           
  5570                           ;master_main.c: 135:         } else if(guia==0x02){
  5571  05E6  2E28               	goto	i1l2364
  5572  05E7                     i1l2350:
  5573                           
  5574                           ;master_main.c: 137:             guia = 0x03;
  5575  05E7  3005               	movlw	5
  5576  05E8  00F4               	movwf	??_isr
  5577  05E9  0874               	movf	??_isr,w
  5578  05EA  00FB               	movwf	_val_USART
  5579                           
  5580                           ;master_main.c: 138:         } else if(guia==0x03){
  5581  05EB  2E28               	goto	i1l2364
  5582  05EC                     i1l2352:
  5583                           
  5584                           ;master_main.c: 140:             guia = 0x04;
  5585  05EC  3006               	movlw	6
  5586  05ED  00F4               	movwf	??_isr
  5587  05EE  0874               	movf	??_isr,w
  5588  05EF  00FB               	movwf	_val_USART
  5589                           
  5590                           ;master_main.c: 141:         }else if(guia==0x04){
  5591  05F0  2E28               	goto	i1l2364
  5592  05F1                     i1l2354:
  5593                           
  5594                           ;master_main.c: 143:             guia = 0x05;
  5595  05F1  3007               	movlw	7
  5596  05F2  00F4               	movwf	??_isr
  5597  05F3  0874               	movf	??_isr,w
  5598  05F4  00FB               	movwf	_val_USART
  5599                           
  5600                           ;master_main.c: 144:         }else if(guia==0x05){
  5601  05F5  2E28               	goto	i1l2364
  5602  05F6                     i1l2356:
  5603                           
  5604                           ;master_main.c: 146:             guia = 0x06;
  5605  05F6  3008               	movlw	8
  5606  05F7  00F4               	movwf	??_isr
  5607  05F8  0874               	movf	??_isr,w
  5608  05F9  00FB               	movwf	_val_USART
  5609                           
  5610                           ;master_main.c: 147:         } else if(guia==0x06){
  5611  05FA  2E28               	goto	i1l2364
  5612  05FB                     i1l2358:
  5613                           
  5614                           ;master_main.c: 149:             guia = 0x07;
  5615  05FB  3009               	movlw	9
  5616  05FC  00F4               	movwf	??_isr
  5617  05FD  0874               	movf	??_isr,w
  5618  05FE  00FB               	movwf	_val_USART
  5619                           
  5620                           ;master_main.c: 150:         } else if(guia==0x07){
  5621  05FF  2E28               	goto	i1l2364
  5622  0600                     i1l2362:
  5623  0600  0862               	movf	_RC_temp,w
  5624  0601  00F4               	movwf	??_isr
  5625  0602  01F5               	clrf	??_isr+1
  5626                           
  5627                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5628                           ; Switch size 1, requested type "simple"
  5629                           ; Number of cases is 1, Range of values is 0 to 0
  5630                           ; switch strategies available:
  5631                           ; Name         Instructions Cycles
  5632                           ; simple_byte            4     3 (average)
  5633                           ; direct_byte           11     8 (fixed)
  5634                           ; jumptable            260     6 (fixed)
  5635                           ;	Chosen strategy is simple_byte
  5636  0603  0875               	movf	??_isr+1,w
  5637  0604  3A00               	xorlw	0	; case 0
  5638  0605  1903               	skipnz
  5639  0606  2E08               	goto	i1l2632
  5640  0607  2E28               	goto	i1l2364
  5641  0608                     i1l2632:
  5642                           
  5643                           ; Switch size 1, requested type "simple"
  5644                           ; Number of cases is 10, Range of values is 48 to 57
  5645                           ; switch strategies available:
  5646                           ; Name         Instructions Cycles
  5647                           ; simple_byte           31    16 (average)
  5648                           ; direct_byte           41    11 (fixed)
  5649                           ; jumptable            263     9 (fixed)
  5650                           ;	Chosen strategy is simple_byte
  5651  0608  0874               	movf	??_isr,w
  5652  0609  3A30               	xorlw	48	; case 48
  5653  060A  1903               	skipnz
  5654  060B  2DD3               	goto	i1l2342
  5655  060C  3A01               	xorlw	1	; case 49
  5656  060D  1903               	skipnz
  5657  060E  2DD5               	goto	i1l272
  5658  060F  3A03               	xorlw	3	; case 50
  5659  0610  1903               	skipnz
  5660  0611  2DD8               	goto	i1l2344
  5661  0612  3A01               	xorlw	1	; case 51
  5662  0613  1903               	skipnz
  5663  0614  2DDD               	goto	i1l2346
  5664  0615  3A07               	xorlw	7	; case 52
  5665  0616  1903               	skipnz
  5666  0617  2DE2               	goto	i1l2348
  5667  0618  3A01               	xorlw	1	; case 53
  5668  0619  1903               	skipnz
  5669  061A  2DE7               	goto	i1l2350
  5670  061B  3A03               	xorlw	3	; case 54
  5671  061C  1903               	skipnz
  5672  061D  2DEC               	goto	i1l2352
  5673  061E  3A01               	xorlw	1	; case 55
  5674  061F  1903               	skipnz
  5675  0620  2DF1               	goto	i1l2354
  5676  0621  3A0F               	xorlw	15	; case 56
  5677  0622  1903               	skipnz
  5678  0623  2DF6               	goto	i1l2356
  5679  0624  3A01               	xorlw	1	; case 57
  5680  0625  1903               	skipnz
  5681  0626  2DFB               	goto	i1l2358
  5682  0627  2E28               	goto	i1l2364
  5683  0628                     i1l2364:
  5684                           
  5685                           ;master_main.c: 153:         }else if(guia==0x08){
  5686  0628  036F               	decf	_u_flag,w
  5687  0629  1D03               	btfss	3,2
  5688  062A  2E2C               	goto	u222_21
  5689  062B  2E2D               	goto	u222_20
  5690  062C                     u222_21:
  5691  062C  2E39               	goto	i1l2372
  5692  062D                     u222_20:
  5693  062D                     i1l2366:
  5694                           
  5695                           ;master_main.c: 154:             TXREG = 0x2D;
  5696  062D  087B               	movf	_val_USART,w
  5697  062E  00F4               	movwf	??_isr
  5698  062F  0874               	movf	??_isr,w
  5699  0630  00E0               	movwf	_contador
  5700                           
  5701                           ;master_main.c: 155:             guia = 0x09;
  5702  0631  087B               	movf	_val_USART,w
  5703  0632  00F4               	movwf	??_isr
  5704  0633  0874               	movf	??_isr,w
  5705  0634  00DA               	movwf	_unidad
  5706  0635                     i1l2368:
  5707                           
  5708                           ;master_main.c: 156:         }else if(guia==0x09){
  5709  0635  01EF               	clrf	_u_flag
  5710  0636                     i1l2370:
  5711                           
  5712                           ;master_main.c: 157:             TXREG = bandera_buzzer+48;
  5713  0636  01DC               	clrf	_d_flag
  5714  0637  0ADC               	incf	_d_flag,f
  5715                           
  5716                           ;master_main.c: 158:             guia = 0x0A;
  5717  0638  2E7A               	goto	i1l2390
  5718  0639                     i1l2372:
  5719  0639  035C               	decf	_d_flag,w
  5720  063A  1D03               	btfss	3,2
  5721  063B  2E3D               	goto	u223_21
  5722  063C  2E3E               	goto	u223_20
  5723  063D                     u223_21:
  5724  063D  2E56               	goto	i1l2382
  5725  063E                     u223_20:
  5726  063E                     i1l2374:
  5727                           
  5728                           ;master_main.c: 160:             TXREG = 0x0D;
  5729  063E  300A               	movlw	10
  5730  063F  00F4               	movwf	??_isr
  5731  0640  0874               	movf	??_isr,w
  5732  0641  00F0               	movwf	___bmul@multiplicand
  5733  0642  085A               	movf	_unidad,w
  5734  0643  120A  158A  242F  120A  118A  	fcall	___bmul
  5735  0648  077B               	addwf	_val_USART,w
  5736  0649  00F5               	movwf	??_isr+1
  5737  064A  0875               	movf	??_isr+1,w
  5738  064B  1283               	bcf	3,5	;RP0=0, select bank0
  5739  064C  1303               	bcf	3,6	;RP1=0, select bank0
  5740  064D  00E0               	movwf	_contador
  5741  064E                     i1l2376:
  5742                           
  5743                           ;master_main.c: 161:             guia = 0x00;
  5744  064E  087B               	movf	_val_USART,w
  5745  064F  00F4               	movwf	??_isr
  5746  0650  0874               	movf	??_isr,w
  5747  0651  00D9               	movwf	_decena
  5748  0652                     i1l2378:
  5749                           
  5750                           ;master_main.c: 162:         }
  5751  0652  01DC               	clrf	_d_flag
  5752  0653                     i1l2380:
  5753                           
  5754                           ;master_main.c: 163: 
  5755  0653  01DB               	clrf	_c_flag
  5756  0654  0ADB               	incf	_c_flag,f
  5757                           
  5758                           ;master_main.c: 164:         TXIF = 0;
  5759  0655  2E7A               	goto	i1l2390
  5760  0656                     i1l2382:
  5761  0656  035B               	decf	_c_flag,w
  5762  0657  1D03               	btfss	3,2
  5763  0658  2E5A               	goto	u224_21
  5764  0659  2E5B               	goto	u224_20
  5765  065A                     u224_21:
  5766  065A  2E7A               	goto	i1l268
  5767  065B                     u224_20:
  5768  065B                     i1l2384:
  5769                           
  5770                           ;master_main.c: 166: 
  5771  065B  300A               	movlw	10
  5772  065C  00F4               	movwf	??_isr
  5773  065D  0874               	movf	??_isr,w
  5774  065E  00F0               	movwf	___bmul@multiplicand
  5775  065F  0859               	movf	_decena,w
  5776  0660  120A  158A  242F  120A  118A  	fcall	___bmul
  5777  0665  00F5               	movwf	??_isr+1
  5778  0666  3064               	movlw	100
  5779  0667  00F6               	movwf	??_isr+2
  5780  0668  0876               	movf	??_isr+2,w
  5781  0669  00F0               	movwf	___bmul@multiplicand
  5782  066A  1283               	bcf	3,5	;RP0=0, select bank0
  5783  066B  1303               	bcf	3,6	;RP1=0, select bank0
  5784  066C  085A               	movf	_unidad,w
  5785  066D  120A  158A  242F  120A  118A  	fcall	___bmul
  5786  0672  0775               	addwf	??_isr+1,w
  5787  0673  077B               	addwf	_val_USART,w
  5788  0674  00F7               	movwf	??_isr+3
  5789  0675  0877               	movf	??_isr+3,w
  5790  0676  1283               	bcf	3,5	;RP0=0, select bank0
  5791  0677  1303               	bcf	3,6	;RP1=0, select bank0
  5792  0678  00E0               	movwf	_contador
  5793  0679  2E52               	goto	i1l2378
  5794  067A                     i1l268:	
  5795                           ;master_main.c: 170: void main (void){
  5796                           
  5797  067A                     i1l2390:
  5798                           
  5799                           ;master_main.c: 173:     Lcd_Clear();
  5800  067A  1E0C               	btfss	12,4	;volatile
  5801  067B  2E7D               	goto	u225_21
  5802  067C  2E7E               	goto	u225_20
  5803  067D                     u225_21:
  5804  067D  2F08               	goto	i1l308
  5805  067E                     u225_20:
  5806  067E                     i1l2392:
  5807                           
  5808                           ;master_main.c: 175:     Lcd_Write_String(" S1:   S2:   S3:");
  5809  067E  087C               	movf	_guia,w
  5810  067F  1D03               	btfss	3,2
  5811  0680  2E82               	goto	u226_21
  5812  0681  2E83               	goto	u226_20
  5813  0682                     u226_21:
  5814  0682  2E88               	goto	i1l2398
  5815  0683                     u226_20:
  5816  0683                     i1l2394:
  5817                           
  5818                           ;master_main.c: 176:     while(1){
  5819  0683  087D               	movf	_POS1_LDR,w
  5820  0684  0099               	movwf	25	;volatile
  5821  0685                     i1l2396:
  5822                           
  5823                           ;master_main.c: 177: 
  5824  0685  01FC               	clrf	_guia
  5825  0686  0AFC               	incf	_guia,f
  5826                           
  5827                           ;master_main.c: 178:         I2C_Master_Start();
  5828  0687  2F07               	goto	i1l2442
  5829  0688                     i1l2398:
  5830  0688  037C               	decf	_guia,w
  5831  0689  1D03               	btfss	3,2
  5832  068A  2E8C               	goto	u227_21
  5833  068B  2E8D               	goto	u227_20
  5834  068C                     u227_21:
  5835  068C  2E94               	goto	i1l2402
  5836  068D                     u227_20:
  5837  068D                     i1l2400:
  5838                           
  5839                           ;master_main.c: 179:         I2C_Master_Write(0x71);
  5840  068D  302E               	movlw	46
  5841  068E  0099               	movwf	25	;volatile
  5842                           
  5843                           ;master_main.c: 180:         valor_ADC = I2C_Master_Read(0);
  5844  068F  3002               	movlw	2
  5845  0690  00F4               	movwf	??_isr
  5846  0691  0874               	movf	??_isr,w
  5847  0692  00FC               	movwf	_guia
  5848                           
  5849                           ;master_main.c: 181:         I2C_Master_Stop();
  5850  0693  2F07               	goto	i1l2442
  5851  0694                     i1l2402:
  5852  0694  3002               	movlw	2
  5853  0695  067C               	xorwf	_guia,w
  5854  0696  1D03               	btfss	3,2
  5855  0697  2E99               	goto	u228_21
  5856  0698  2E9A               	goto	u228_20
  5857  0699                     u228_21:
  5858  0699  2EA1               	goto	i1l2406
  5859  069A                     u228_20:
  5860  069A                     i1l2404:
  5861                           
  5862                           ;master_main.c: 182:         _delay((unsigned long)((310)*(8000000/4000.0)));
  5863  069A  086B               	movf	_POS2_LDR,w
  5864  069B  0099               	movwf	25	;volatile
  5865                           
  5866                           ;master_main.c: 183: 
  5867  069C  3003               	movlw	3
  5868  069D  00F4               	movwf	??_isr
  5869  069E  0874               	movf	??_isr,w
  5870  069F  00FC               	movwf	_guia
  5871                           
  5872                           ;master_main.c: 184: 
  5873  06A0  2F07               	goto	i1l2442
  5874  06A1                     i1l2406:
  5875  06A1  3003               	movlw	3
  5876  06A2  067C               	xorwf	_guia,w
  5877  06A3  1D03               	btfss	3,2
  5878  06A4  2EA6               	goto	u229_21
  5879  06A5  2EA7               	goto	u229_20
  5880  06A6                     u229_21:
  5881  06A6  2EAE               	goto	i1l2410
  5882  06A7                     u229_20:
  5883  06A7                     i1l2408:
  5884                           
  5885                           ;master_main.c: 185:         I2C_Master_Start();
  5886  06A7  086A               	movf	_POS3_LDR,w
  5887  06A8  0099               	movwf	25	;volatile
  5888                           
  5889                           ;master_main.c: 186:         I2C_Master_Write(0x81);
  5890  06A9  3004               	movlw	4
  5891  06AA  00F4               	movwf	??_isr
  5892  06AB  0874               	movf	??_isr,w
  5893  06AC  00FC               	movwf	_guia
  5894                           
  5895                           ;master_main.c: 187:         T_byte1 = I2C_Master_Read(0);
  5896  06AD  2F07               	goto	i1l2442
  5897  06AE                     i1l2410:
  5898  06AE  3004               	movlw	4
  5899  06AF  067C               	xorwf	_guia,w
  5900  06B0  1D03               	btfss	3,2
  5901  06B1  2EB3               	goto	u230_21
  5902  06B2  2EB4               	goto	u230_20
  5903  06B3                     u230_21:
  5904  06B3  2EBB               	goto	i1l2414
  5905  06B4                     u230_20:
  5906  06B4                     i1l2412:
  5907                           
  5908                           ;master_main.c: 188:         I2C_Master_Stop();
  5909  06B4  302D               	movlw	45
  5910  06B5  0099               	movwf	25	;volatile
  5911                           
  5912                           ;master_main.c: 189:         _delay((unsigned long)((310)*(8000000/4000.0)));
  5913  06B6  3005               	movlw	5
  5914  06B7  00F4               	movwf	??_isr
  5915  06B8  0874               	movf	??_isr,w
  5916  06B9  00FC               	movwf	_guia
  5917                           
  5918                           ;master_main.c: 190: 
  5919  06BA  2F07               	goto	i1l2442
  5920  06BB                     i1l2414:
  5921  06BB  3005               	movlw	5
  5922  06BC  067C               	xorwf	_guia,w
  5923  06BD  1D03               	btfss	3,2
  5924  06BE  2EC0               	goto	u231_21
  5925  06BF  2EC1               	goto	u231_20
  5926  06C0                     u231_21:
  5927  06C0  2EC8               	goto	i1l2418
  5928  06C1                     u231_20:
  5929  06C1                     i1l2416:
  5930                           
  5931                           ;master_main.c: 191:         moverVentilador();
  5932  06C1  0869               	movf	_POS1_TMP,w
  5933  06C2  0099               	movwf	25	;volatile
  5934                           
  5935                           ;master_main.c: 192: 
  5936  06C3  3006               	movlw	6
  5937  06C4  00F4               	movwf	??_isr
  5938  06C5  0874               	movf	??_isr,w
  5939  06C6  00FC               	movwf	_guia
  5940                           
  5941                           ;master_main.c: 193:         I2C_Master_Start();
  5942  06C7  2F07               	goto	i1l2442
  5943  06C8                     i1l2418:
  5944  06C8  3006               	movlw	6
  5945  06C9  067C               	xorwf	_guia,w
  5946  06CA  1D03               	btfss	3,2
  5947  06CB  2ECD               	goto	u232_21
  5948  06CC  2ECE               	goto	u232_20
  5949  06CD                     u232_21:
  5950  06CD  2ED5               	goto	i1l2422
  5951  06CE                     u232_20:
  5952  06CE                     i1l2420:
  5953                           
  5954                           ;master_main.c: 194:         I2C_Master_Write(0x71);
  5955  06CE  0868               	movf	_POS2_TMP,w
  5956  06CF  0099               	movwf	25	;volatile
  5957                           
  5958                           ;master_main.c: 195:         alarma = I2C_Master_Read(0);
  5959  06D0  3007               	movlw	7
  5960  06D1  00F4               	movwf	??_isr
  5961  06D2  0874               	movf	??_isr,w
  5962  06D3  00FC               	movwf	_guia
  5963                           
  5964                           ;master_main.c: 196:         I2C_Master_Stop();
  5965  06D4  2F07               	goto	i1l2442
  5966  06D5                     i1l2422:
  5967  06D5  3007               	movlw	7
  5968  06D6  067C               	xorwf	_guia,w
  5969  06D7  1D03               	btfss	3,2
  5970  06D8  2EDA               	goto	u233_21
  5971  06D9  2EDB               	goto	u233_20
  5972  06DA                     u233_21:
  5973  06DA  2EE2               	goto	i1l2426
  5974  06DB                     u233_20:
  5975  06DB                     i1l2424:
  5976                           
  5977                           ;master_main.c: 197:         _delay((unsigned long)((310)*(8000000/4000.0)));
  5978  06DB  0867               	movf	_POS3_TMP,w
  5979  06DC  0099               	movwf	25	;volatile
  5980                           
  5981                           ;master_main.c: 198: 
  5982  06DD  3008               	movlw	8
  5983  06DE  00F4               	movwf	??_isr
  5984  06DF  0874               	movf	??_isr,w
  5985  06E0  00FC               	movwf	_guia
  5986                           
  5987                           ;master_main.c: 199:         if(alarma==0xFF){
  5988  06E1  2F07               	goto	i1l2442
  5989  06E2                     i1l2426:
  5990  06E2  3008               	movlw	8
  5991  06E3  067C               	xorwf	_guia,w
  5992  06E4  1D03               	btfss	3,2
  5993  06E5  2EE7               	goto	u234_21
  5994  06E6  2EE8               	goto	u234_20
  5995  06E7                     u234_21:
  5996  06E7  2EEF               	goto	i1l2430
  5997  06E8                     u234_20:
  5998  06E8                     i1l2428:
  5999                           
  6000                           ;master_main.c: 200:             alarmaBuzzer();
  6001  06E8  302D               	movlw	45
  6002  06E9  0099               	movwf	25	;volatile
  6003                           
  6004                           ;master_main.c: 201:             bandera_buzzer = 1;
  6005  06EA  3009               	movlw	9
  6006  06EB  00F4               	movwf	??_isr
  6007  06EC  0874               	movf	??_isr,w
  6008  06ED  00FC               	movwf	_guia
  6009                           
  6010                           ;master_main.c: 202:         }else{
  6011  06EE  2F07               	goto	i1l2442
  6012  06EF                     i1l2430:
  6013  06EF  3009               	movlw	9
  6014  06F0  067C               	xorwf	_guia,w
  6015  06F1  1D03               	btfss	3,2
  6016  06F2  2EF4               	goto	u235_21
  6017  06F3  2EF5               	goto	u235_20
  6018  06F4                     u235_21:
  6019  06F4  2EFD               	goto	i1l2436
  6020  06F5                     u235_20:
  6021  06F5                     i1l2432:
  6022                           
  6023                           ;master_main.c: 203:             bandera_buzzer = 0;
  6024  06F5  085D               	movf	_bandera_buzzer,w
  6025  06F6  3E30               	addlw	48
  6026  06F7  0099               	movwf	25	;volatile
  6027  06F8                     i1l2434:
  6028                           
  6029                           ;master_main.c: 204:             POS1_BZ = 45;
  6030  06F8  300A               	movlw	10
  6031  06F9  00F4               	movwf	??_isr
  6032  06FA  0874               	movf	??_isr,w
  6033  06FB  00FC               	movwf	_guia
  6034                           
  6035                           ;master_main.c: 205:             POS2_BZ = 45;
  6036  06FC  2F07               	goto	i1l2442
  6037  06FD                     i1l2436:
  6038  06FD  300A               	movlw	10
  6039  06FE  067C               	xorwf	_guia,w
  6040  06FF  1D03               	btfss	3,2
  6041  0700  2F02               	goto	u236_21
  6042  0701  2F03               	goto	u236_20
  6043  0702                     u236_21:
  6044  0702  2F07               	goto	i1l302
  6045  0703                     u236_20:
  6046  0703                     i1l2438:
  6047                           
  6048                           ;master_main.c: 206:             POS3_BZ = 45;
  6049  0703  300D               	movlw	13
  6050  0704  0099               	movwf	25	;volatile
  6051  0705                     i1l2440:
  6052                           
  6053                           ;master_main.c: 207:         }
  6054  0705  01FC               	clrf	_guia
  6055  0706  2F07               	goto	i1l2442
  6056  0707                     i1l302:
  6057  0707                     i1l2442:
  6058                           
  6059                           ;master_main.c: 210: 
  6060  0707  120C               	bcf	12,4	;volatile
  6061  0708                     i1l308:
  6062  0708  087A               	movf	??_isr+6,w
  6063  0709  008A               	movwf	10
  6064  070A  0879               	movf	??_isr+5,w
  6065  070B  0084               	movwf	4
  6066  070C  0E78               	swapf	??_isr+4,w
  6067  070D  0083               	movwf	3
  6068  070E  0EFE               	swapf	btemp,f
  6069  070F  0E7E               	swapf	btemp,w
  6070  0710  0009               	retfie
  6071  0711                     __end_of_isr:
  6072                           
  6073                           	psect	intentry
  6074  0004                     __pintentry:	
  6075                           ;incstack = 0
  6076                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6077                           
  6078  0004                     interrupt_function:
  6079  007E                     saved_w	set	btemp
  6080  0004  00FE               	movwf	btemp
  6081  0005  0E03               	swapf	3,w
  6082  0006  00F8               	movwf	??_isr+4
  6083  0007  0804               	movf	4,w
  6084  0008  00F9               	movwf	??_isr+5
  6085  0009  080A               	movf	10,w
  6086  000A  00FA               	movwf	??_isr+6
  6087  000B  120A  118A  2DAB   	ljmp	_isr
  6088                           
  6089                           	psect	text26
  6090  0C2F                     __ptext26:	
  6091 ;; *************** function ___bmul *****************
  6092 ;; Defined at:
  6093 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  6094 ;; Parameters:    Size  Location     Type
  6095 ;;  multiplier      1    wreg     unsigned char 
  6096 ;;  multiplicand    1    0[COMMON] unsigned char 
  6097 ;; Auto vars:     Size  Location     Type
  6098 ;;  multiplier      1    3[COMMON] unsigned char 
  6099 ;;  product         1    2[COMMON] unsigned char 
  6100 ;; Return value:  Size  Location     Type
  6101 ;;                  1    wreg      unsigned char 
  6102 ;; Registers used:
  6103 ;;		wreg, status,2, status,0
  6104 ;; Tracked objects:
  6105 ;;		On entry : 0/0
  6106 ;;		On exit  : 0/0
  6107 ;;		Unchanged: 0/0
  6108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6109 ;;      Params:         1       0       0       0       0
  6110 ;;      Locals:         2       0       0       0       0
  6111 ;;      Temps:          1       0       0       0       0
  6112 ;;      Totals:         4       0       0       0       0
  6113 ;;Total ram usage:        4 bytes
  6114 ;; Hardware stack levels used:    1
  6115 ;; This function calls:
  6116 ;;		Nothing
  6117 ;; This function is called by:
  6118 ;;		_isr
  6119 ;; This function uses a non-reentrant model
  6120 ;;
  6121                           
  6122                           
  6123                           ;psect for function ___bmul
  6124  0C2F                     ___bmul:
  6125                           
  6126                           ;incstack = 0
  6127                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6128                           ;___bmul@multiplier stored from wreg
  6129  0C2F  00F3               	movwf	___bmul@multiplier
  6130  0C30                     i1l2084:
  6131  0C30  01F2               	clrf	___bmul@product
  6132  0C31                     i1l2086:
  6133  0C31  1C73               	btfss	___bmul@multiplier,0
  6134  0C32  2C34               	goto	u155_21
  6135  0C33  2C35               	goto	u155_20
  6136  0C34                     u155_21:
  6137  0C34  2C39               	goto	i1l2090
  6138  0C35                     u155_20:
  6139  0C35                     i1l2088:
  6140  0C35  0870               	movf	___bmul@multiplicand,w
  6141  0C36  00F1               	movwf	??___bmul
  6142  0C37  0871               	movf	??___bmul,w
  6143  0C38  07F2               	addwf	___bmul@product,f
  6144  0C39                     i1l2090:
  6145  0C39  1003               	clrc
  6146  0C3A  0DF0               	rlf	___bmul@multiplicand,f
  6147  0C3B                     i1l2092:
  6148  0C3B  1003               	clrc
  6149  0C3C  0CF3               	rrf	___bmul@multiplier,f
  6150  0C3D  0873               	movf	___bmul@multiplier,w
  6151  0C3E  1D03               	btfss	3,2
  6152  0C3F  2C41               	goto	u156_21
  6153  0C40  2C42               	goto	u156_20
  6154  0C41                     u156_21:
  6155  0C41  2C31               	goto	i1l2086
  6156  0C42                     u156_20:
  6157  0C42                     i1l2094:
  6158  0C42  0872               	movf	___bmul@product,w
  6159  0C43                     i1l474:
  6160  0C43  0008               	return
  6161  0C44                     __end_of___bmul:
  6162  007E                     btemp	set	126	;btemp
  6163  007E                     wtemp0	set	126
  6164                           
  6165                           	psect	config
  6166                           
  6167                           ;Config register CONFIG1 @ 0x2007
  6168                           ;	Oscillator Selection bits
  6169                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  6170                           ;	Watchdog Timer Enable bit
  6171                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  6172                           ;	Power-up Timer Enable bit
  6173                           ;	PWRTE = ON, PWRT enabled
  6174                           ;	RE3/MCLR pin function select bit
  6175                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  6176                           ;	Code Protection bit
  6177                           ;	CP = OFF, Program memory code protection is disabled
  6178                           ;	Data Code Protection bit
  6179                           ;	CPD = OFF, Data memory code protection is disabled
  6180                           ;	Brown Out Reset Selection bits
  6181                           ;	BOREN = OFF, BOR disabled
  6182                           ;	Internal External Switchover bit
  6183                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  6184                           ;	Fail-Safe Clock Monitor Enabled bit
  6185                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  6186                           ;	Low Voltage Programming Enable bit
  6187                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  6188                           ;	In-Circuit Debugger Mode bit
  6189                           ;	DEBUG = 0x1, unprogrammed default
  6190  2007                     	org	8199
  6191  2007  20C4               	dw	8388
  6192                           
  6193                           ;Config register CONFIG2 @ 0x2008
  6194                           ;	Brown-out Reset Selection bit
  6195                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  6196                           ;	Flash Program Memory Self Write Enable bits
  6197                           ;	WRT = OFF, Write protection off
  6198  2008                     	org	8200
  6199  2008  3FFF               	dw	16383

Data Sizes:
    Strings     25
    Constant    0
    Data        1
    BSS         34
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80     54      80
    BANK1            80      0       6
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_4(CODE[1]), STR_3(CODE[5]), STR_2(CODE[3]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___bmul

Critical Paths under _main in BANK0

    _main->___fltol
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    ___fltol->___flmul
    ___flmul->___xxtofl
    _VAL->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    6258
                                             51 BANK0      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                                _VAL
                            ___flmul
                            ___fltol
                           ___xxtofl
                       _alarmaBuzzer
                    _moverVentilador
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     412
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                             14 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _moverVentilador                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _alarmaBuzzer                                         3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     305
                                             40 BANK0     11     7      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2417
                                             14 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) _VAL                                                  6     4      2    1225
                                              8 BANK0      6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     312
                                              5 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0      90
                                              1 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     466
                                              4 BANK0      7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     250
                                              0 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     273
                                              0 BANK0      6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  7     7      0     320
                                              4 COMMON     7     7      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (5) ___bmul                                               4     3      1     320
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _VAL
     ___lwdiv
     ___wmul
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _alarmaBuzzer
   _moverVentilador
   _setup
     _I2C_Master_Init
       ___lldiv

 _isr (ROOT)
   ___bmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       6       7        7.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     36      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      64      12        0.0%
ABS                  0      0      64       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Sep 03 11:54:33 2021

                        pc 0002             ___bmul@product 0072                         l32 0C02  
                       l50 07F4                         l35 0C0E                         l51 07F7  
                       l52 07FE                         l44 0BF7                         l29 0D53  
                       l38 0BEE                         l47 0C01                         l72 0C1B  
                       l81 0DE7                         l66 0BDD                         l90 0CF0  
                       l84 0C7F                         l69 0C5F                         l78 0E3F  
                       fsr 0004        ___wmul@multiplicand 0022        __Umul8_16@word_mpld 0026  
                      l331 0EFD                        l340 0C2B                        l333 0F01  
                      l342 0C2E                        l334 0F0F                        l337 0F83  
                      l345 0CA0                        l450 0CC7                        l720 0D99  
                      l448 0CAF                        l641 0FEA                        l634 0FFF  
                      l644 0FFF                        l484 0EA7                        l843 02FB  
                      l837 038F                        l856 0D07                        l849 0383  
                      l881 0735                        l858 0D19                        l883 07CC  
                      l894 0796                        l895 07A2                        l887 077A  
                      _GIE 005F                        _RE0 0048                        _RE1 0049  
                      _PR2 0092                        _VAL 0F10                        _isr 05AB  
                      fsr0 0004                        indf 0000               ___flmul@aexp 0040  
             ___flmul@bexp 0041               ___flmul@sign 003B               ___flmul@temp 0046  
             ___flmul@prod 0042                       ?_VAL 0028               ___fltol@exp1 0052  
                     l2000 0EC1                       l2010 0EC8                       l2002 0EC2  
                     l2100 0F91                       l2020 0ED4                       l2012 0EC9  
                     l2004 0EC3                       l2110 0FB8                       l2030 0EDB  
                     l2022 0ED5                       l2014 0ECC                       l2006 0EC4  
                     l2200 019C                       l2120 0FC6                       l2112 0FBA  
                     l2104 0F9A                       l2040 0EED                       l2032 0EDD  
                     l2024 0ED6                       l2016 0ED0                       l2008 0EC5  
                     l2210 022C                       l2202 01B9                       l2130 0FEF  
                     l2114 0FBE                       l2122 0FD8                       l2106 0FAF  
                     l2050 0EFA                       l2042 0EF5                       l2034 0EE1  
                     l2026 0ED9                       l2018 0ED1                       l2220 02BE  
                     l2212 0259                       l2204 01D2                       l2140 0040  
                     l2132 0FF4                       l2108 0FB0                       l2300 078C  
                     l2060 0C27                       l2052 0EFB                       l2044 0EF7  
                     l2036 0EE5                       l2028 0EDA                       l2070 0F16  
                     l2222 02C7                       l2230 02DB                       l2214 027F  
                     l2206 01EF                       l2150 0055                       l2142 0041  
                     l2134 002F                       l2310 07BF                       l2302 0790  
                     l2062 0C80                       l2054 0EFC                       l2046 0EF8  
                     l2038 0EE9                       l2080 0F79                       l2072 0F29  
                     l2232 02DF                       l2224 02CB                       l2216 02A7  
                     l2208 021C                       l2160 006D                       l2152 005D  
                     l2144 0046                       l2136 0036                       l2128 0FDF  
                     l2312 07C3                       l2304 079A                       l2064 0C83  
                     l2056 0F02                       l2048 0EF9                       l2082 0F7E  
                     l2074 0F43                       l2250 0330                       l2242 0300  
                     l2234 02E0                       l2226 02CC                       l2218 02B0  
                     l2170 0089                       l2162 0072                       l2154 0062  
                     l2146 004B                       l2138 003C                       l2314 07C4  
                     l2306 07A4                       l2066 0C91                       l2058 0C1C  
                     l2076 0F56                       l2068 0F10                       l2260 0367  
                     l2244 0305                       l2252 0336                       l2236 02E4  
                     l2228 02D5                       l2180 00AC                       l2172 008E  
                     l2164 0077                       l2156 0068                       l2148 0053  
                     l2308 07BA                       l2500 0474                       l2078 0F74  
                     l2270 0387                       l2262 0369                       l2254 0343  
                     l2246 0313                       l2238 02F8                       l2190 013A  
                     l2182 00B9                       l2174 0093                       l2166 007F  
                     l2158 006C                       l2510 04C3                       l2502 04AC  
                     l2264 0377                       l2256 034E                       l2248 0317  
                     l2192 0156                       l2184 00D6                       l2168 0081  
                     l2280 072D                       l2600 05A3                       l2520 04D5  
                     l2512 04C8                       l2504 04B5                       l2266 037B  
                     l2258 035D                       l2194 015F                       l2186 00F2  
                     l2178 009C                       l2098 0F84                       l2290 0758  
                     l2282 073D                       l2274 0714                       l1810 0E40  
                     l2530 04E7                       l2514 04D1                       l2522 04D7  
                     l2506 04BB                       l2450 0390                       l1900 0D81  
                     l2268 037C                       l2196 016F                       l2188 011E  
                     l2292 075F                       l2276 0719                       l1820 0E6F  
                     l1812 0E52                       l2540 04F2                       l2524 04E0  
                     l2516 04D2                       l2532 04E9                       l2508 04BF  
                     l2460 03CF                       l2452 03A9       __end_of_alarmaBuzzer 0CA1  
                     l1902 0D87                       l2198 018C                       l2294 0763  
                     l2286 0746                       l2278 071D                       l1822 0E81  
                     l1814 0E55                       l1830 0E9F                       l2550 0501  
                     l2534 04EE                       l2542 04F4                       l2526 04E4  
                     l2518 04D4                       l2470 0409                       l2462 03D4  
                     l2454 03AF                       l1808 0BDB                       l1904 0D88  
                     l1920 0D10                       l1912 0CF4                       l2296 0771  
                     l2288 074B                       l1824 0E8F                       l1816 0E62  
                     l1840 0D50                       l2560 051E                       l2544 04FA  
                     l2536 04EF                       l2528 04E6                       l2552 0502  
                     l2480 0432                       l2472 040E                       l2464 03E3  
                     l2456 03B4                       l1930 0BEF                       l1850 0C47  
                     l1906 0D8F                       l1922 0D15                       l1914 0CF6  
                     l2298 0781                       l1826 0E90                       l1818 0E66  
                     l1842 0D51                       l1834 0D1A                       l2570 0547  
                     l2562 0526                       l2554 050A                       l2546 04FE  
                     l2538 04F1                       l2490 0462                       l2482 0442  
                     l2474 041D                       l2466 03E8                       l2458 03BF  
                     l1940 07D2                       l1932 0BF4                       l1852 0C48  
                     l1860 0C63                       l1908 0D95                       l1916 0CFD  
                     l1828 0E99                       l1844 0D52                       l1836 0D1E  
                     l2580 0567                       l2572 054B                       l2564 052C  
                     l2556 0510                       l2548 0500                       l2492 0467  
                     l2484 0447                       l2476 0422                       l2468 03F3  
                     l1846 0C02                       l1950 07F8                       l1942 07DA  
                     l1926 0BE6                       l1934 0BF8                       l1854 0C4E  
                     l1870 0C7C                       l1862 0C6B                       l1918 0D01  
                     l1838 0D21                       l2590 058F                       l2582 0571  
                     l2574 0551                       l2566 053D                       l2558 0516  
                     l2494 0468                       l2486 0456                       l2478 0427  
                     l1848 0C08                       l1944 07E3                       l1928 0BEB  
                     l1936 0BFD                       l1856 0C51                       l1960 0E01  
                     l1864 0C6C                       l1880 0CBD                       l1872 0CA1  
                     l2592 0597                       l2584 0579                       l2576 0559  
                     l2568 0543                       l2496 046C                       l2488 045D  
                     l1946 07E8                       l1938 07CD                       l1858 0C5C  
                     l1954 0C0F                       l1970 0E2C                       l1962 0E06  
                     l1866 0C72                       l1890 0D5E                       l1882 0CC3  
                     l1874 0CA5                       l2594 0598                       l2586 0581  
                     l2578 0561                       l2498 0470                       l1948 07F0  
                     l1980 0DAB                       l1972 0E31                       l1964 0E0C  
                     l1956 0DEB                       l1868 0C75                       l1892 0D61  
                     l1876 0CA9                       l2596 059B                       l2588 0589  
                     l1982 0DBC                       l1974 0E37                       l1958 0DF0  
                     l1966 0E15                       l1990 0CDB                       l1894 0D68  
                     l1886 0D54                       l1878 0CB6                       l2598 05A0  
                     l1984 0DC2                       l1976 0D9A                       l1968 0E1B  
                     l1992 0CE3                       l1896 0D6C                       l1888 0D58  
                     l1978 0DA0                       l1986 0CCB                       l1898 0D70  
                     l1994 0EA8                       l1988 0CCE                       l1996 0EAE  
                     l1998 0EB8                       ?_isr 0070                       STR_1 0806  
                     STR_2 081C                       STR_3 0817                       STR_4 081B  
                     u2000 0326                       u2010 0343                       u2011 0342  
                     u2020 035D                       u2100 0780                       u1300 0D31  
                     u2021 035C                       u2005 0321                       u2101 077F  
                     u1310 0C08                       u2030 037B                       u1230 0E52  
                     u1311 0C07                       u2031 037A                       u2015 033F  
                     u1231 0E51                       u1320 0C0E                       u2120 0790  
                     u2040 0719                       u1321 0C0D                       u2025 0359  
                     u2121 078F                       u2041 0718                       u1305 0D2C  
                     u1410 0D81                       u1330 0CA9                       u2130 0796  
                     u2050 071D                       u1250 0E66                       u1411 0D80  
                     u1331 0CA8                       u2131 0795                       u2115 0785  
                     u2051 071C                       u1251 0E65                       u1500 0E1B  
                     u2140 079A                       u2060 073D                       u1501 0E1A  
                     u1405 0D71                       u2141 0799                       u2061 073C  
                     u1245 0E57                       u1430 0D95                       u2150 07AF  
                     u1270 0E81                       u1431 0D94                       u1415 0D7D  
                     u1271 0E80                       u1520 0CF0                       u1360 0CC3  
                     u1440 0D01                       u1600 0FC5                       u2160 07BF  
                     u2080 075E                       u2400 04E0                       u1521 0CEF  
                     u1425 0D89                       u1361 0CC2                       u1345 0CB0  
                     u1441 0D00                       u1601 0FC4                       u2161 07BE  
                     u2081 075D                       u1265 0E68                       u2401 04DF  
                     u1370 0D5E                       u2170 07C3                       u1290 0E9F  
                     u1530 0F01                       u2410 04EE                       u1515 0E23  
                     u1371 0D5D                       u1355 0CB7                       u2171 07C2  
                     u2155 07AA                       u2075 0750                       u1291 0E9E  
                     u1275 0E7D                       u1531 0F00                       u2411 04ED  
                     u1460 0D15                       u1700 006C                       u1620 0FD7  
                     u1540 0C27                       u2420 04FA                       u1461 0D14  
                     u1701 006B                       u1621 0FD6                       u1541 0C26  
                     u1285 0E91                       u2421 04F9                       u1470 07F0  
                     u1390 0D70                       u1710 0072                       u1630 0FDE  
                     u2430 0597                       u1471 07EF                       u1391 0D6F  
                     u1455 0D08                       u1711 0071                       u1631 0FDD  
                     u1615 0FC7                       u2095 0772                       u2431 0596  
                     u1480 0DF0                       u1720 0077                       u2440 05A0  
                     u1481 0DEF                       u1385 0D62                       u1801 017E  
                     u1721 0076                       u2441 059F                       u1802 0185  
                     u1730 008E                       u1650 0FEF                       u1570 0F91  
                     u2370 045D                       u2507 0DA6                       u1811 01AB  
                     u1803 018C                       u1731 008D                       u1651 0FEE  
                     u1571 0F90                       u2371 045C                       u1812 01B2  
                     u1740 0093                       u1660 0FF4                       u1580 0FA8  
                     u2380 04C8                       u2517 0DB7                       u1813 01B9  
                     u1741 0092                       u1661 0FF3                       u1645 0FE1  
                     u2381 04C7                       u1670 0040                       u1590 0FBE  
                     u2390 04D1                       u2527 0DC6                       u1495 0DF8  
                     u1831 01E1                       u1751 00E4                       u1671 003F  
                     u1591 0FBD                       u2391 04D0                       u1920 02CB  
                     u1832 01E8                       u1752 00EB                       u1680 0046  
                     u2537 0C57                       u1921 02CA                       u1905 02A9  
                     u1841 020E                       u1833 01EF                       u1825 01BB  
                     u1761 0100                       u1753 00F2                       u1681 0045  
                     u1585 0FA3                       u2457 03DC                       u1842 0215  
                     u1762 0107                       u1690 004B                       u1915 02C0  
                     u1851 023B                       u1843 021C                       u1771 012C  
                     u1763 010E                       u1691 004A                       u2467 0416  
                     u1940 02DF                       u1860 0265                       u1852 0242  
                     u1772 0133                       u1941 02DE                       u1853 0249  
                     u1781 0148                       u1773 013A                       u2477 044F  
                     u1950 02E4                       u1782 014F                       u1951 02E3  
                     u1935 02CE                       u1871 0271                       u1783 0156  
                     u2487 0C8B                       u1960 02F8                       u1880 028D  
                     u1872 0278                       u2497 0C79                       u1961 02F7  
                     u1873 027F                       u1865 0260                       u1970 02FF  
                     u1971 02FE                       u1891 0299                       u1795 0158  
                     _PEIE 005E                       u1980 0305                       u1892 02A0  
                     u1981 0304                       u1893 02A7                       u1885 0288  
                     u1990 0317                       u1991 0316                       _POS1 006E  
                     _POS2 006D                       _POS3 006C                       _TEMP 00A2  
                     _TMR0 0001                       _TXIE 0464                       _TXIF 0064  
        ?_Lcd_Write_String 0070                       _cont 005E                       _main 0390  
                     _guia 007C                       btemp 007E                       start 000E  
       ??_Lcd_Write_String 0025            __end_of_Lcd_Cmd 0C60          ___bmul@multiplier 0073  
                    ??_VAL 002A                      ??_isr 0074           ?_I2C_Master_Init 002E  
         ?_I2C_Master_Read 0020           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
            ___fltol@sign1 0051                      ?_main 0070            _contador_decena 00A5  
          __end_of___flmul 0390            __end_of___fltol 1000                      _ANSEL 0188  
          __end_of___lldiv 0EA8            __end_of___lwdiv 0D9A                      i1l302 0707  
                    i1l308 0708                      i1l272 05D5                      i1l268 067A  
                    i1l474 0C43    __end_of_moverVentilador 0C2F                      _RCREG 001A  
                    _SPBRG 0099                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
  __size_of_Lcd_Set_Cursor 0058                      _TRISA 0085                      _TRISB 0086  
                    _TRISD 0088                      _SSPIE 0463                      _TRISE 0089  
                    _SSPIF 0063                      _TXREG 0019            _contador_unidad 005F  
                    _setup 0EA8                      pclath 000A                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 0DE8           __end_of_Lcd_Port 0BDE  
          __initialization 0011               __end_of_main 05AB                     ??_main 0053  
       __size_of_Lcd_Clear 000D          ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0020  
       ??_I2C_Master_Start 0020         ??_I2C_Master_Write 0022                     _CCPR1L 0015  
                   _CCPR2L 001B                     ?_setup 0070           _contador_centena 00A4  
                   _ANSELH 0189                     i1l2400 068D                     i1l2090 0C39  
                   i1l2410 06AE                     i1l2402 0694                     i1l2330 05B5  
                   i1l2092 0C3B                     i1l2084 0C30                     i1l2420 06CE  
                   i1l2412 06B4                     i1l2404 069A                     i1l2340 05CE  
                   i1l2332 05B6                     i1l2094 0C42                     i1l2086 0C31  
                   i1l2430 06EF                     i1l2422 06D5                     i1l2414 06BB  
                   i1l2406 06A1                     i1l2350 05E7                     i1l2342 05D3  
                   i1l2334 05BC                     i1l2326 05AB                     i1l2088 0C35  
                   i1l2440 0705                     i1l2432 06F5                     i1l2424 06DB  
                   i1l2416 06C1                     i1l2408 06A7                     i1l2352 05EC  
                   i1l2344 05D8                     i1l2336 05C2                     i1l2328 05AF  
                   i1l2434 06F8                     i1l2426 06E2                     i1l2418 06C8  
                   i1l2442 0707                     i1l2370 0636                     i1l2354 05F1  
                   i1l2346 05DD                     i1l2362 0600                     i1l2338 05C8  
                   i1l2436 06FD                     i1l2428 06E8                     i1l2380 0653  
                   i1l2372 0639                     i1l2356 05F6                     i1l2348 05E2  
                   i1l2364 0628                     i1l2438 0703                     i1l2374 063E  
                   i1l2382 0656                     i1l2366 062D                     i1l2358 05FB  
                   i1l2390 067A                     i1l2392 067E                     i1l2384 065B  
                   i1l2376 064E                     i1l2368 0635                     i1l2632 0608  
                   i1l2394 0683                     i1l2378 0652                     i1l2396 0685  
                   i1l2398 0688                     u220_20 05C2                     u220_21 05C1  
                   u221_20 05CE                     u221_21 05CD                     u230_20 06B4  
                   u222_20 062D                     u230_21 06B3                     u222_21 062C  
                   u231_20 06C1                     u223_20 063E                     u231_21 06C0  
                   u223_21 063D                     u232_20 06CE                     u224_20 065B  
                   u232_21 06CD                     u224_21 065A                     u233_20 06DB  
                   u225_20 067E                     u233_21 06DA                     u225_21 067D  
                   u234_20 06E8                     u226_20 0683                     u218_20 05AF  
                   u234_21 06E7                     u226_21 0682                     u218_21 05AE  
                   u155_20 0C35                     u235_20 06F5                     u227_20 068D  
                   u219_20 05BC                     u155_21 0C34                     u235_21 06F4  
                   u227_21 068C                     u219_21 05BB                     u156_20 0C42  
                   u236_20 0703                     u228_20 069A                     u156_21 0C41  
                   u236_21 0702                     u228_21 0699                     u229_20 06A7  
                   u229_21 06A6                  ??_Lcd_Cmd 0021                     _SPBRGH 009A  
  __size_of_Lcd_Write_Char 0020                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
         __end_of___xxtofl 07CD                     ___bmul 0C2F                     _c_flag 005B  
                   _d_flag 005C                     ___wmul 0CA1                     _decena 0059  
                ??___flmul 0036                     _alarma 0063                  ??___fltol 004C  
                ??___lldiv 0028                  ??___lwdiv 0024                     _u_flag 006F  
                   _unidad 005A           ?_moverVentilador 0070         __size_of__Umul8_16 0029  
    __size_of_alarmaBuzzer 0021                     saved_w 007E            Lcd_Set_Cursor@a 0027  
          Lcd_Set_Cursor@b 0024            Lcd_Set_Cursor@y 0029            Lcd_Set_Cursor@z 0028  
             ___xxtofl@arg 002A               ___xxtofl@exp 0029               ___xxtofl@val 0020  
  __end_of__initialization 002B          __end_of_Lcd_Clear 0C1C                 ___fltol@f1 0048  
      ___bmul@multiplicand 0070             __pcstackCOMMON 0070               __pidataBANK0 07FF  
             _alarmaBuzzer 0C80              __end_of_setup 0F10             _Lcd_Set_Cursor 0DE8  
           _OPTION_REGbits 0081                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
                  ??_setup 0036                 __pbssBANK0 0056                 __pbssBANK1 00A0  
        __end_of__Umul8_16 0D1A                 __pmaintext 0390                    ?___bmul 0070  
                  ?___wmul 0020                 __pintentry 0004  __size_of_Lcd_Write_String 0029  
   __end_of_Lcd_Set_Cursor 0E40                  ?___xxtofl 0020                    _POS1_BZ 0066  
                  _POS2_BZ 0065                    _POS3_BZ 0064                 ??_Lcd_Init 0024  
               ??_Lcd_Port 0020                    _SSPCON2 0091                    _SSPSTAT 0094  
               __stringtab 0800                    _RC_temp 0062             _Lcd_Write_Char 0C60  
                  _Lcd_Cmd 0C44                VAL@variable 0028                    _T_byte1 00A0  
          __size_of___bmul 0015                    ___flmul 002F                    ___fltol 0F84  
                  ___lldiv 0E40            __size_of___wmul 0027                    ___lwdiv 0D54  
                  _bandera 0061            ?_Lcd_Set_Cursor 0024                    __ptext1 0EA8  
                  __ptext2 0D1A                    __ptext3 0E40                    __ptext4 0C1C  
                  __ptext5 0C80                    __ptext6 0711                    __ptext7 0F84  
                  __ptext8 002F                    __ptext9 0CF1               __size_of_VAL 0074  
                _T2CONbits 0012               __size_of_isr 0166                 ??___xxtofl 0024  
 __size_of_I2C_Master_Init 003A   __size_of_I2C_Master_Read 0032   __size_of_I2C_Master_Wait 000D  
 __size_of_I2C_Master_Stop 0009                    clrloop0 0BDF     __end_of_Lcd_Write_Char 0C80  
     end_of_initialization 002B  __size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A  
          ___lldiv@divisor 0020            ___lldiv@counter 002D                  _RCSTAbits 0018  
         I2C_Master_Init@c 002E           I2C_Master_Read@a 0020                  Lcd_Port@a 0020  
                _PORTAbits 0005                  _PORTBbits 0006              ___xxtofl@sign 0028  
                _TRISCbits 0087            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0027  
        Lcd_Write_String@i 0025                ___flmul@grs 003C                _CCP1CONbits 0017  
              _CCP2CONbits 001D                  _TXSTAbits 0098                  _Lcd_Clear 0C0F  
           __end_of___bmul 0C44             __end_of___wmul 0CC8           _Lcd_Write_String 0CC8  
              _BAUDCTLbits 0187        start_initialization 0011                __end_of_VAL 0F84  
              __end_of_isr 0711   __size_of_moverVentilador 0013          __size_of_Lcd_Init 004E  
        __size_of_Lcd_Port 0006          ??_I2C_Master_Init 0032          ??_I2C_Master_Read 0022  
        ??_I2C_Master_Wait 0020          ??_I2C_Master_Stop 0020                 ?_Lcd_Clear 0070  
                 ??___bmul 0071                   ??___wmul 0024                  __Umul8_16 0CF1  
              __pdataBANK0 006F            Lcd_Write_Char@a 0022            Lcd_Write_Char@y 0024  
                ___flmul@a 0032                  ___flmul@b 002E                __pbssCOMMON 007B  
                ___latbits 0002              __pcstackBANK0 0020          __size_of___xxtofl 00BC  
                 ?_Lcd_Cmd 0070           _I2C_Master_Start 0BE6           _I2C_Master_Write 0BF8  
         ___lwdiv@dividend 0022           ??_Lcd_Set_Cursor 0025                   VAL@valor 002C  
                 ?___flmul 002E                   ?___fltol 0048                   ?___lldiv 0020  
               ?__Umul8_16 0020                   ?___lwdiv 0020                  __pstrings 0800  
         ___lwdiv@quotient 0025             __size_of_setup 0068                  _val_USART 007B  
        interrupt_function 0004             ___wmul@product 0024                  clear_ram0 0BDE  
        ??_moverVentilador 0020                   Lcd_Cmd@a 0023                   _PIR1bits 000C  
                _valor_ADC 0056                   _POS1_LDR 007D                   _POS2_LDR 006B  
                 _POS3_LDR 006A                   _POS1_TMP 0069                   _POS2_TMP 0068  
                 _POS3_TMP 0067                ??_Lcd_Clear 0024             _bandera_buzzer 005D  
              __stringbase 0805          ___wmul@multiplier 0020           ??_Lcd_Write_Char 0021  
                 _Lcd_Init 0D9A                   _Lcd_Port 0BD8        I2C_Master_Read@temp 0024  
 __end_of_Lcd_Write_String 0CF1           __size_of_Lcd_Cmd 001C                ??__Umul8_16 0022  
            ?_alarmaBuzzer 0070           __size_of___flmul 0361           __size_of___fltol 007C  
         __size_of___lldiv 0068           __size_of___lwdiv 0046         __end_of__stringtab 0806  
          _I2C_Master_Init 0D1A            _I2C_Master_Read 07CD                   ___xxtofl 0711  
          _I2C_Master_Wait 0C02            _I2C_Master_Stop 0BEF            ___lwdiv@divisor 0020  
          ___lwdiv@counter 0027                   __ptext10 0F10                   __ptext11 0CA1  
                 __ptext20 0BF8                   __ptext12 0D54                   __ptext21 0BEF  
                 __ptext13 0CC8                   __ptext22 0BE6                   __ptext14 0C60  
                 __ptext23 07CD                   __ptext15 0DE8                   __ptext24 0C02  
                 __ptext16 0D9A                   __ptext25 05AB                   __ptext17 0C0F  
                 __ptext26 0C2F                   __ptext18 0C44                   __ptext19 0BD8  
                 _contador 0060              __size_of_main 021B             ??_alarmaBuzzer 0020  
 __end_of_I2C_Master_Start 0BEF   __end_of_I2C_Master_Write 0C02                 _INTCONbits 000B  
       Lcd_Write_Char@temp 0023                   intlevel1 0000           ___lldiv@dividend 0024  
                stringcode 0800                 _OSCCONbits 008F    __end_of_I2C_Master_Init 0D54  
  __end_of_I2C_Master_Read 07FF    __end_of_I2C_Master_Wait 0C0F    __end_of_I2C_Master_Stop 0BF8  
       Lcd_Set_Cursor@temp 002A                _valor_Servo 0058     __Umul8_16@multiplicand 0020  
         ___lldiv@quotient 0029          I2C_Master_Write@d 0020                   stringdir 0800  
                 stringtab 0800                _SSPCON2bits 0091            _moverVentilador 0C1C  
     __Umul8_16@multiplier 0028          __Umul8_16@product 0024  
